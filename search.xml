<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>『转』【译】30 分钟学会 LaTeX</title>
      <link href="30%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ALaTeX/"/>
      <url>30%E5%88%86%E9%92%9F%E5%AD%A6%E4%BC%9ALaTeX/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>送给那些有写论文需求的小伙伴 😉</p><p>顺便提一下 <a href="https://www.springer.com/journal/11042">MTAP</a> yyds!</p></blockquote><a id="more"></a><p>在本指南中，我们希望为您初步介绍一下 LaTeX 。<br />该指南不需要您具有任何 LaTeX 的<a href="https://baike.baidu.com/item/%E5%85%88%E9%AA%8C%E7%9F%A5%E8%AF%86">先验知识</a>，<br />不过到您完成时，您将会已经编写出您的第一个 LaTeX 文档，并且如果顺利的话，您将能够对 LaTeX 提供的一些基本功能有很好地了解。</p><h2 id="什么是-latex"><a class="markdownIt-Anchor" href="#什么是-latex"></a> 什么是 LaTeX ？</h2><p>LaTeX （发音为 LAY-tek or LAH-tek） 是个用于创建专业外观文档的工具。<br />它基于“所见即所得”的思想，这意味着您仅需要关注您文档的内容，接下来计算机会帮你搞定格式。<br />用户们可以输入纯文本并让 LaTeX 来处理剩余部分，而不是像 Microsoft Word 或 LibreOffice Writer 那样在页面上分割文本去控制格式。</p><blockquote><p>译者注：英式英语：/'leɪteks/ ｜ 美式英语：/'letɛks/</p></blockquote><h2 id="为什么学习-latex"><a class="markdownIt-Anchor" href="#为什么学习-latex"></a> 为什么学习 LaTeX ？</h2><p>LaTeX 在世界范围内用于科学文档，书籍以及许多其他形式的出版。<br />它不仅可以创建精美的排版文档，而且还允许用户非常快速地处理排版更为复杂的部分，例如输入数学公式、创建目录、引用和创建书目以及在所有章节中保持一致的布局。<br />由于可用的开源软件包数量众多（稍后会详细介绍），所以 LaTeX 的可能性是无穷的。<br />这些软件包允许用户使用 LaTeX 做更多的事情，比如添加脚注、绘制图表格、创建表格等。</p><p>人们使用 LaTeX 最重要的原因之一是它分离了文档的内容和样式。<br />这意味着您一旦写好了文档的内容，我们就可以轻松改变它的外观。<br />同样，您可以创建一种文档的样式，用来标准化许多不同文档的外观。<br />这使得科学期刊可以为投稿创建模版。这些模版拥有一个预制布局，而仅需要添加内容。<br />实际上，从简历到幻灯片的所有内容有上百种可用的模版。</p><h2 id="来写你的第一篇-latex-吧"><a class="markdownIt-Anchor" href="#来写你的第一篇-latex-吧"></a> 来写你的第一篇 LaTeX 吧</h2><p>第一步是创建一个新的 LaTeX 项目。<br />您可以通过创建新的 <code>.tex</code> 文件来在自己的计算机上做这件事，或者您也可以在 Overleaf 中开始一个新项目。<br />让我们从最简单的工作示例开始吧：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span>First document. This is a simple example, with noextra parameters or packages included.<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/0/01/Firstdocsmall.PNG" alt="Firstdocsmall.PNG" / loading="lazy"></p><p>你可以看到 LaTeX 已经通过缩进段落的第一行，为你处理了第一段格式。<br />让我们来仔细看一下我们代码的每个部分的功能。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/582dbc33f220531c2d4bda27/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%201&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>代码的第一行声明来文档的类型，叫做类。这个类控制文档的整体外观。<br />不同类型的文档将会需要不同的类，即简历相比一篇科学论文将需要一个不同的类。<br />在这种情况下，这个类是 <code>article</code>，一种最简单最常见的 LaTeX 类。<br />您如果正在处理其他类型的文档，那可能需要不同的类，例如 <code>book</code> 或者 <code>report</code>。</p><p>在此之后，您编写封装在 <code>\begin&#123;document&#125;</code> 和 <code>\end&#123;document&#125;</code> 标签里的文档内容。<br />这就是文档的主体。你可以在这里开始编写，并根据你的需要来修改文本。<br />你必须编译文档，才能在 <code>PDF</code> 中查看这些更改的结果。<br />你只需点击 <code>Recompile</code> 便可在 Overleaf 中执行此操作。<br />（你也可以通过点击 <code>Recompile</code> 按钮旁的小尖头，并设置 <code>Auto Compile</code> 为开，来将项目设置为在编辑文件时自动重新编译。）</p><p>如果你使用的是基础文本编辑器，例如 <code>gedit</code>、<code>emacs</code>、<code>vim</code>、<code>sublime</code>、<code>notepad</code>等，你将不得不手动编译文档。<br />为此，只需在你的计算机终端/命令行中运行 <code>pdflatex &lt;你的文档&gt;</code>。<br />有关如何执行此操作的更多信息，请参见<a href="https://en.wikibooks.org/wiki/LaTeX/Basics#Compilation">此处</a>。</p><p>如果你正在使用<a href="https://en.wikibooks.org/wiki/LaTeX/Installation#Editors">专用的 LaTeX 编辑器</a>比如 <code>TeXmaker</code> 或者 <code>TeXworks</code>，只需点击 <code>Recompile</code> 按钮。<br />如果你不确定位置在哪里，请查阅程序文档。</p><p>现在您已经了解了如何向文档中添加内容，那么下一步就是给它起个标题。 为此，我们必须简短地谈一下 <code>preamble</code> （preamble 有引言、序文之意，但是这里主要指 LaTeX 中的代码部分，所以保留原词）。</p><h2 id="一篇文档的序文"><a class="markdownIt-Anchor" href="#一篇文档的序文"></a> 一篇文档的序文</h2><p>在上一个示例中，文本是被输入在 <code>\begin &#123;document&#125;</code> 命令之后的。<br />在此之前，<code>.tex</code> 文件中的的所有内容都被称为 <code>preamble</code>。<br />在 <code>preamble</code> 中，你定义要编写的文档的类型，编写所用的语言，想要使用的包（稍后会详细介绍）和其他几个元素。<br />例如，普通文档的 <code>preamble</code> 将如下所示：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>12pt, letterpaper<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">inputenc</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>下面是每行的详细说明：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>12pt, letterpaper<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>如前所述，这定义了文档的类型。一些包含在方括号里的附加参数可以被传递给命令。<br />这些参数必须用逗号分隔。在示例中，额外的参数设置字体大小（12pt）和纸张尺寸（letterpaper）。<br />当然，可以使用其他字体大小（9pt，11pt，12pt），但是如果没有指定，则默认大小为 <code>10pt</code>。<br />至于纸张尺寸，其他可能的值是 <code>a4paper</code> 和 `legalpaper``；<br />请参阅有关页面大小和边距的文章，以获取有关此内容的更多详细信息。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">inputenc</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是文档的编码。它可以被省略或更改为其他编码，但建议使用 <code>utf-8</code>。<br />除非您特别需要其他编码，否则如果你还不确定的话，请将此行添加到 <code>preamble</code> 中。</p><h2 id="添加标题-作者和日期"><a class="markdownIt-Anchor" href="#添加标题-作者和日期"></a> 添加标题、作者和日期</h2><p>要将标题，作者和日期添加到文档中，您必须在 <code>preamble</code>（不是文档的主体）中添加三行。<br />这些行是</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\title</span><span class="token punctuation">&#123;</span>First document<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这是文档的标题。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\author</span><span class="token punctuation">&#123;</span>Hubert Farnsworth<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>在此处输入作者的姓名，并且作为一个可选项，你可以添加接下来的命令：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\thanks</span><span class="token punctuation">&#123;</span>funded by the Overleaf team<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>这可以被添加在标题命令的大括号里作者的姓名之后。它将会添加上标和有着括号内文本的脚注。<br />如果您需要在文章中感谢一个机构，该功能将非常有用。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\date</span><span class="token punctuation">&#123;</span>February 2014<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>您可以手动输入日期或使用命令 <code>\today</code>，以便在编译文档时自动更新日期。</p><p>添加这些行后，您的 <code>preamble</code> 应该看起来像这样</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">[</span>12pt, letterpaper, twoside<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">inputenc</span><span class="token punctuation">&#125;</span><span class="token function selector">\title</span><span class="token punctuation">&#123;</span>First document<span class="token punctuation">&#125;</span><span class="token function selector">\author</span><span class="token punctuation">&#123;</span>Hubert Farnsworth <span class="token function selector">\thanks</span><span class="token punctuation">&#123;</span>funded by the Overleaf team<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token function selector">\date</span><span class="token punctuation">&#123;</span>February 2017<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在，您已经为文档指定了标题，作者和日期，您可以使用 <code>\maketitle</code> 命令在文档上打印此信息。这应被包含在文档的 <code>body</code>（主体，原文加粗，作为 LaTeX 术语） 中您像要打印标题的位置。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span class="token function selector">\maketitle</span>We have now added a title, author and date to our first <span class="token function selector">\LaTeX</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> document!<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/e9/Learnlatex1.PNG" alt="Learnlatex1.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/582dbeacf220531c2d4bdaaa/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%202&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h2 id="添加注释"><a class="markdownIt-Anchor" href="#添加注释"></a> 添加注释</h2><p>与任何你正在编写的任何代码一样，包含注释通常会很有用。注释是您可以包含在文档中的几段文字，这些文字不会被打印，也不会以任何方式影响文档。在调试时，它们对于组织工作，做笔记或注释行/节很有用。要在 LaTeX 中进行注释，只需在行首写一个 ％ 符号，如下所示：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span class="token function selector">\maketitle</span>We have now added a title, author and date to our first <span class="token function selector">\LaTeX</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> document!<span class="token comment">% This line here is a comment. It will not be printed in the document.</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/e9/Learnlatex1.PNG" alt="Learnlatex1.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a308db13712fef4e9deff7/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%203&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h2 id="粗体斜体和下划线"><a class="markdownIt-Anchor" href="#粗体斜体和下划线"></a> 粗体，斜体和下划线</h2><p>现在，我们来看一些简单的文本格式命令。</p><ul><li><strong>粗体</strong>：LaTeX 中的粗体文本使用 <code>\textbf&#123;...&#125;</code> 命令编写。</li><li><em>斜体</em>：LaTeX 中的斜体文本使用 <code>\textit&#123;...&#125;</code> 命令编写。</li><li><u>下划线</u>：LaTeX 中带下划线的文本使用 <code>\underline&#123;...&#125;</code> 命令编写。</li></ul><p>下面展示了其中每个实例的示例：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">Some of the <span class="token function selector">\textbf</span><span class="token punctuation">&#123;</span>greatest<span class="token punctuation">&#125;</span>discoveries in <span class="token function selector">\underline</span><span class="token punctuation">&#123;</span>science<span class="token punctuation">&#125;</span>were made by <span class="token function selector">\textbf</span><span class="token punctuation">&#123;</span><span class="token function selector">\textit</span><span class="token punctuation">&#123;</span>accident<span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span>.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/a/a9/Biu1.png" alt="Biu1.png" / loading="lazy"></p><p>另一个非常有用的命令是 <code>\emph&#123;...&#125;</code> 命令。实际上，<code>\emph</code> 命令使用其参数的操作取决于上下文 - 在普通文本中，强调的文本是斜体，但是如果在斜体文本中使用，则此行为是相反的 - 请参见以下示例：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&#123;</span>discoveries<span class="token punctuation">&#125;</span>in sciencewere made by accident.<span class="token function selector">\textit</span><span class="token punctuation">&#123;</span>Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&#123;</span>discoveries<span class="token punctuation">&#125;</span>in sciencewere made by accident.<span class="token punctuation">&#125;</span><span class="token function selector">\textbf</span><span class="token punctuation">&#123;</span>Some of the greatest <span class="token function selector">\emph</span><span class="token punctuation">&#123;</span>discoveries<span class="token punctuation">&#125;</span>in sciencewere made by accident.<span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/5/5d/Biu5.png" alt="Biu5.png" / loading="lazy"></p><p>此外，某些软件包，例如 <a href="https://cn.overleaf.com/learn/Beamer"><code>Beamer</code></a>，更改了 <code>\emph</code> 命令的行为方式。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30a6813712fef4e9df06b/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%204&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h2 id="添加图像"><a class="markdownIt-Anchor" href="#添加图像"></a> 添加图像</h2><p>现在，我们将研究如何将图像添加到 LaTeX 文档中。在 Overleaf 上，您首先必须<a href="https://cn.overleaf.com/learn/Including_images_in_ShareLaTeX">上传图像</a>。</p><p>以下是一个如何包含图片的示例。</p><blockquote><p>译者注：前文使用的是 image ，这里使用的是 picture ，所以分别译为图像、图片。</p></blockquote><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span class="token function selector">\usepackage</span><span class="token punctuation">&#123;</span><span class="token keyword">graphicx</span><span class="token punctuation">&#125;</span><span class="token function selector">\graphicspath</span><span class="token punctuation">&#123;</span> <span class="token punctuation">&#123;</span>images/<span class="token punctuation">&#125;</span> <span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span>The universe is immense and it seems to be homogeneous,in a large scale, everywhere we look at.<span class="token function selector">\includegraphics</span><span class="token punctuation">&#123;</span>universe<span class="token punctuation">&#125;</span>There's a picture of a galaxy above<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/9/9d/InsertingImagesEx1.png" alt="InsertingImagesEx1.png" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30b7413712fef4e9df0a8/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%205&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>LaTeX 不能单独管理图像，因此您需要使用一个包。包可用于更改 LaTeX 文档的默认外观，或允许更多功能。<br />这种情况下，您需要在我们的文档中包含一个图像，因此您应该使用 <code>graphicx</code> 包。<br />该软件包提供了新命令 <code>\includegraphics&#123;...&#125;</code> 和 <code>\graphicspath&#123;...&#125;</code>。<br />要使用 <code>graphicx</code> 包，请在你的 <code>preamble</code> 中包含以下行：<code>\usepackage&#123;graphicx&#125;</code>。</p><p>命令 `\graphicspath{ {images/} }告诉 LaTeX，图像被保存在当前目录下名为 <em>images</em> 的文件夹中。</p><p><code>\includegraphics&#123;universe&#125;</code> 是将图像实际包含在文档中的命令。<br />这里的 <em>universe</em>（宇宙）是包含图像的文件不带扩展名时的名称，所以 <em>universe.PNG</em> 就变成了 <em>universe</em>。<br />图像的文件名不应包含空格或多个点。</p><blockquote><p>注意：文件扩展名是被允许包括进来的，但是最好忽略它。如果省略文件扩展名，它将提示 LaTeX 搜索所有支持的格式。在上传图像文件时，通常也建议使用小写字母作为文件扩展名。有关更多详细信息，请参见<a href="https://cn.overleaf.com/learn/latex/Learn_LaTeX_in_30_minutes#Generating_high-res_and_low-res_images">生成高分辨率和低分辨率图像</a>的部分。<br />译者注：该段落原文给出的链接无法跳转到相应的信息部分。</p></blockquote><h2 id="标题标签和参考"><a class="markdownIt-Anchor" href="#标题标签和参考"></a> 标题，标签和参考</h2><p>可以通过图形环境对图像添加标题、标签和引用，如下所示：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">figure</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span>h<span class="token punctuation">]</span>    <span class="token function selector">\centering</span>    <span class="token function selector">\includegraphics</span><span class="token punctuation">[</span>width=0.25<span class="token function selector">\textwidth</span><span class="token punctuation">]</span><span class="token punctuation">&#123;</span>mesh<span class="token punctuation">&#125;</span>    <span class="token function selector">\caption</span><span class="token punctuation">&#123;</span>a nice plot<span class="token punctuation">&#125;</span>    <span class="token function selector">\label</span><span class="token punctuation">&#123;</span><span class="token keyword">fig:mesh1</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">figure</span><span class="token punctuation">&#125;</span>As you can see in the figure <span class="token function selector">\ref</span><span class="token punctuation">&#123;</span><span class="token keyword">fig:mesh1</span><span class="token punctuation">&#125;</span>, thefunction grows near 0. Also, in the page <span class="token function selector">\pageref</span><span class="token punctuation">&#123;</span>fig:mesh1<span class="token punctuation">&#125;</span>is the same example.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/25/InsertingImages.PNG" alt="InsertingImages.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30c5613712fef4e9df0e8/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%206&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>该示例中包含三个重要的命令：</p><ul><li><code>\caption&#123;a nice plot&#125;</code>：您可能会期望此命令为图形设置标题。如果你创建了一个图形列表，那么标题将会被用在这里。您可以将其放在图的上方或下方。</li><li><code>\label&#123;fig:mesh1&#125;</code>：如果您需要在文档中引用图像，请使用此命令设置标签。标签将为图像编号，并与下一个命令结合使用，以供您参考。</li><li><code>\ref&#123;fig:mesh1&#125;</code>：该代码将替换为与参考图相对应的数字。</li></ul><p>将图像放置在 LaTeX 文档中时，我们应始终将它们放置在图形环境或类似环境中，以便 LaTeX 可以用适合您剩余文本的方式放置图像。</p><blockquote><p>注意：如果您在自己的计算机上使用标题和参考，那你将必须编译两次文档才能使参考正常工作。Overleaf 会自动为您完成此操作。</p></blockquote><h2 id="在-latex-中创建列表"><a class="markdownIt-Anchor" href="#在-latex-中创建列表"></a> 在 LaTeX 中创建列表</h2><p>在 LaTeX 中创建列表非常简单。您可以使用不同的列表环境创建列表。<br />环境是我们文档中您希望以与文档其余部分不同方式进行呈现的部分。<br />它们以 <code>\begin&#123;...&#125;</code> 命令开始，以 <code>\end&#123;...&#125;</code> 命令结束。</p><p>列表主要有两种不同的类型，有序列表和无序列表。各自将使用不同的环境。</p><h3 id="无序列表"><a class="markdownIt-Anchor" href="#无序列表"></a> 无序列表</h3><p>无序列表是由 <code>itemize</code>（逐项列记之意，原文为专有名词）环境生成的。每个条目之前必须带有控制序列 <code>\item</code>，如下所示。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">itemize</span><span class="token punctuation">&#125;</span>  <span class="token function selector">\item</span> The individual entries are indicated with a black dot, a so-called bullet.  <span class="token function selector">\item</span> The text in the entries may be of any length.<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">itemize</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/e/ea/Itemize.png" alt="Itemize.png" / loading="lazy"></p><p>默认情况下，各个独立的条目都用黑点标示，即所谓的项目符号。条目中的文本可以有任意长度。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52fe74766a6237452e000088/download/zip&amp;templateName=Lists%20Examples&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h3 id="有序列表"><a class="markdownIt-Anchor" href="#有序列表"></a> 有序列表</h3><p>在不同环境中，有序列表具有相同的句法规则。我们使用 <code>enumerate</code>（枚举之意，原文为专有名词）环境制作有序列表：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">enumerate</span><span class="token punctuation">&#125;</span>  <span class="token function selector">\item</span> This is the first entry in our list  <span class="token function selector">\item</span> The list numbers increase with each entry we add<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">enumerate</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/3/3a/Enumerate.png" alt="Enumerate.png" / loading="lazy"></p><p>与无序列表一样，每个条目之前必须带有控制序列 <code>\item</code>，它将自动生成标记该项目的数字。枚举标签由从 1 开始的序列号组成。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52fe74766a6237452e000088/download/zip&amp;templateName=Lists%20Examples&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h2 id="为-latex-添加数学符号"><a class="markdownIt-Anchor" href="#为-latex-添加数学符号"></a> 为 LaTeX 添加数学符号</h2><p>LaTeX 的主要优点之一是易于编写数学表达式。<br />LaTeX 允许两种用于数学表达式的书写模式：<code>inline</code>（内联）模式和 <code>display</code>（显示）模式。<br />第一种方式用于编写作为文本一部分的公式。第二种方式用于编写不属于文本或段落的表达式，因此被放在单独的行上。<br />让我们看一个 <code>inline</code> 模式的例子：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">In physics, the mass-energy equivalence is statedby the equation <span class="token equation string">$E=mc^2$</span>, discovered in 1905 by Albert Einstein.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/db/Einstein1.png" alt="Einstein1.png" / loading="lazy"></p><p>要使用 <code>inline</code> 模式来放置方程式，请使用以下定界符之一：<code>\( ... \)</code>，<code>$ ... $</code> 或 <code>\begin&#123;math&#125; ... \end&#123;math&#125;</code>。它们都能够起作用，选择那种取决于个人口味。</p><p><code>displayed</code> 模式有两种版本：已编号和未编号。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">The mass-energy equivalence is described by the famous equation<span class="token equation string">\[ E=mc^2 \]</span>discovered in 1905 by Albert Einstein.In natural units (<span class="token equation string">$c = 1$</span>), the formula expresses the identity<span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">equation</span><span class="token punctuation">&#125;</span><span class="token equation string">E=m</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">equation</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/3/3a/Einstein2.png" alt="Einstein2.png" / loading="lazy"></p><p>要在 <code>display</code> 模式下打印方程式，请使用以下定界符之一：<code>\[ ... \]</code>，<code>\begin&#123;displaymath&#125; ... \end&#123;displaymath&#125;</code> 或 <code>\begin&#123;equation&#125; ... \end&#123;equation&#125;</code>。<br /><a href="https://texfaq.org/FAQ-dolldoll">不鼓励</a>使用 <code>$$ ... $$</code>，因为它会产生不一致的间距，并且和某些数学程序包一起使用时可能表现得不是很好。</p><blockquote><p>重要说明：equation* 环境是由外部软件包提供的，请参阅 <a href="https://cn.overleaf.com/learn/Aligning_equations">amsmath</a> 的文章。</p></blockquote><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/52ec4e44b43917a25a000e96/download/zip&amp;templateName=Math%20Expressions&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>许多数学模式命令都需要 <code>amsmath</code> 程序包，因此在编写数学公式时请确保将其包括在内。<br />下面显示了一些基本数学模式命令的示例。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">Subscripts in math mode are written as <span class="token equation string">$a_b$</span> and superscripts are written as <span class="token equation string">$a^b$</span>. These can be combined an nested to write expressions such as<span class="token equation string">\[ T^&#123;i_1 i_2 <span class="token equation-command regex">\dots</span> i_p&#125;_&#123;j_1 j_2 <span class="token equation-command regex">\dots</span> j_q&#125; = T(x^&#123;i_1&#125;,<span class="token equation-command regex">\dots</span>,x^&#123;i_p&#125;,e_&#123;j_1&#125;,<span class="token equation-command regex">\dots</span>,e_&#123;j_q&#125;) \]</span>We write integrals using <span class="token equation string">$<span class="token equation-command regex">\int</span>$</span> and fractions using <span class="token equation string">$<span class="token equation-command regex">\frac</span>&#123;a&#125;&#123;b&#125;$</span>. Limits are placed on integrals using superscripts and subscripts:<span class="token equation string">\[ <span class="token equation-command regex">\int</span>_0^1 <span class="token equation-command regex">\frac</span>&#123;1&#125;&#123;e^x&#125; =  <span class="token equation-command regex">\frac</span>&#123;e-1&#125;&#123;e&#125; \]</span>Lower case Greek letters are written as <span class="token equation string">$<span class="token equation-command regex">\omega</span>$</span> <span class="token equation string">$<span class="token equation-command regex">\delta</span>$</span> etc. while upper case Greek letters are written as <span class="token equation string">$<span class="token equation-command regex">\Omega</span>$</span> <span class="token equation string">$<span class="token equation-command regex">\Delta</span>$</span>.Mathematical operators are prefixed with a backslash as <span class="token equation string">$<span class="token equation-command regex">\sin</span>(<span class="token equation-command regex">\beta</span>)$</span>, <span class="token equation string">$<span class="token equation-command regex">\cos</span>(<span class="token equation-command regex">\alpha</span>)$</span>, <span class="token equation string">$<span class="token equation-command regex">\log</span>(x)$</span> etc.<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/22/Math.PNG" alt="Math.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30cfd13712fef4e9df123/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%207&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>在 LaTeX 中数学的可能性是无穷的，不可能在这里将它们都列出来。<br />请务必查看我们这儿的其他文章</p><ul><li><a href="https://cn.overleaf.com/learn/Mathematical_expressions">数学表达式 - Mathematical expressions</a></li><li><a href="https://cn.overleaf.com/learn/Subscripts_and_superscripts">下标和上标 - Subscripts and superscripts</a></li><li><a href="https://cn.overleaf.com/learn/Brackets_and_Parentheses">方括号和圆括号 - Brackets and Parentheses</a></li><li><a href="https://cn.overleaf.com/learn/Fractions_and_Binomials">分数和二项式 - Fractions and Binomials</a></li><li><a href="https://cn.overleaf.com/learn/Aligning_equations_with_amsmath">对齐等式 - Aligning Equations</a></li><li><a href="https://cn.overleaf.com/learn/Operators">运算符 - Operators</a></li><li><a href="https://cn.overleaf.com/learn/Spacing_in_math_mode">数学模式下的间距 - Spacing in math mode</a></li><li><a href="https://cn.overleaf.com/learn/Integrals,_sums_and_limits">积分，总和与极限 - Integrals, sums and limits</a></li><li><a href="https://cn.overleaf.com/learn/Display_style_in_math_mode">在数学模式下显示样式 - Display style in math mode</a></li><li><a href="https://cn.overleaf.com/learn/List_of_Greek_letters_and_math_symbols">希腊字母和数学符号列表 - List of Greek letters and math symbols</a></li><li><a href="https://cn.overleaf.com/learn/Mathematical_fonts">数学字体 - Mathematical fonts</a></li></ul><h2 id="基本格式"><a class="markdownIt-Anchor" href="#基本格式"></a> 基本格式</h2><p>现在，我们将研究如何编写摘要，以及如何将 LaTeX 文档格式化为不同的章、节和段落。</p><h3 id="摘要"><a class="markdownIt-Anchor" href="#摘要"></a> 摘要</h3><p>在科学文献中，通常的做法是简要概述论文的主题。<br />在 LaTeX 中有一个 <code>abstract</code>（摘要）的环境。<code>abstract</code> 环境会将文本以特殊格式放在你文档的顶部。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">abstract</span><span class="token punctuation">&#125;</span>This is a simple paragraph at the beginning of thedocument. A brief introduction about the main subject.<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">abstract</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/db/Abstractsmall.PNG" alt="Abstractsmall.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30dd713712fef4e9df14e/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%208&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h3 id="段落和换行符"><a class="markdownIt-Anchor" href="#段落和换行符"></a> 段落和换行符</h3><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">abstract</span><span class="token punctuation">&#125;</span>This is a simple paragraph at the beginning of thedocument. A brief introduction about the main subject.<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">abstract</span><span class="token punctuation">&#125;</span>Now that we have written our abstract, we can begin writing our first paragraph.This line will start a second Paragraph.<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/d/d3/Abstractnonewline.PNG" alt="Abstractnonewline.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30dd713712fef4e9df14e/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%208&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>在编写文档内容时，如果需要开始新的段落，你必须按两次 “Enter” 键（以插入双空行）。<br />注意，LaTeX 会自动缩进段落。</p><p>想要开始新行而不实际开始新段落，请插入一个<em>换行</em>点，这可以通过 \（在示例中为双反斜杠）或 <code>\newline</code> 命令来实现。</p><p>注意不要使用多个 \ 或 <code>\newlines</code> 来“模拟”段落之间具有较大间距的段落，因为这可能会干扰 LaTeX 的排版算法。<br />推荐的方法是继续使用双空行创建没有任何 \ 的新段落，然后将 <code>\usepackage&#123;parskip&#125;</code> 添加到序言中。</p><p>您可以在 <a href="https://cn.overleaf.com/learn/Paragraphs_and_new_lines">段落和换行</a> 文章中找到更多信息。</p><h3 id="章节"><a class="markdownIt-Anchor" href="#章节"></a> 章节</h3><p>组织文档的命令因文档类型而异，最简单的组织形式是分段，所有格式均可用。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\chapter</span><span class="token punctuation">&#123;</span><span class="token headline class-name">First Chapter</span><span class="token punctuation">&#125;</span><span class="token function selector">\section</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Introduction</span><span class="token punctuation">&#125;</span>This is the first section.Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscingelit.   Etiam  lobortisfacilisis sem.  Nullam nec mi etneque pharetra sollicitudin.  Praesent imperdietmi nec ante.Donec ullamcorper, felis non sodales...<span class="token function selector">\section</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Second Section</span><span class="token punctuation">&#125;</span>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Etiam lobortis facilisissem.  Nullam nec mi et neque pharetrasollicitudin.  Praesent imperdiet mi necante...<span class="token function selector">\subsection</span><span class="token punctuation">&#123;</span><span class="token headline class-name">First Subsection</span><span class="token punctuation">&#125;</span>Praesent imperdietmi nec ante. Donec ullamcorper, felis non sodales...<span class="token function selector">\section*</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Unnumbered Section</span><span class="token punctuation">&#125;</span>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Etiam lobortis facilisissem<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/7/7c/Sections1.PNG" alt="Sections1.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a30e7b13712fef4e9df182/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%209&amp;compiler=pdflatex">Open an example in Overleaf</a></p><p>命令 <code>\section&#123;&#125;</code> 标记新节的开始，在大括号内设置标题。<br />段编号是自动生成的，可以通过在段命令中包含 * 作为 <code>\section*&#123;&#125;</code>来禁用。 我们也可以有多个<code>\subsection&#123;&#125;</code>，也可以有多个<code>\subsubsection&#123;&#125;</code>。下面列出了基本的深度级别：</p><table><thead><tr><th>-1</th><th>\part{part}</th></tr></thead><tbody><tr><td>0</td><td>\chapter{chapter}</td></tr><tr><td>1</td><td>\section{section}</td></tr><tr><td>2</td><td>\subsection{subsection}</td></tr><tr><td>3</td><td>\subsubsection{subsubsection}</td></tr><tr><td>4</td><td>\paragraph{paragraph}</td></tr><tr><td>5</td><td>\subparagraph{subparagraph}</td></tr></tbody></table><p>请注意，<code>\part</code> 和 <code>\chapter</code> 仅在 <code>report</code>（报告）和 <code>book</code>（书籍）文档类中可用。</p><p>有关文档结构的更完整讨论，请参见<a href="https://cn.overleaf.com/learn/Sections_and_chapters">有关节和章的文章</a>。</p><h2 id="创建表格"><a class="markdownIt-Anchor" href="#创建表格"></a> 创建表格</h2><h3 id="在-latex-中创建一个简单的表"><a class="markdownIt-Anchor" href="#在-latex-中创建一个简单的表"></a> 在 LaTeX 中创建一个简单的表</h3><p>下面，您可以看到一个表格最简单的工作示例</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span> c c c <span class="token punctuation">&#125;</span> cell1 <span class="token punctuation">&amp;</span> cell2 <span class="token punctuation">&amp;</span> cell3 <span class="token function selector">\\</span> cell4 <span class="token punctuation">&amp;</span> cell5 <span class="token punctuation">&amp;</span> cell6 <span class="token function selector">\\</span> cell7 <span class="token punctuation">&amp;</span> cell8 <span class="token punctuation">&amp;</span> cell9<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/c/c2/TablesEx1.png" alt="TablesEx1.png" / loading="lazy"></p><p><code>tabular</code>（表格）环境是 LaTeX 创建表格的默认方法。您必须为此环境指定一个参数，在这种情况下为 <code>&#123;c c c&#125;</code>。<br />这告诉 LaTeX 这里将有三列，并且每列中的文本必须居中。您也可以使用 <code>r</code> 将文本向右对齐，使用 <code>l</code> 进行左对齐。<br />对齐符号 <code>＆</code> 用于指定表格条目中的分隔符。每行中的对齐符号必须始终少于列数。<br />要转到表格的下一行，我们使用<em>换行</em>命令 <code>\\</code>。我们将整个表格包装在 <code>center</code>（中心）环境中，以便它出现在页面的中心。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h3 id="添加边框"><a class="markdownIt-Anchor" href="#添加边框"></a> 添加边框</h3><p><code>tabular</code> 环境更加灵活，您可以在每列之间放置分隔线。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span> |c|c|c| <span class="token punctuation">&#125;</span> <span class="token function selector">\hline</span> cell1 <span class="token punctuation">&amp;</span> cell2 <span class="token punctuation">&amp;</span> cell3 <span class="token function selector">\\</span> cell4 <span class="token punctuation">&amp;</span> cell5 <span class="token punctuation">&amp;</span> cell6 <span class="token function selector">\\</span> cell7 <span class="token punctuation">&amp;</span> cell8 <span class="token punctuation">&amp;</span> cell9 <span class="token function selector">\\</span> <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/25/TablesEx2.png" alt="TablesEx2.png" / loading="lazy"></p><p>您可以使用水平线命令 <code>\hline</code> 和垂直线参数 <code>|</code> 添加边框。</p><ul><li><code>&#123; |c|c|c| &#125;</code>：这声明了被垂直线分割的三列，并将被应用在表格中。<code>|</code> 符号指定这些列应由一条垂直线分隔。</li><li><code>\hline</code>：这将插入一条水平线。在这里，我们在表格的顶部和底部包括了水平线。你使用 <code>\hline</code> 的次数没有限制。</li></ul><p>在下面您可以看到第二个示例。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span> <span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>||c c c c||<span class="token punctuation">&#125;</span> <span class="token function selector">\hline</span> Col1 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col3 <span class="token function selector">\\</span> <span class="token punctuation">[</span>0.5ex<span class="token punctuation">]</span> <span class="token function selector">\hline</span><span class="token function selector">\hline</span> 1 <span class="token punctuation">&amp;</span> 6 <span class="token punctuation">&amp;</span> 87837 <span class="token punctuation">&amp;</span> 787 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 2 <span class="token punctuation">&amp;</span> 7 <span class="token punctuation">&amp;</span> 78 <span class="token punctuation">&amp;</span> 5415 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 3 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 778 <span class="token punctuation">&amp;</span> 7507 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 4 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 18744 <span class="token punctuation">&amp;</span> 7560 <span class="token function selector">\\</span> <span class="token function selector">\hline</span> 5 <span class="token punctuation">&amp;</span> 88 <span class="token punctuation">&amp;</span> 788 <span class="token punctuation">&amp;</span> 6344 <span class="token function selector">\\</span> <span class="token punctuation">[</span>1ex<span class="token punctuation">]</span> <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">center</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/2c/TablesEx3.png" alt="TablesEx3.png" / loading="lazy"></p><p>有时在 LaTeX 中创建表格可能会有些棘手，因此您可能想使用 <a href="https://www.tablesgenerator.com/">TablesGenerator.com</a> 在线工具导出表格的 [LaTeX] 代码。<code>File &gt; Paste table data</code>（文件 &gt; 粘贴表格数据）选项使您可以从电子表格应用程序复制和粘贴数据。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h3 id="表格说明标题标签和参考"><a class="markdownIt-Anchor" href="#表格说明标题标签和参考"></a> 表格说明（标题），标签和参考</h3><p>您可以使用与图像几乎相同的方式添加标题和引用表格。唯一的区别是，使用 <code>table</code>（表）环境代替了 <code>figure</code>（图）环境。</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex">Table <span class="token function selector">\ref</span><span class="token punctuation">&#123;</span><span class="token keyword">table:data</span><span class="token punctuation">&#125;</span> is an example of referenced <span class="token function selector">\LaTeX</span><span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span> elements.<span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">table</span><span class="token punctuation">&#125;</span><span class="token punctuation">[</span>h!<span class="token punctuation">]</span><span class="token function selector">\centering</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>||c c c c||<span class="token punctuation">&#125;</span> <span class="token function selector">\hline</span> Col1 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col2 <span class="token punctuation">&amp;</span> Col3 <span class="token function selector">\\</span> <span class="token punctuation">[</span>0.5ex<span class="token punctuation">]</span> <span class="token function selector">\hline</span><span class="token function selector">\hline</span> 1 <span class="token punctuation">&amp;</span> 6 <span class="token punctuation">&amp;</span> 87837 <span class="token punctuation">&amp;</span> 787 <span class="token function selector">\\</span> 2 <span class="token punctuation">&amp;</span> 7 <span class="token punctuation">&amp;</span> 78 <span class="token punctuation">&amp;</span> 5415 <span class="token function selector">\\</span> 3 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 778 <span class="token punctuation">&amp;</span> 7507 <span class="token function selector">\\</span> 4 <span class="token punctuation">&amp;</span> 545 <span class="token punctuation">&amp;</span> 18744 <span class="token punctuation">&amp;</span> 7560 <span class="token function selector">\\</span> 5 <span class="token punctuation">&amp;</span> 88 <span class="token punctuation">&amp;</span> 788 <span class="token punctuation">&amp;</span> 6344 <span class="token function selector">\\</span> <span class="token punctuation">[</span>1ex<span class="token punctuation">]</span> <span class="token function selector">\hline</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">tabular</span><span class="token punctuation">&#125;</span><span class="token function selector">\caption</span><span class="token punctuation">&#123;</span>Table to test captions and labels<span class="token punctuation">&#125;</span><span class="token function selector">\label</span><span class="token punctuation">&#123;</span><span class="token keyword">table:data</span><span class="token punctuation">&#125;</span><span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">table</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/2/26/Ourtablelabel.PNG" alt="Ourtablelabel.PNG" / loading="lazy"></p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3101d13712fef4e9df258/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2010&amp;compiler=pdflatex">Open an example in Overleaf</a></p><blockquote><p>注意：如果您在自己的计算机上使用标题说明和参考，则必须编译两次文档才能使参考正常工作。Overleaf 会自动为您完成此操作。</p></blockquote><h3 id="添加目录"><a class="markdownIt-Anchor" href="#添加目录"></a> 添加目录</h3><p>创建目录很简单，命令 <code>\tableofcontents</code> 为您完成所有的工作：</p><pre class="line-numbers language-latex" data-language="latex"><code class="language-latex"><span class="token function selector">\documentclass</span><span class="token punctuation">&#123;</span><span class="token keyword">article</span><span class="token punctuation">&#125;</span><span class="token function selector">\usepackage</span><span class="token punctuation">[</span>utf8<span class="token punctuation">]</span><span class="token punctuation">&#123;</span><span class="token keyword">inputenc</span><span class="token punctuation">&#125;</span><span class="token function selector">\title</span><span class="token punctuation">&#123;</span>Sections and Chapters<span class="token punctuation">&#125;</span><span class="token function selector">\author</span><span class="token punctuation">&#123;</span>Gubert Farnsworth<span class="token punctuation">&#125;</span><span class="token function selector">\date</span><span class="token punctuation">&#123;</span> <span class="token punctuation">&#125;</span><span class="token function selector">\begin</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span class="token function selector">\maketitle</span><span class="token function selector">\tableofcontents</span><span class="token function selector">\section</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Introduction</span><span class="token punctuation">&#125;</span>This is the first section.Lorem  ipsum  dolor  sit  amet,  consectetuer  adipiscingelit.   Etiam  lobortisfacilisis sem.  Nullam nec mi etneque pharetra sollicitudin.  Praesent imperdietmi nec ante.Donec ullamcorper, felis non sodales...<span class="token function selector">\addcontentsline</span><span class="token punctuation">&#123;</span>toc<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>section<span class="token punctuation">&#125;</span><span class="token punctuation">&#123;</span>Unnumbered Section<span class="token punctuation">&#125;</span><span class="token function selector">\section*</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Unnumbered Section</span><span class="token punctuation">&#125;</span>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Etiam lobortis facilisissem.  Nullam nec mi et neque pharetrasollicitudin.  Praesent imperdiet mi necante...<span class="token function selector">\section</span><span class="token punctuation">&#123;</span><span class="token headline class-name">Second Section</span><span class="token punctuation">&#125;</span>Lorem ipsum dolor sit amet, consectetuer adipiscing elit.Etiam lobortis facilisissem.  Nullam nec mi et neque pharetrasollicitudin.  Praesent imperdiet mi necante...<span class="token function selector">\end</span><span class="token punctuation">&#123;</span><span class="token keyword">document</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/6/6d/TableOfContentsEx1.png" alt="TableOfContentsEx1.png" / loading="lazy"></p><p>节，小节和章将自动被包含在目录中。要手动添加条目（例如，当您想要一个未编号的部分时），请使用示例中的命令 <code>\addcontentsline</code>。</p><p><a href="https://www.sharelatex.com/project/new/template?zipUrl=/project/58a3103d13712fef4e9df25b/download/zip&amp;templateName=Learn%20LaTeX%20in%2020%20minutes:%20Part%2011&amp;compiler=pdflatex">Open an example in Overleaf</a></p><h2 id="下载你完成的文件"><a class="markdownIt-Anchor" href="#下载你完成的文件"></a> 下载你完成的文件</h2><p>您可以通过从上方的左侧菜单中点击 PDF 下载你完成的 PDF。<br />还有一个更快的选择就是单击 PDF 查看器上的 <code>Download PDF</code>（下载 PDF）按钮，如下所示。</p><p><img src="https://sharelatex-wiki-cdn-671420.c.cdn77.org/learn-scripts/images/6/6c/Downloadpdf.PNG" alt="Downloadpdf.PNG" / loading="lazy"></p><div class="warning"><blockquote><p><strong>转载声明</strong></p><p>原文作者：<a href="https://github.com/YunYouJun">云游君</a></p><p>原文链接：<a href="https://www.yunyoujun.cn/share/trans-learn-latex-in-30-minutes">https://www.yunyoujun.cn/share/trans-learn-latex-in-30-minutes</a></p></blockquote></div>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Fuck 信仰不息</title>
      <link href="fuckxybx/"/>
      <url>fuckxybx/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>感谢同学 <a href="https://github.com/Vampirehh">Vampirehh</a> 提供源代码 👏</p><p>我提供了 Github Actions 定时运行的思路 😉</p></blockquote><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Heroku搭建V2ray教程</title>
      <link href="Heroku-V2ray/"/>
      <url>Heroku-V2ray/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="必要条件"><a class="markdownIt-Anchor" href="#必要条件"></a> 必要条件</h2><div class="warning"><blockquote><ol><li><a href="https://www.heroku.com/">Heruku</a> 账号</li><li>科学上网环境</li><li><a href="https://www.cloudflare.com/zh-cn/">Cloudflare</a> 账号</li></ol></blockquote></div><p><strong>免费且高速！</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704133351.png" alt="image-20210704133351782" / loading="lazy"></p><a id="more"></a><h2 id="开始部署"><a class="markdownIt-Anchor" href="#开始部署"></a> 开始部署</h2><blockquote><ul><li>科学上网环境也许不是必要条件，主要是因为国内网络打开Heroku有点慢，所以有科学上网环境会使整个过程更加顺利一些。</li><li>注册账号的过程不予截图展示，先去注册好账号再来操作。</li></ul></blockquote><h3 id="打开项目"><a class="markdownIt-Anchor" href="#打开项目"></a> 打开项目</h3><p>首先，打开 <a href="https://github.com/w-gx/Heroku-xray-trojangows-ssws">Github项目</a> 地址，点击<code>部署到Heroku</code>紫色按钮。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704134010.png" alt="image-20210704134010708" / loading="lazy"></p><p>对于刚注册的Heroku账户，会弹出服务协议页面，点击接受就好了。<strong>正确的页面如下图所示，如果点击接受之后没有出现下面这个界面，可以重新打开GitHub项目点击部署按钮进行尝试。</strong></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704140120.png" alt="image-20210704140120049" / loading="lazy"></p><p><strong>此处的 APP name 在 Cloudflare 代理中还会用到，小白应该记住这个名字。当然了，这些信息其实都是可以查看的，熟练使用的话不需要刻意记。</strong></p><h3 id="生成uuid"><a class="markdownIt-Anchor" href="#生成uuid"></a> 生成UUID</h3><ol><li><p>打开 V2rayN 客户端，点击<code>服务器</code>-&gt;<code>添加VMess服务器</code></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704140339.png" alt="image-20210704140339498" / loading="lazy"></p></li><li><p>点击<code>生成</code>按钮，记录用户ID并填入部署界面AUUID中。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704140610.png" alt="image-20210704140610760" / loading="lazy"></p></li></ol><h3 id="部署"><a class="markdownIt-Anchor" href="#部署"></a> 部署</h3><p>点击<code>Deploy app</code>按钮，如下显示即为部署成功。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704140829.png" alt="image-20210704140829818" / loading="lazy"></p><p>点击<code>Manage APP</code>，进入管理页面，点击<code>Setting</code>,可以查看APP的详细信息，在域名栏中可以看到自己的项目地址，点击这个地址跳转到部署的伪装网站中，伪装网站默认为 Caddy works！</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704141229.png" alt="image-20210704141229664" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704141310.png" alt="image-20210704141310012" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704141344.png" alt="image-20210704141344808" / loading="lazy"></p><h2 id="cloudflare-代理"><a class="markdownIt-Anchor" href="#cloudflare-代理"></a> Cloudflare 代理</h2><ol><li><p>登录后点击 <code>Workers</code></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704141830.png" alt="image-20210704141830314" / loading="lazy"></p></li><li><p>点击<code>创建Worker</code></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704141927.png" alt="image-20210704141927438" / loading="lazy"></p></li><li><p>在弹出页面中的脚本填入下面的代码，并按图示步骤操作。</p><pre class="line-numbers language-脚本" data-language="脚本"><code class="language-脚本">const SingleDay &#x3D; &#39;应用程序名1.herokuapp.com&#39;const DoubleDay &#x3D; &#39;应用程序名2.herokuapp.com&#39;addEventListener(    &quot;fetch&quot;,event &#x3D;&gt; &#123;            let nd &#x3D; new Date();        if (nd.getDate()%2) &#123;            host &#x3D; SingleDay        &#125; else &#123;            host &#x3D; DoubleDay        &#125;                let url&#x3D;new URL(event.request.url);        url.hostname&#x3D;host;        let request&#x3D;new Request(url,event.request);        event. respondWith(            fetch(request)        )    &#125;)<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704142810.png" alt="image-20210704142810175" / loading="lazy"></p></li><li><p>获取新的代理地址。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704143014.png" alt="image-20210704143013911" / loading="lazy"></p></li></ol><h2 id="客户端节点添加"><a class="markdownIt-Anchor" href="#客户端节点添加"></a> 客户端节点添加</h2><p>以v2rayN客户端为例，添加VMess服务器，信息填写如下图所示。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/v2ray/20210704144034.png" alt="image-20210704144034141" / loading="lazy"></p><div class="danger"><blockquote><p>速度挺快的，Youtube 1080p 轻松。</p><p>缺点是不能上 Google 学术。</p><p>流媒体我没测试，大概率应该也上不去。</p></blockquote></div>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>甜</title>
      <link href="tian/"/>
      <url>tian/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>原本想着至少一个月写一篇博客</p></blockquote><div class="warning"><blockquote><p>可是没想到连这都很难坚持</p></blockquote></div><div class="info"><blockquote><p>六月愉快玩耍</p></blockquote></div><div class="success"><blockquote><p><a href="https://weibo.com/u/6058250261">霜霜</a>让我的生活从黑白变成彩色</p></blockquote></div><div class="danger"><blockquote><p>七月努力科研</p></blockquote></div><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> 结绳记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>低落的5月</title>
      <link href="zcd5y/"/>
      <url>zcd5y/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="0d622068c551149b25dbf728e18bf1665784d1249b9013571ce33a325e23e002"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">点击输入密码.</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 结绳记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>滨海路徒步</title>
      <link href="bhltb/"/>
      <url>bhltb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629224714.png" alt="image-20210629224714775" / loading="lazy"></p><a id="more"></a><h2 id="记实验室第一次团建"><a class="markdownIt-Anchor" href="#记实验室第一次团建"></a> 记实验室第一次团建</h2><blockquote><p>我不爱拍照，以下均为盗图。</p></blockquote><iframe width=100% height=490px  src="https://www.acfun.cn/player/ac27667422" id="ACPlayer-re"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002657.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002658.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002653.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629003611.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002649.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002656.jpg" alt="" / loading="lazy"><br /><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002655.jpg" alt="" / loading="lazy"><br /><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002654.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002650.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002645.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002652.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002648.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002651.jpg" alt="" / loading="lazy"><br /><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002647.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002646.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629003610.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629003612.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629003613.jpg" alt="" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002644.jpg" alt="" / loading="lazy"><br /><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210629002643.jpg" alt="" / loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 结绳记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>抠图放大</title>
      <link href="ktfd/"/>
      <url>ktfd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p><strong>用于从图像中抠出一部分来绘制这种细节对比图</strong></p><p>我怕我把代码弄丢，所以记下来。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/20210628235119.png" alt="" / loading="lazy"></p><a id="more"></a><ol><li>retanc.m</li></ol><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>close all<span class="token punctuation">;</span> clc<span class="token punctuation">;</span>file_name <span class="token operator">=</span> <span class="token string">'zxs2015_120721.jpg'</span><span class="token punctuation">;</span>I <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>I <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">set</span><span class="token punctuation">(</span>gcf<span class="token punctuation">,</span><span class="token string">'CurrentCharacter'</span><span class="token punctuation">,</span><span class="token string">'@'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% set to a dummy character</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">disp</span><span class="token punctuation">(</span><span class="token string">'Please select the region on the image.'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">ginput</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% x1 = [286;520];</span><span class="token comment">% y1 = [783;1006];</span><span class="token comment">% set(gcf,'CurrentCharacter','@'); % set to a dummy character</span><span class="token comment">% figure(1),imshow(I);</span><span class="token comment">% disp('Please select the region on the image.');</span><span class="token comment">% [x2,y2] = ginput(2);</span>I_tmp <span class="token operator">=</span> <span class="token function">insertShape</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span> <span class="token string">'Rectangle'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span><span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token string">'red'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% I_tmp = insertShape(I_tmp, 'Rectangle', [x2(1),y2(1),x2(2)-x2(1),y2(2)-y2(1)], 'LineWidth', 5, 'Color', 'red'); </span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>I_tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>I_cut1 <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% I_cut2 = I(y2(1):y2(2),x2(1):x2(2),:);</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>I_cut1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% figure(4),imshow(I_cut2);</span><span class="token function">imwrite</span><span class="token punctuation">(</span>I_tmp<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">file_name</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_cut.jpg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span>I_cut1<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">file_name</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_cut1.jpg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% imwrite(I_cut2,[file_name(1:end-4),'_cut2.jpg']);</span><span class="token function">save</span><span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token function">file_name</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'.mat'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li>retanc_load.m</li></ol><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab">clear<span class="token punctuation">;</span>close all<span class="token punctuation">;</span> clc<span class="token punctuation">;</span><span class="token function">load</span><span class="token punctuation">(</span><span class="token string">'5.mat'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>file_name <span class="token operator">=</span> <span class="token string">'5.png'</span><span class="token punctuation">;</span>I <span class="token operator">=</span> <span class="token function">imread</span><span class="token punctuation">(</span>file_name<span class="token punctuation">)</span><span class="token punctuation">;</span>I <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>I<span class="token punctuation">)</span><span class="token punctuation">;</span>I_tmp <span class="token operator">=</span> <span class="token function">insertShape</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span> <span class="token string">'Rectangle'</span><span class="token punctuation">,</span> <span class="token punctuation">[</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span> <span class="token string">'LineWidth'</span><span class="token punctuation">,</span> <span class="token number">5</span><span class="token punctuation">,</span> <span class="token string">'Color'</span><span class="token punctuation">,</span> <span class="token string">'blue'</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% I_tmp = insertShape(I_tmp, 'Rectangle', [x2(1),y2(1),x2(2)-x2(1),y2(2)-y2(1)], 'LineWidth', 5, 'Color', 'red'); </span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>I_tmp<span class="token punctuation">)</span><span class="token punctuation">;</span>I_cut1 <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">y1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">:</span><span class="token function">x1</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% I_cut2 = I(y2(1):y2(2),x2(1):x2(2),:);</span><span class="token function">figure</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">imshow</span><span class="token punctuation">(</span>I_cut1<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% figure(4),imshow(I_cut2);</span><span class="token function">imwrite</span><span class="token punctuation">(</span>I_tmp<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">file_name</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_cut.jpg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imwrite</span><span class="token punctuation">(</span>I_cut1<span class="token punctuation">,</span><span class="token punctuation">[</span><span class="token function">file_name</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token operator">-</span><span class="token number">4</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'_cut1.jpg'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% imwrite(I_cut2,[file_name(1:end-4),'_cut2.jpg']);</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>]]></content>
      
      
      
        <tags>
            
            <tag> Matlab </tag>
            
            <tag> 科研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>绘制箱线图</title>
      <link href="hzxxt/"/>
      <url>hzxxt/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210406204103.png" alt="scores" / loading="lazy"></p><a id="more"></a><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">import</span> numpy <span class="token keyword">as</span> np<span class="token keyword">import</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">as</span> plt<span class="token keyword">from</span> matplotlib<span class="token punctuation">.</span>pyplot <span class="token keyword">import</span> MultipleLocatorplt<span class="token punctuation">.</span>rcParams<span class="token punctuation">[</span><span class="token string">'axes.unicode_minus'</span><span class="token punctuation">]</span><span class="token operator">=</span><span class="token boolean">False</span>  <span class="token comment">#显示负数</span><span class="token comment"># plt.rcParams["font.sans-serif"]=["SimHei"] # 显示中文</span>plt<span class="token punctuation">.</span>figure<span class="token punctuation">(</span>figsize<span class="token operator">=</span><span class="token punctuation">(</span><span class="token number">9</span><span class="token punctuation">,</span><span class="token number">6</span><span class="token punctuation">)</span><span class="token punctuation">)</span>scores<span class="token operator">=</span><span class="token punctuation">(</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">71</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span>np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">66</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">55</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">92</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">84</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">78</span><span class="token punctuation">,</span><span class="token number">76</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">88</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">80</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">59</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">77</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">15</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">65</span><span class="token punctuation">,</span><span class="token number">61</span><span class="token punctuation">,</span><span class="token number">62</span><span class="token punctuation">,</span><span class="token number">64</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">54</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">69</span><span class="token punctuation">,</span><span class="token number">74</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">25</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">72</span><span class="token punctuation">,</span><span class="token number">45</span><span class="token punctuation">,</span><span class="token number">68</span><span class="token punctuation">,</span><span class="token number">63</span><span class="token punctuation">,</span><span class="token number">58</span><span class="token punctuation">,</span><span class="token number">53</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">60</span><span class="token punctuation">,</span><span class="token number">49</span><span class="token punctuation">,</span><span class="token number">50</span><span class="token punctuation">,</span><span class="token number">57</span><span class="token punctuation">,</span><span class="token number">56</span><span class="token punctuation">,</span><span class="token number">52</span><span class="token punctuation">,</span><span class="token number">67</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">30</span><span class="token punctuation">,</span>    np<span class="token punctuation">.</span>array<span class="token punctuation">(</span><span class="token punctuation">[</span><span class="token number">90</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">75</span><span class="token punctuation">,</span><span class="token number">87</span><span class="token punctuation">,</span><span class="token number">70</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">82</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">79</span><span class="token punctuation">,</span><span class="token number">86</span><span class="token punctuation">,</span><span class="token number">73</span><span class="token punctuation">,</span><span class="token number">85</span><span class="token punctuation">,</span><span class="token number">89</span><span class="token punctuation">,</span><span class="token number">83</span><span class="token punctuation">,</span><span class="token number">72</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>labels <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token string">'Red channel'</span><span class="token punctuation">,</span><span class="token string">'GDCP'</span><span class="token punctuation">,</span><span class="token string">'UIBLA'</span><span class="token punctuation">,</span><span class="token string">'Fusion-based'</span><span class="token punctuation">,</span><span class="token string">'FUnIE-GAN'</span><span class="token punctuation">,</span><span class="token string">'UGAN'</span><span class="token punctuation">,</span><span class="token string">'UWCNN'</span><span class="token punctuation">,</span><span class="token string">'Ours'</span><span class="token punctuation">]</span>plt<span class="token punctuation">.</span>box<span class="token punctuation">(</span>on<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span><span class="token comment"># plt.grid(b=None, which='major', axis='both') # 网格线</span>plt<span class="token punctuation">.</span>boxplot<span class="token punctuation">(</span>scores<span class="token punctuation">,</span>labels<span class="token operator">=</span>labels<span class="token punctuation">,</span>notch<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> meanline<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">,</span> showmeans<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylabel<span class="token punctuation">(</span><span class="token string">"Preference Scores"</span><span class="token punctuation">,</span>fontproperties <span class="token operator">=</span> <span class="token string">'Times New Roman'</span><span class="token punctuation">,</span>fontsize<span class="token operator">=</span><span class="token number">16</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>xticks<span class="token punctuation">(</span>fontproperties <span class="token operator">=</span> <span class="token string">'Times New Roman'</span><span class="token punctuation">)</span>plt<span class="token punctuation">.</span>yticks<span class="token punctuation">(</span>fontproperties <span class="token operator">=</span> <span class="token string">'Times New Roman'</span><span class="token punctuation">)</span><span class="token comment">## 修改 y 轴刻度间隔</span>ax<span class="token operator">=</span>plt<span class="token punctuation">.</span>gca<span class="token punctuation">(</span><span class="token punctuation">)</span>y_major_locator<span class="token operator">=</span>MultipleLocator<span class="token punctuation">(</span><span class="token number">10</span><span class="token punctuation">)</span>ax<span class="token punctuation">.</span>yaxis<span class="token punctuation">.</span>set_major_locator<span class="token punctuation">(</span>y_major_locator<span class="token punctuation">)</span>plt<span class="token punctuation">.</span>ylim<span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token number">100</span><span class="token punctuation">)</span> <span class="token comment"># y 轴范围</span><span class="token comment"># plt.title("主观评分")</span>plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">r".//scores.png"</span><span class="token punctuation">)</span> <span class="token comment"># 保存成 png</span>plt<span class="token punctuation">.</span>savefig<span class="token punctuation">(</span><span class="token string">'scores.pdf'</span><span class="token punctuation">)</span> <span class="token comment"># 保存成 pdf</span>plt<span class="token punctuation">.</span>show<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token comment"># 显示</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="更多参考"><a class="markdownIt-Anchor" href="#更多参考"></a> 更多参考</h2><p>[1] <a href="https://blog.csdn.net/irober/article/details/108279609">设置新罗马字体</a></p><p>[2] <a href="https://matplotlib.org/stable/api/_as_gen/matplotlib.pyplot.html?highlight=pyplot#module-matplotlib.pyplot">官方文档</a></p>]]></content>
      
      
      
        <tags>
            
            <tag> 科研 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>我的姐姐</title>
      <link href="wdjj/"/>
      <url>wdjj/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>和小霜霜一起去看<strong>我的姐姐</strong>😊</p></blockquote>        <div id="aplayer-WjuyZqJh" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-WjuyZqJh"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "举镜子的女孩",              author: "张子枫",              url: "https://cdn.jsdelivr.net/gh/wgx-dh/ziyuan@hexo/张子枫-举镜子的女孩.mp3",              pic: "https://cdn.jsdelivr.net/gh/wgx-dh/FAMED-Net/img20210704001613.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><blockquote><p>我大概不适合在电影院看电影，困，记不住剧情，不能回放。😅</p><p>为什么现在的电影都喜欢用方言？接地气？难受死我。</p></blockquote><a id="more"></a><h2 id="我的姐姐"><a class="markdownIt-Anchor" href="#我的姐姐"></a> 我的姐姐</h2><p>和妹妹一起吃午饭的时候，还讨论了一下我的姐姐，我给她说我记忆里残存的一些关于姐姐的画面。</p><p>刚上小学的时候，我大概一年级，姐姐应该是六年级。我只记得每天中午要回家里吃饭，姐姐骑自行车带着我回家，我坐在自行车后座上吹着夏天中午温柔的风，不一会就到家了，那时候路两旁的的大树还在，路上有树荫，特别爽。想想一个六年级的小孩子要带着一个一年级的小孩子，挺不容易的，哈哈。</p><p>小霜跟我说，“你应该去跟你姐姐感慨去，跟我说这没用😅”</p><p>好吧，确实没用。</p><p>其实还有几个有印象的小故事，借着这个机会记录下来吧。</p><p>小时候火腿肠 5 毛钱两个。我和姐姐每次都是买两个，先一人一个的平均分配，几乎每次都是我先吃完，然后吃姐姐没吃完的，我们两个很有默契，我快点吃，她慢点吃，给我留点。</p><p>学校门口的小卖店一般都是成对出现的，这两家小卖店往往都会被学生们很有默契的分成男生店和女生店。姐姐自然是总带着我去女生店买东西吃了，有一天中午她问我想吃什么，因为从来没去过男生店，又看见男生店货架上的面包长得挺好看的，我就说想吃那个。女生一般是不好意思去男生店的，那个年代就这样，哈哈，所以姐姐就委托男同学去帮买给我买面包。</p><p>一天中午在家里吃过午饭去上学，和姐姐还有姐姐的同学们一起走，不知道怎么聊到了钱的话题，姐姐说 “忘带钱了 ”，我一听马上就不乐意了，没带钱我吃什么！那可不行，必须回去取。坐在地上就开始哭，姐姐和姐姐的同学们各种哄我，跟我说逗我玩的，其实带钱了，还把钱拿出来给我看，我就不信，今天就必须回去取钱了，要么这学就不上了！姐姐被逼无奈，只能选择回家取钱了。关于是否真的忘带钱了这件事的事实我现在也不知道，反正我就是这么能 作 ！😪</p><p>吵架当然吵过，应该都是小时候，我印象里只剩一个画面了，应该是很小的时候，我和姐姐站在炕上，我用我的小拳拳锤姐姐胸口，哈哈，前因后果都忘记了。</p><p>和姐姐几乎没有合照，我们不爱拍照，只在空间里找到了这样一张 10 级磨皮的照片。</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210404174721.jpg" alt="psb (1)" / loading="lazy"></p><hr /><p>我不是独生子，我不知道独生子的快乐，但是我深切的知道姐姐对于我成长过程中的重要性。所以我始终都觉得一个家庭两个孩子是很有必要的。</p><p>辩证法告诉我们，一个事情总是有两面性的，也就是说，姐姐精心照顾，对于我形成今天这种性格也是有一定影响的。我没有主见，这是很大的缺点，晚上妹妹问 “去吃这个吗？”，我犹豫着。妹妹带着一些不耐烦，“去就去，不去就不去，你倒是说啊”问题是我也没有想法啊😅</p><h2 id="我的姐姐-2"><a class="markdownIt-Anchor" href="#我的姐姐-2"></a> 我的姐姐</h2><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210404173028.png" alt="微信图片_20210404172549" / loading="lazy"></p><p>接下来说说电影，没看电影之前也没看什么宣传片啥的，就是妹妹想看这个，我也听说口碑还不错，就看了。一开始我还以为是 父母双亡，少年姐姐独自一人抚养弟弟 的故事呢。实际上不是这样的。</p><p>我不擅长文字，也写不好影评。就瞎写写。</p><p>首先演技我就不评论了，只要不是特别的渣，我看不出好与特别好之间的区别。我不知道这部电影想表达什么，我总结不好，我就说说我看到的几个可以讨论的话题。关于重男轻女这个问题，我觉得在我身边已经不存在了啊，我的家乡的农村我没看见谁家重男轻女的，可能这个社会问题在别的地方还依然存在吧，这我就不了解了。</p><p>关于 姐姐是否应该抚养弟弟 的问题，在电影散场后和妹妹简单聊了几句，她说真希望姐姐赶紧签了字得了，为什么一定要这样结局，一定要道德绑架姐姐呢。我觉得这不算道德的问题，这是个人情感的问题，姐姐无论是否抚养弟弟都不应该从道德的角度进行评价，姐姐和弟弟几乎没见过面，根本没有感情，姐姐有梦想，追求自己的梦想送养弟弟完全没有问题。可是奈何姐姐有情感呢，她不是相处过程中对弟弟产生了喜欢嘛，世事两难全，没得办法，既然在情感上舍不得弟弟，那就得接受不能去实现梦想的事实。姐姐这么做没有错，我们自己做不到高尚，不能不允许别人高尚。</p><p>关于 姐姐的恋爱 ，我不知道怎么去理解，我感觉现在主流社会价值观是，爱情是不值钱的，事业，梦想才是值钱的。我也不知道该怎么去评价，我总是对这种想法有抗拒，两个人就不能有一个人为了对方放弃一些东西吗？东西不可以放弃，人可以放弃。我还年轻，体会不到为什么会有这种想法，可怕的是，大多数人都认为这样是对的。就像是人们都认为房子会涨价，都拼命攒钱买房子，因为买的人多，房子就真的涨价了。同样的道理，人们都认为爱情是不值钱的，这样想的人多了，那就真的不值钱了。</p><h2 id="我的妹妹"><a class="markdownIt-Anchor" href="#我的妹妹"></a> 我的妹妹</h2><p>我没有妹妹，“妹妹”这个词在我这里是特指，是专有名词。好朋友之间也是达成了共识的。</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210404185945.png" alt="image-20210404185945311" / loading="lazy"></p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210404185959.png" alt="image-20210404185959702" / loading="lazy"></p><p>为什么要在<strong>我的姐姐</strong>这篇文章里提妹妹？因为这是我的 4 月置顶，妹妹必须得在。</p><p>今天在书上看到一个小故事</p><blockquote><p>有一对情侣被一个穷凶极恶的歹徒抓到，歹徒说他们两个人之间只能有一个人活下来，让两个人玩石头剪刀布的游戏，谁赢了，谁就能活下来。小情侣约定一起出<strong>石头</strong>。最后的结局是男生活了，女生死了。原因是男生出了<strong>剪刀</strong>，女生出了<strong>布</strong>。</p><p>那么，你怎么看？</p></blockquote><p>我怎么看？说实话，在类似这种的虚构的小故事里，我总是倾向于女性是更伟大的。所以真实的情况可能是，男生为了让女生赢，选择出剪刀，女生自然是猜透了男生的心思，于是出了布，故意输掉。</p><hr /><p>与妹妹的相处是一个思考与反思的过程，具体就先不记录了。</p><p>和妹妹还没有一张合照，赶紧提上日程，争取在下月的博客中出现吧。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 结绳记事 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>读取不定量的输入数据求和</title>
      <link href="dqbdlsjqh/"/>
      <url>dqbdlsjqh/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="问题从键盘输入不定量的数据输出其和"><a class="markdownIt-Anchor" href="#问题从键盘输入不定量的数据输出其和"></a> 问题：从键盘输入不定量的数据，输出其和。</h2><h2 id="代码"><a class="markdownIt-Anchor" href="#代码"></a> 代码</h2><pre class="line-numbers language-cpp" data-language="cpp"><code class="language-cpp"><span class="token macro property"><span class="token directive-hash">#</span><span class="token directive keyword">include</span> <span class="token string">&lt;iostream></span></span><span class="token keyword">int</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token keyword">int</span> value <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">,</span>sum <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>    <span class="token keyword">while</span><span class="token punctuation">(</span>std<span class="token operator">::</span>cin <span class="token operator">>></span> value<span class="token punctuation">)</span>    <span class="token punctuation">&#123;</span>        sum <span class="token operator">+=</span> value<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    std<span class="token operator">::</span>cout <span class="token operator">&lt;&lt;</span> <span class="token string">"这些数的和是："</span> <span class="token operator">&lt;&lt;</span> sum <span class="token operator">&lt;&lt;</span> std<span class="token operator">::</span>endl<span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><a id="more"></a><h2 id="解释"><a class="markdownIt-Anchor" href="#解释"></a> 解释</h2><p>表达式<code>std::cin &gt;&gt; value</code> 是从标准输入中读取下一个数，保存在 value 中。输入运算符<code>&gt;&gt;</code> 返回其左侧运算对象，在本例中是 <code>std::cin</code>，因此，次循环条件实际上就是检测<code>std::cin</code>。</p><p>当我们使用一个 <code>istream</code> 对象作为条件时，其效果就是检测流的状态。如果流是有效的，即流未遇到错误，那么检测成功。当遇到<strong>文件结束符</strong>，或者遇到一个无效的输入时，<code>istream</code> 对象的状态就会变为无效。处于无效状态的 <code>istream</code> 对象会使条件为假。</p><p>因此，我们的 <code>while</code> 循环会一直执行直到遇到<strong>文件结束符</strong>（或输入错误）。</p><p>那么，什么是<strong>文件结束符</strong>，如何从键盘输入<strong>文件结束符</strong>？</p><p>对于不同的操作系统而言，有着不同的约定。在 Windows 系统中，输入文件结束符的方法是 Ctrl + Z，然后按 Enter 键。在 Unix 系统中，包括 Mac OS X 系统中，文件结束符的输入是用 Ctrl + D。</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210316184728.png" alt="image-20210316184721860" / loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中国特色站在巨人肩膀上的方法</title>
      <link href="zgtezzjrjbsdff/"/>
      <url>zgtezzjrjbsdff/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div class="warning"> <blockquote><p>哎😔，还是搜索镜像网站吧，这种方法也不怎么好用。</p></blockquote></div><a id="more"></a>    <div id="aplayer-WaTyfUHG" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="26305527" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><blockquote><p>为了能在制造<strong>学术垃圾</strong>的路上走得更远，这里介绍一种在中国特色互联网环境下访问谷歌学术的方法。这里的方法通过安装免费的浏览器插件实现系统代理。</p><p>谷歌上网助手 <a href="http://googlehelper.net/">Ghelper</a></p><p>因为在防火长城内无法访问谷歌应用商店，因此这里推荐使用 <a href="https://www.microsoft.com/zh-cn/edge">Edge</a> 浏览器访问微软的插件商店进行安装。</p></blockquote><h2 id="步骤"><a class="markdownIt-Anchor" href="#步骤"></a> 步骤</h2><ol><li><p>安装浏览器</p></li><li><p>安装插件</p><ul><li>点击<strong>扩展</strong></li></ul><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210302125911.png" alt="image-20210302125911324" / loading="lazy"></p><ul><li>点击<strong>获取 Microsoft Edge 扩展</strong></li></ul><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210302130014.png" alt="image-20210302130014009" / loading="lazy"></p><ul><li>搜索<strong>谷歌上网助手</strong>，并点击<strong>获取</strong></li></ul><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210302130115.png" alt="image-20210302130115507" / loading="lazy"></p></li><li><p>注册登录</p><ul><li><p>点击插件图标</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210302130516.png" alt="image-20210302130516317" / loading="lazy"></p></li><li><p>填写邮箱密码注册并登录</p></li><li><p>点击插件图标，上网策略为 ON 代表此时可以访问谷歌</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210302130803.png" alt="image-20210302130802954" / loading="lazy"></p></li></ul></li></ol><h2 id="补充"><a class="markdownIt-Anchor" href="#补充"></a> 补充</h2><p>这个插件支持免费访问谷歌系的网站，谷歌搜索，谷歌学术，谷歌邮箱等，对于其他墙外网站一般是不支持的。如果你安装了这个插件依然不能访问谷歌，可以检查一下是否安装了同类的插件相互之间冲突所导致的，当然也不排除插件失效或者你网络本身的原因。</p><p>在我刚刚安装这个插件的时候，发现使用插件的代理策略无法打开 GitHub ，关闭插件的上网策略即可，但现在好像没有这个问题了。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 教程 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>星辰大海</title>
      <link href="xcdh/"/>
      <url>xcdh/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><div class = "info"><blockquote><p><strong>会不会我们的爱</strong></p><p><strong>像星辰守护大海</strong></p></blockquote></div>    <div id="aplayer-PRWmwZcV" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="1811921555" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> Music </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于Z-score标准化方法的图像颜色恒常算法</title>
      <link href="jyZ-scorebzhffdtxyshcsf/"/>
      <url>jyZ-scorebzhffdtxyshcsf/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="42a644450af32c1b62b47fe7043c529b71e1d24eb6f5db36089c2f15eb1fc43a"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">点击输入密码.</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 科研 </tag>
            
            <tag> Idea </tag>
            
            <tag> 颜色恒常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种自适应的图像细节增强方法</title>
      <link href="yzzsydtxzqff/"/>
      <url>yzzsydtxzqff/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5c33fe955ce78ce187f3a24f95e343aca0e40d0986c7f2b0237ab9a4a9e662cb"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">点击输入密码.</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 科研 </tag>
            
            <tag> Idea </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows 自带的哈希校验命令</title>
      <link href="wzddhxjygj/"/>
      <url>wzddhxjygj/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210208132522.png" alt="image-20210208132514561" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210208132552.png" alt="image-20210208132552806" / loading="lazy"></p><blockquote><p><strong>OK, 文件没有损坏，可以继续下一步了。</strong></p></blockquote><a id="more"></a><h2 id="命令"><a class="markdownIt-Anchor" href="#命令"></a> 命令</h2><p>CertUtil [Options] -hashfile InFile [HashAlgorithm]</p><p>例如：</p><pre class="line-numbers language-powershell" data-language="powershell"><code class="language-powershell">certutil <span class="token operator">-</span>hashfile filename sha1<span class="token comment"># 或者</span>certutil <span class="token operator">-</span>hashfile filename md5<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>其中 filename 是待校验的<strong>文件全名</strong>（带扩展名）</p><h2 id="一个例子"><a class="markdownIt-Anchor" href="#一个例子"></a> 一个例子</h2><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210208134539.png" alt="image-20210208134539236" / loading="lazy"></p><h2 id="用处"><a class="markdownIt-Anchor" href="#用处"></a> 用处</h2><p>Hash 是一种单向加密算法，其中最常用的算法包括 <strong>MD5</strong> 和 <strong>SHA1</strong>.</p><p>所谓单向加密就是只能加密不能解密。这有什么用嘞？</p><p>用处就是可以用来验证两个文件是不是完全相同。由于 Hash 算法的性质是对于两个不同的文件（哪怕只有一个字节不同）是一定不会得到相同的 Hash 校验码的，所以在利用网络传输文件前，我们可以先计算该文件的 Hash 校验码，在对方收到该文件后，也可以使用相同的 Hash 算法计算该文件的检验码，如果相同，则说明这次网络传输没有造成文件的损坏。</p><p>要知道，利用网盘（百度网盘）在传输文件时是很有可能造成文件损坏的。</p><p>文章封面的图是我在 MSDN 上下载的 Windows 10 系统镜像，可以看到下载下来的文件 SHA1 校验码和原文件完全相同，可以放心进行下一步的系统安装啦。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Veiling Light Estimation for Underwater Dehazing</title>
      <link href="vleud/"/>
      <url>vleud/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>求大气散射模型中<strong>大气光</strong>的一种方法，这里记为<strong>V</strong></p><p>成像模型：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>I</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>=</mo><mi>S</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>t</mi><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mi>V</mi></mrow><annotation encoding="application/x-tex">I(x) = S(x)t(x) + (1 - t(x))V</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose">)</span><span class="mord mathdefault" style="margin-right:0.22222em;">V</span></span></span></span></span></p></blockquote><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207182400.png" alt="1" / loading="lazy"></p><a id="more"></a><blockquote><p><a href="https://cdn.jsdelivr.net/gh/blogrepo/pdf1.0/Hierarchical%20rank-based%20veiling%20light%20estimation%20for%20underwater%20dehazing.pdf">点击查看原文</a></p>    <div id="aplayer-omrKrpWD" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="209326" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div></blockquote><h2 id="方法简介"><a class="markdownIt-Anchor" href="#方法简介"></a> 方法简介</h2><p>求 V 的过程是一种垂直分层的搜索技术，主要有以下几个步骤：</p><ol><li><p>分层操作。</p><p>分层并不是真的图像分层，而是用不同尺度的分割方式对图像进行分块计算特征。第 i 层把图像分为 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msup><mn>4</mn><mi>i</mi></msup></mrow><annotation encoding="application/x-tex">4^i</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.824664em;vertical-align:0em;"></span><span class="mord"><span class="mord">4</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.824664em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span></span></span></span></span></span></span> 块。</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207200553.png" alt="image-20210207200553809" / loading="lazy"></p></li><li><p>计算特征。</p><p>对每一层的每一块分别计算下面三个特征。</p><ul><li><p>特征 1：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>μ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><msup><mi>d</mi><mrow><mi>G</mi><mi>B</mi></mrow></msup></msubsup><mo>=</mo><mfrac><mn>1</mn><mrow><mo fence="true">∣</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow></munder><msubsup><mi>C</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><msup><mi>d</mi><mrow><mi>G</mi><mi>B</mi></mrow></msup></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">\mu_{i, j}^{d^{G B}}=\frac{1}{\left|\Omega_{i, j}\right|} \sum_{x \in \Omega_{i, j}} C_{i, j}^{d^{G B}}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.439473em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.056365em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.813096em;vertical-align:-1.491656em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.491656em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.056365em;"><span style="top:-2.4530000000000003em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mn>1</mn><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></msub><mo>=</mo><mn>1</mn><mo>−</mo><msubsup><mi>μ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><msup><mi>d</mi><mrow><mi>G</mi><mi>B</mi></mrow></msup></msubsup><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f_{1_{i, j}}=1-\mu_{i, j}^{d^{G B}} \in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04176em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110800000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.439473em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.056365em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>C</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><msup><mi>d</mi><mrow><mi>G</mi><mi>B</mi></mrow></msup></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">C_{i,j}^{d^{G B}}(x)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.4011369999999999em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">C</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.006365em;"><span style="top:-2.441336em;margin-left:-0.07153em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.9190928571428572em;"><span style="top:-2.931em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span></span></span></span> 表示仅使用 绿色和蓝色通道计算的暗通道图。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mo fence="true">∣</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow><annotation encoding="application/x-tex">\left|\Omega_{i, j}\right|</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span></span> 表示第 j 层 第 i 个区域的像素点个数。</p></li><li><p>特征 2 ：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>σ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>c</mi></msubsup><mo>=</mo><msqrt><mrow><mfrac><mn>1</mn><mrow><mrow><mo fence="true">∣</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow><mo>−</mo><mn>1</mn></mrow></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow></munder><msup><mrow><mo fence="true">(</mo><msubsup><mi>μ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>c</mi></msubsup><mo>−</mo><msubsup><mi>I</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>c</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mn>2</mn></msup></mrow></msqrt></mrow><annotation encoding="application/x-tex">\sigma_{i, j}^{c}=\sqrt{\frac{1}{\left|\Omega_{i, j}\right|-1} \sum_{x \in \Omega_{i, j}}\left(\mu_{i, j}^{c}-I_{i, j}^{c}(x)\right)^{2}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0975000000000001em;vertical-align:-0.383108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.714392em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:3.0408459999999997em;vertical-align:-1.491656em;"></span><span class="mord sqrt"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.5491899999999996em;"><span class="svg-align" style="top:-5.000845999999999em;"><span class="pstrut" style="height:5.000845999999999em;"></span><span class="mord" style="padding-left:1.056em;"><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.491656em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.646192em;"><span style="top:-2.4231360000000004em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.646192em;"><span style="top:-2.4231360000000004em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.0448000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4129719999999999em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.054008em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.5091899999999994em;"><span class="pstrut" style="height:5.000845999999999em;"></span><span class="hide-tail" style="min-width:0.742em;height:3.0808459999999998em;"><svg width='400em' height='3.0808459999999998em' viewBox='0 0 400000 3080' preserveAspectRatio='xMinYMin slice'><path d='M702 80H400000v40H742v2946l-4 4-4 4c-.667.7-2 1.5-4 2.5s-4.167 1.833-6.5 2.5-5.5 1-9.5 1h-12l-28-84c-16.667-52-96.667-294.333-240-727l-212 -643 -85 170c-4-3.333-8.333-7.667-13 -13l-13-13l77-155 77-156c66 199.333 139 419.667 219 661 l218 661zM702 80H400000v40H742z'/></svg></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.491656em;"><span></span></span></span></span></span></span></span></span></span></p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mn>2</mn><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></msub><mo>=</mo><mfrac><mrow><msubsup><mi>σ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>R</mi></msubsup><mo>+</mo><msubsup><mi>σ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>G</mi></msubsup><mo>+</mo><msubsup><mi>σ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>B</mi></msubsup></mrow><mn>3</mn></mfrac><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f_{2_{i, j}}=\frac{\sigma_{i, j}^{R}+\sigma_{i, j}^{G}+\sigma_{i, j}^{B}}{3} \in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04176em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110800000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.312103em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.626103em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.7847720000000002em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8413309999999999em;"><span style="top:-2.441336em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>μ</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mi>c</mi></msubsup></mrow><annotation encoding="application/x-tex">\mu_{i, j}^{c}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.059164em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault">μ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span></span></span></span> 代表 第 j 层 第 i 个区域的像素均值，I 为原图。</p></li><li><p>特征 3 ：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>f</mi><msub><mn>3</mn><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></msub><mo>=</mo><mfrac><mn>1</mn><mrow><mo fence="true">∣</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub><mo fence="true">∣</mo></mrow></mfrac><munder><mo>∑</mo><mrow><mi>x</mi><mo>∈</mo><msub><mi mathvariant="normal">Ω</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow></msub></mrow></munder><mrow><mo fence="true">(</mo><msubsup><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><mspace width="1em"/><mo>∈</mo><mo stretchy="false">[</mo><mn>0</mn><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">f_{3_{i, j}}=\frac{1}{\left|\Omega_{i, j}\right|} \sum_{x \in \Omega_{i, j}}\left(G_{i, j}^{\prime}(x)\right) \quad \in[0,1]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.04176em;vertical-align:-0.34731999999999996em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110800000000004em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.34731999999999996em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.813096em;vertical-align:-1.491656em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mord"><span class="mord">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.972108em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.050005em;"><span style="top:-1.8556639999999998em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">x</span><span class="mrel mtight">∈</span><span class="mord mtight"><span class="mord mtight">Ω</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2818857142857143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.0500049999999996em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.491656em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">(</span></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.801892em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.1130000000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.383108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">)</span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mspace" style="margin-right:1em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">]</span></span></span></span></span></p><p>其中 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>G</mi><mrow><mi>i</mi><mo separator="true">,</mo><mi>j</mi></mrow><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">G_{i, j}^{\prime}( · )</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.146664em;vertical-align:-0.394772em;"></span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.751892em;"><span style="top:-2.441336em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.394772em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span> 表示 第 j 层 第 i 个区域 的灰度图的梯度图。</p></li></ul></li><li><p>计算均值。</p><p>对最后一层的每一个区域，分别计算覆盖该区域的所有层的均值。对每个特征都进行此计算，计算方式如图所示：</p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207203350.png" alt="image-20210207203350713" / loading="lazy"></p></li><li><p>计算融合特征图。</p><p>对每一个特征按上述方式计算均值后即可得到 3 个特征图，对三个特征图进行归一化操作，再相加取均值得到最终特征图。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>F</mi><mi>i</mi></msub><mo>=</mo><mfrac><mrow><mo stretchy="false">(</mo><msub><mi>f</mi><msub><mn>1</mn><mi>i</mi></msub></msub><mo>+</mo><msub><mi>f</mi><msub><mn>2</mn><mi>i</mi></msub></msub><mo>+</mo><msub><mi>f</mi><msub><mn>3</mn><mi>i</mi></msub></msub><mo stretchy="false">)</mo></mrow><mn>3</mn></mfrac></mrow><annotation encoding="application/x-tex">F_i = \frac{(f_{1_i} + f_{2_i} + f_{3_i})}{3}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.113em;vertical-align:-0.686em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">3</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.6769999999999996em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10764em;">f</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mtight">3</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:0em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.2501em;"><span></span></span></span></span></span></span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.686em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></span></p></li><li><p>区域选择。</p><p>最终的区域选择为 特征图 F 上最小值所对应的区域，接下来在该区域原图的绿蓝暗通道图上选择最亮的像素，返回原图中该像素的 R G B 数值。</p></li></ol><h2 id="matlab-实现"><a class="markdownIt-Anchor" href="#matlab-实现"></a> Matlab 实现</h2><h3 id="绿蓝暗通道"><a class="markdownIt-Anchor" href="#绿蓝暗通道"></a> 绿蓝暗通道</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">gb_dark_channel</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token comment">% x 为滤波窗口大小</span>G <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out <span class="token operator">=</span> <span class="token function">ordfilt2</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span>G<span class="token punctuation">,</span>B<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token function">ones</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="特征-1"><a class="markdownIt-Anchor" href="#特征-1"></a> 特征 1</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">f1</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>out <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">mean2</span><span class="token punctuation">(</span><span class="token function">gb_dark_channel</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span><span class="token number">15</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><h3 id="特征-2"><a class="markdownIt-Anchor" href="#特征-2"></a> 特征 2</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">f2</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token comment">% 此公式和 Matlab 中的 std2 函数的计算结果相同</span>R <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>G <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>u_R <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span>R<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">ones</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>u_G <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span>G<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">ones</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>u_B <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span>B<span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">ones</span><span class="token punctuation">(</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">;</span>sigma_R <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">*</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_R <span class="token operator">-</span> R<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">0.5</span><span class="token punctuation">;</span> <span class="token comment">% sigma_R = std2(R)</span>sigma_G <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">*</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_G <span class="token operator">-</span> G<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">0.5</span><span class="token punctuation">;</span>sigma_B <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">/</span><span class="token punctuation">(</span>m<span class="token operator">*</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token punctuation">(</span>u_B <span class="token operator">-</span> B<span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">0.5</span><span class="token punctuation">;</span>out <span class="token operator">=</span> <span class="token punctuation">(</span>sigma_R <span class="token operator">+</span> sigma_G <span class="token operator">+</span> sigma_B<span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token number">3</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="特征-3"><a class="markdownIt-Anchor" href="#特征-3"></a> 特征 3</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">f3</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>I_grey <span class="token operator">=</span> <span class="token function">rgb2gray</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>Fx<span class="token punctuation">,</span>Fy<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">gradient</span><span class="token punctuation">(</span>I_grey<span class="token punctuation">)</span><span class="token punctuation">;</span>grad <span class="token operator">=</span> <span class="token punctuation">(</span>Fx <span class="token operator">.^</span> <span class="token number">2</span> <span class="token operator">+</span> Fy <span class="token operator">.^</span> <span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">.^</span><span class="token number">0.5</span><span class="token punctuation">;</span>out <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span>grad<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="分层的同时计算每层特征"><a class="markdownIt-Anchor" href="#分层的同时计算每层特征"></a> 分层的同时计算每层特征</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">fen_ceng</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>J<span class="token punctuation">)</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>distx <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>m <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>disty <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out<span class="token punctuation">.</span>outimg <span class="token operator">=</span> <span class="token function">cell</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">% 实际上不需要保存图像数据，只保存特征就可以了。</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">^</span>J    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">^</span>J        <span class="token keyword">if</span> <span class="token number">i</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J             out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">j</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f1<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f1</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f2<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f2</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f3<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f3</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>        <span class="token keyword">if</span> <span class="token number">j</span> <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J            out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">i</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f1<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f1</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f2<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f2</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            out<span class="token punctuation">.</span>f3<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f3</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">continue</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>        out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">input</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">i</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">j</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span>f1<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f1</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span>f2<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f2</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        out<span class="token punctuation">.</span>f3<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">f3</span><span class="token punctuation">(</span>out<span class="token punctuation">.</span>outimg<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="归一化"><a class="markdownIt-Anchor" href="#归一化"></a> 归一化</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>outputs<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>    MAX <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    MIN <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    outputs <span class="token operator">=</span> <span class="token punctuation">(</span>arg <span class="token operator">-</span> MIN<span class="token punctuation">)</span><span class="token operator">./</span> <span class="token punctuation">(</span>MAX <span class="token operator">-</span> MIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="标记函数"><a class="markdownIt-Anchor" href="#标记函数"></a> 标记函数</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">tag</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>distx<span class="token punctuation">,</span>disty<span class="token punctuation">)</span><span class="token comment">% 在输入图像的 x，y 位置上画一个 大小为 2倍distx * 2倍disty 大小的红框 </span>I <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token punctuation">(</span>y<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>out <span class="token operator">=</span> I<span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="主函数"><a class="markdownIt-Anchor" href="#主函数"></a> 主函数</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> out <span class="token operator">=</span> <span class="token function">Veiling_light_estimation</span><span class="token punctuation">(</span>input<span class="token punctuation">,</span>str<span class="token punctuation">)</span>I <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span><span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>J <span class="token operator">=</span> <span class="token number">6</span><span class="token punctuation">;</span> <span class="token comment">% 最大层数</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>J    layer<span class="token punctuation">&#123;</span><span class="token number">i</span><span class="token punctuation">&#125;</span> <span class="token operator">=</span> <span class="token function">fen_ceng</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>f1_avg <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">;</span>f2_avg <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">;</span>f3_avg <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">,</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">^</span>J    <span class="token keyword">for</span> <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">2</span><span class="token operator">^</span>J        tmpf1 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        tmpf2 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        tmpf3 <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> k <span class="token operator">=</span> J<span class="token operator">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token operator">:</span><span class="token number">1</span>            tmpf1 <span class="token operator">=</span> tmpf1 <span class="token operator">+</span> layer<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>f1<span class="token punctuation">&#123;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            tmpf2 <span class="token operator">=</span> tmpf2 <span class="token operator">+</span> layer<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>f2<span class="token punctuation">&#123;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>            tmpf3 <span class="token operator">=</span> tmpf3 <span class="token operator">+</span> layer<span class="token punctuation">&#123;</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">&#125;</span><span class="token punctuation">.</span>f3<span class="token punctuation">&#123;</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">round</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">/</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span><span class="token punctuation">(</span>J<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">&#125;</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>        <span class="token function">f1_avg</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> tmpf1 <span class="token operator">/</span> J<span class="token punctuation">;</span>        <span class="token function">f2_avg</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> tmpf2 <span class="token operator">/</span> J<span class="token punctuation">;</span>        <span class="token function">f3_avg</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> tmpf3 <span class="token operator">/</span> J<span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span>f1_alpha <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>f1_avg<span class="token punctuation">)</span><span class="token punctuation">;</span>f2_beta <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>f2_avg<span class="token punctuation">)</span><span class="token punctuation">;</span>f3_gamma <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>f3_avg<span class="token punctuation">)</span><span class="token punctuation">;</span>F <span class="token operator">=</span> <span class="token punctuation">(</span>f1_alpha <span class="token operator">+</span> f2_beta <span class="token operator">+</span> f3_gamma<span class="token punctuation">)</span> <span class="token operator">./</span> <span class="token number">3</span><span class="token punctuation">;</span>minF <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">min</span><span class="token punctuation">(</span>F<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>x1<span class="token punctuation">,</span>y1<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span>minF <span class="token operator">==</span> F<span class="token punctuation">)</span><span class="token punctuation">;</span>x <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">median</span><span class="token punctuation">(</span>x1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>y <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span><span class="token function">median</span><span class="token punctuation">(</span>y1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">F</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">1.0</span><span class="token punctuation">;</span><span class="token comment">% figure;imshow(F); title('论文中的Figure 1 (d)')%  figure 1 (d)</span>distx <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>m <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>disty <span class="token operator">=</span> <span class="token function">floor</span><span class="token punctuation">(</span>n <span class="token operator">/</span> <span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">^</span>J<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% figure;imshow(I); </span>I_tag <span class="token operator">=</span> <span class="token function">tag</span><span class="token punctuation">(</span>I<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>distx<span class="token punctuation">,</span>disty<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">imtool</span><span class="token punctuation">(</span>I_tag<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% rectangle('Position', [(y-1)*disty+1,(x-1)*distx+1 , disty, distx ],'EdgeColor', 'r');</span><span class="token function">imwrite</span><span class="token punctuation">(</span>I_tag<span class="token punctuation">,</span><span class="token punctuation">[</span>str <span class="token string">'.png'</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">if</span> x <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J <span class="token operator">&amp;&amp;</span> y <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J    patch <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> x <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J    patch <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>y<span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">elseif</span> y <span class="token operator">==</span> <span class="token number">2</span><span class="token operator">^</span>J    patch <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>x<span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span><span class="token keyword">end</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">else</span>    patch <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>distx<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>x<span class="token operator">*</span>distx<span class="token punctuation">,</span><span class="token punctuation">(</span>y<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">*</span>disty<span class="token operator">+</span><span class="token number">1</span><span class="token operator">:</span>y<span class="token operator">*</span>disty<span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span>patch_gb_dark_channel <span class="token operator">=</span> <span class="token function">gb_dark_channel</span><span class="token punctuation">(</span>patch<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">[</span>xx<span class="token punctuation">,</span>yy<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">find</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span>patch_gb_dark_channel<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">==</span> patch_gb_dark_channel<span class="token punctuation">)</span><span class="token punctuation">;</span>r <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span><span class="token function">patch</span><span class="token punctuation">(</span>xx<span class="token punctuation">,</span>yy<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>g <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span><span class="token function">patch</span><span class="token punctuation">(</span>xx<span class="token punctuation">,</span>yy<span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>b <span class="token operator">=</span> <span class="token function">mean2</span><span class="token punctuation">(</span><span class="token function">patch</span><span class="token punctuation">(</span>xx<span class="token punctuation">,</span>yy<span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>out <span class="token operator">=</span> <span class="token punctuation">[</span>r<span class="token punctuation">,</span>g<span class="token punctuation">,</span>b<span class="token punctuation">]</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="结果图"><a class="markdownIt-Anchor" href="#结果图"></a> 结果图</h2><h3 id="先来一些比较好的"><a class="markdownIt-Anchor" href="#先来一些比较好的"></a> 先来一些比较好的</h3><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207210132.png" alt="5" / loading="lazy"></p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207210305.png" alt="2" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211512.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211646.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211803.png" alt="5" / loading="lazy"></p><h3 id="再来一些不好的"><a class="markdownIt-Anchor" href="#再来一些不好的"></a> 再来一些不好的</h3><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207210223.png" alt="364" / loading="lazy"></p><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210207210832.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211008.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211146.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210207211412.png" alt="5" / loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> Matlab </tag>
            
            <tag> 科研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>一种图像动态范围调整的自适应方法</title>
      <link href="yztxdtfwtzdzsyff/"/>
      <url>yztxdtfwtzdzsyff/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p><s><strong>这也许是我复现的所有论文中效果最好的了吧</strong></s></p><p><strong>这也许是我见过最好用的低照度图片了吧</strong>🦄</p></blockquote><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210128171746.png" alt="1" / loading="lazy"></p><a id="more"></a><blockquote><p>开始之前，背景音乐先安排上。</p>    <div id="aplayer-bMlpZzjx" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="409060879" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><p>这篇博客介绍一下论文中的方法，目的不是让除了我以外的人能看懂，因为我也做不到让别人能读懂😓，大概就算是是阅读笔记吧。欲知方法细节，<a href="https://cdn.jsdelivr.net/gh/WANG-Guangxin/docs/%E5%B7%B2%E8%AF%BB/An%20Adaptive%20Method%20for%20Image%20Dynamic%20Range%20Adjustment.pdf">点击查看论文原文</a></p></blockquote><h2 id="方法简介"><a class="markdownIt-Anchor" href="#方法简介"></a> 方法简介</h2><h3 id="流程图"><a class="markdownIt-Anchor" href="#流程图"></a> 流程图</h3><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210128171926.png" alt="image-20210128171926493" / loading="lazy"></p><p>算法共分为以下几个步骤：</p><ol><li>提取 Y 通道。</li><li>根据 Y 通道图的直方图分布情况分别求出两个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> ，使其分别有效作用于暗区和亮区域。</li><li>使用 DoG 函数对伽马校正结果图进行局部对比度增强。</li><li>对增强结果进行自适应的线性加权融合。</li><li>利用 Y 通道的融合结果对图像进行色彩校正得到最终的结果图。</li></ol><h3 id="提取-y-通道"><a class="markdownIt-Anchor" href="#提取-y-通道"></a> 提取 Y 通道</h3><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msub><mi>L</mi><mtext>in </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mn>0.299</mn><mo>⋅</mo><msubsup><mi>I</mi><mtext>in </mtext><mi>R</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mn>0.587</mn></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>⋅</mo><msubsup><mi>I</mi><mtext>in </mtext><mi>G</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mn>0.114</mn><mo>⋅</mo><msubsup><mi>I</mi><mtext>in </mtext><mi>B</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{\text {in }}(x, y)=0.299 \cdot I_{\text {in }}^{R}(x, y)+0.587 &amp; \cdot I_{\text {in }}^{G}(x, y) + 0.114 \cdot I_{\text {in }}^{B}(x, y)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.551331em;vertical-align:-0.5256654999999999em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0256655000000001em;"><span style="top:-3.1343345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">2</span><span class="mord">9</span><span class="mord">9</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.00773em;">R</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span><span class="mord">8</span><span class="mord">7</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5256654999999999em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.0256655000000001em;"><span style="top:-3.1343345000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">G</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mord">4</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8913309999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05017em;">B</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.5256654999999999em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><p>对 Y 通道进行对数归一化：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mi>log</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msub><mo><mi>log</mi><mo>⁡</mo></mo><mi>α</mi></msub><mrow><mo fence="true">(</mo><msub><mi>L</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">L_{\log }(x, y)=\log _{\alpha}\left(L_{i n}(x, y)+1\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.336108em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.4861079999999998em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mop"><span class="mop">lo<span style="margin-right:0.01389em;">g</span></span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.057252em;"><span style="top:-2.4558600000000004em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.0037em;">α</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.24414em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord">1</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span></span></p><p>其中：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>α</mi><mo>=</mo><mi>m</mi><mi>a</mi><mi>x</mi><mo stretchy="false">(</mo><msub><mi>L</mi><mrow><mi>i</mi><mi>n</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>+</mo><mn>1</mn></mrow><annotation encoding="application/x-tex">\alpha = max(L_{in}(x,y)) + 1</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">a</span><span class="mord mathdefault">x</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">1</span></span></span></span></span></p><h3 id="自适应伽马校正"><a class="markdownIt-Anchor" href="#自适应伽马校正"></a> 自适应伽马校正</h3><p>首先，以 0.5 为阈值将对数归一化后的 Y 通道分为亮区域和暗区域两个部分，即大于 0.5 的像素值被划分在亮区域，小于或等于 0.5 的像素被划分在暗区域。</p><p>分别根据亮区域和暗区域的标准差来计算 <strong>期望中位数</strong>，再通过全局搜索的方式寻找两个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> 使得经过伽马校正后的图像最接近期望中位数。</p><p>以下为暗区和亮区期望中位数的计算方法：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mi>L</mi></msub><mo>=</mo><mfrac><mn>1</mn><mn>3</mn></mfrac><mo>+</mo><msub><mi>σ</mi><mi>L</mi></msub></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>M</mi><mi>H</mi></msub><mo>=</mo><mn>1</mn><mo>−</mo><msub><mi>σ</mi><mi>H</mi></msub></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}M_{L}=\frac{1}{3}+\sigma_{L} \\M_{H}=1-\sigma_{H}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4051080000000002em;vertical-align:-0.9525540000000003em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.452554em;"><span style="top:-3.607446em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.6550000000000002em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">3</span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.345em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4074459999999998em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9525540000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>其中：L 下标表示暗区；H 下标表示亮区。</p><p>两个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> 的全局搜索方法如下：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="right" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>γ</mi><mi>L</mi></msub><mo>=</mo><munder><mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo></mo><msub><mi>γ</mi><mi>i</mi></msub></munder><mrow><mo fence="true">(</mo><mrow><mo fence="true">∣</mo><mi mathvariant="normal">med</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>S</mi><mtext>dark </mtext><msub><mi>γ</mi><mi>i</mi></msub></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>M</mi><mi>L</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>γ</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>0.1</mn><mo separator="true">,</mo><mn>0.11</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mn>1</mn><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>γ</mi><mi>H</mi></msub><mo>=</mo><munder><mo><mi>arg</mi><mo>⁡</mo><mi>min</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mrow><mo fence="true">∣</mo><mi mathvariant="normal">med</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msubsup><mi>S</mi><mtext>bright </mtext><msub><mi>γ</mi><mi>i</mi></msub></msubsup><mo fence="true">)</mo></mrow><mo>−</mo><msub><mi>M</mi><mi>H</mi></msub><mo fence="true">∣</mo></mrow><mo fence="true">)</mo></mrow></mo><msub><mi>γ</mi><mi>i</mi></msub></munder></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>γ</mi><mi>i</mi></msub><mo>∈</mo><mo stretchy="false">{</mo><mn>1</mn><mo separator="true">,</mo><mn>1.1</mn><mo separator="true">,</mo><mo>…</mo><mo separator="true">,</mo><mn>10</mn><mo stretchy="false">}</mo></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{r}\gamma_{L}=\underset{\gamma_{i}}{\arg \min }\left(\left|\operatorname{med}\left(S_{\text {dark }}^{\gamma_{i}}\right)-M_{L}\right|\right) \\\gamma_{i} \in\{0.1,0.11, \ldots, 1\} \\\gamma_{H}=\underset{\gamma_{i}}{\arg \min \left(\left|\operatorname{med}\left(S_{\text {bright }}^{\gamma_{i}}\right)-M_{H}\right|\right)} \\\gamma_{i} \in\{1,1.1, \ldots, 10\}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:6.924661em;vertical-align:-3.2123305em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.7123305em;"><span style="top:-6.0403155em;"><span class="pstrut" style="height:3.167985em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.66786em;"><span style="top:-1.9055600000000001em;margin-left:0em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-2.7em;"><span class="pstrut" style="height:2.7em;"></span><span><span class="mop"><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.030548em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="minner"><span class="mopen delimcenter" style="top:0em;">∣</span><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">e</span><span class="mord mathrm">d</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">dark </span></span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">∣</span></span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span><span style="top:-4.1697675em;"><span class="pstrut" style="height:3.167985em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">{</span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">1</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mclose">}</span></span></span><span style="top:-2.6417824999999997em;"><span class="pstrut" style="height:3.167985em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.9179649999999997em;margin-left:0em;"><span class="pstrut" style="height:3.167985em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:3.167985em;"></span><span><span class="mop"><span class="mop">ar<span style="margin-right:0.01389em;">g</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">min</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span><span class="mop"><span class="mord mathrm">m</span><span class="mord mathrm">e</span><span class="mord mathrm">d</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size2">(</span></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">bright </span></span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4374159999999999em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.10903em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.167985em;"><span style="top:-1.955985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-2.561985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span><span style="top:-3.167985em;"><span class="pstrut" style="height:2.606em;"></span><span class="delimsizinginner delim-size1"><span>∣</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.6500149999999999em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size2">)</span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.4861280000000001em;"><span></span></span></span></span></span></span></span></span><span style="top:-0.31565449999999967em;"><span class="pstrut" style="height:3.167985em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.05556em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">∈</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mopen">{</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner">…</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">0</span><span class="mclose">}</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:3.2123305em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><p>其中：<span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>m</mi><mi>e</mi><mi>d</mi><mo stretchy="false">(</mo><mo separator="true">⋅</mo><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">med(·)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">m</span><span class="mord mathdefault">e</span><span class="mord mathdefault">d</span><span class="mopen">(</span><span class="mpunct">⋅</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mclose">)</span></span></span></span> 是中位数算子。<span class="katex"><span class="katex-mathml"><math><semantics><mrow><msubsup><mi>S</mi><mrow><mi>d</mi><mi>a</mi><mi>r</mi><mi>k</mi></mrow><msub><mi>γ</mi><mi>i</mi></msub></msubsup></mrow><annotation encoding="application/x-tex">S_{dark}^{\gamma_i}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.083608em;vertical-align:-0.3013079999999999em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7823em;"><span style="top:-2.3986920000000005em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span><span class="mord mathdefault mtight">a</span><span class="mord mathdefault mtight" style="margin-right:0.02778em;">r</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span><span style="top:-3.1809080000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.3013079999999999em;"><span></span></span></span></span></span></span></span></span></span> 表示的是 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mrow><mi>l</mi><mi>o</mi><mi>g</mi></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><msup><mo stretchy="false">)</mo><msub><mi>γ</mi><mi>i</mi></msub></msup><mo>≤</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">L_{log}(x,y)^{\gamma _i} \le 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.036108em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.01968em;">l</span><span class="mord mathdefault mtight">o</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">g</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3280857142857143em;"><span style="top:-2.357em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">≤</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span> 的像素值。</p><p>分别使用以上两个 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>γ</mi></mrow><annotation encoding="application/x-tex">\gamma</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.625em;vertical-align:-0.19444em;"></span><span class="mord mathdefault" style="margin-right:0.05556em;">γ</span></span></span></span> 对输入图像进行伽马校正，得到亮区结果和暗区结果。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.15999999999999992em" columnalign="left" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mi>d</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mrow><mo fence="true">(</mo><msub><mi>L</mi><mi>log</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><msub><mi>γ</mi><mi>L</mi></msub></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mrow><msub><mi>L</mi><mi>b</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><msup><mrow><mo fence="true">(</mo><msub><mi>L</mi><mi>log</mi><mo>⁡</mo></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow><msub><mi>γ</mi><mi>H</mi></msub></msup></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{array}{l}L_{d}(x, y)=\left(L_{\log }(x, y)\right)^{\gamma_{L}} \\L_{b}(x, y)=\left(L_{\log }(x, y)\right)^{\gamma_{H}}\end{array}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:2.4000000000000004em;vertical-align:-0.9500000000000004em;"></span><span class="mord"><span class="mtable"><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.45em;"><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.336108em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.4861079999999998em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.336108em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.4861079999999998em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mop mtight">lo<span style="margin-right:0.01389em;">g</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.804292em;"><span style="top:-3.2029000000000005em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.05556em;">γ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3448em;"><span style="top:-2.3567071428571427em;margin-left:-0.05556em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.14329285714285717em;"><span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.9500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span></span></span></span></span></span></span></p><h3 id="局部对比度增强"><a class="markdownIt-Anchor" href="#局部对比度增强"></a> 局部对比度增强</h3><p>使用 DoG 模型分别作用于亮区校正结果图和暗区校正结果图，实现图像的对比度增强。具体方法为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mi>d</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>L</mi><mi>d</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mrow><mo fence="true">(</mo><msub><mi>L</mi><mi>d</mi></msub><mo>∗</mo><mi>D</mi><mi>o</mi><msub><mi>G</mi><mrow><msub><mi>σ</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>σ</mi><mi>s</mi></msub></mrow></msub><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>L</mi><mi>b</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><msub><mi>L</mi><mi>b</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mrow><mo fence="true">(</mo><msub><mi>L</mi><mi>b</mi></msub><mo>∗</mo><mi>D</mi><mi>o</mi><msub><mi>G</mi><mrow><msub><mi>σ</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>σ</mi><mi>s</mi></msub></mrow></msub><mo fence="true">)</mo></mrow><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>D</mi><mi>o</mi><msub><mi>G</mi><mrow><msub><mi>σ</mi><mi>c</mi></msub><mo separator="true">,</mo><msub><mi>σ</mi><mi>s</mi></msub></mrow></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><msubsup><mi>σ</mi><mi>c</mi><mn>2</mn></msubsup></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>c</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence="true">)</mo></mrow><mo>−</mo><mfrac><mn>1</mn><mrow><mn>2</mn><mi>π</mi><msubsup><mi>σ</mi><mi>s</mi><mn>2</mn></msubsup></mrow></mfrac><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><msup><mi>x</mi><mn>2</mn></msup><mo>+</mo><msup><mi>y</mi><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>s</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}L_{d}^{\prime}(x, y)=&amp; L_{d}(x, y)+\left(L_{d} * D o G_{\sigma_{c}, \sigma_{s}}\right)(x, y) \\L_{b}^{\prime}(x, y)=&amp; L_{b}(x, y)+\left(L_{b} * D o G_{\sigma_{c}, \sigma_{s}}\right)(x, y) \\D o G_{\sigma_{c}, \sigma_{s}}(x, y)=&amp; \frac{1}{2 \pi \sigma_{c}^{2}} \exp \left(-\frac{x^{2}+y^{2}}{2 \sigma_{c}^{2}}\right) -\frac{1}{2 \pi \sigma_{s}^{2}} \exp \left(-\frac{x^{2}+y^{2}}{2 \sigma_{s}^{2}}\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:5.741138000000001em;vertical-align:-2.6205690000000006em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1205690000000006em;"><span style="top:-5.771677em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-4.271677em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span><span style="top:-2.1205689999999997em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6205690000000006em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:3.1205690000000006em;"><span style="top:-5.771677em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-4.271677em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">∗</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">D</span><span class="mord mathdefault">o</span><span class="mord"><span class="mord mathdefault">G</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.15139200000000003em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span><span class="mpunct mtight">,</span><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.16454285714285719em;"><span style="top:-2.357em;margin-left:-0.03588em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.143em;"><span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;">)</span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.1205689999999997em;"><span class="pstrut" style="height:3.491108em;"></span><span class="mord"><span class="mord"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.32144em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord mathdefault" style="margin-right:0.03588em;">π</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.6205690000000006em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h3 id="自适应融合"><a class="markdownIt-Anchor" href="#自适应融合"></a> 自适应融合</h3><p>这里使用一种依赖于亮度的自适应线性加权融合方法。</p><p>其权重的计算方式为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>exp</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><mo>−</mo><mfrac><mrow><msub><mi>L</mi><mi>b</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><msup><mo stretchy="false">)</mo><mn>2</mn></msup></mrow><mrow><mn>2</mn><msubsup><mi>σ</mi><mi>w</mi><mn>2</mn></msubsup></mrow></mfrac><mo fence="true">)</mo></mrow></mrow><annotation encoding="application/x-tex">w(x, y)=\exp \left(-\frac{L_{b}(x, y)^{2}}{2 \sigma_{w}^{2}}\right)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.441138em;vertical-align:-0.95003em;"></span><span class="mop">exp</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord">−</span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.491108em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord">2</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.740108em;"><span style="top:-2.4530000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span style="top:-2.9890000000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose"><span class="mclose">)</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.8141079999999999em;"><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span></span></span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.933em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span></span></span></span></span></p><p>此处设置 <span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>σ</mi><mi>w</mi></msub><mo>=</mo><mn>0.5</mn></mrow><annotation encoding="application/x-tex">\sigma_w = 0.5</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.03588em;">σ</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.03588em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.02691em;">w</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.64444em;vertical-align:0em;"></span><span class="mord">0</span><span class="mord">.</span><span class="mord">5</span></span></span></span>。</p><p>融合方法为：</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mrow><msub><mi>L</mi><mtext>out </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>=</mo><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>L</mi><mi>d</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo>+</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><mi>w</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo stretchy="false">)</mo><mo>⋅</mo><msubsup><mi>L</mi><mi>b</mi><mo mathvariant="normal">′</mo></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">L_{\text {out }}(x, y)=w(x, y) \cdot L_{d}^{\prime}(x, y)+(1-w(x, y)) \cdot L_{b}^{\prime}(x, y)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">d</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">+</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1.051892em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8018919999999999em;"><span style="top:-2.4530000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">′</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span></span></p><p>另外，此处对输出结果进行了一步线性归一化操作。</p><h3 id="自适应的色彩恢复"><a class="markdownIt-Anchor" href="#自适应的色彩恢复"></a> 自适应的色彩恢复</h3><p>此处依然是一种亮度依赖的自适应方法。</p><p><span class="katex-display"><span class="katex"><span class="katex-mathml"><math><semantics><mtable rowspacing="0.24999999999999992em" columnalign="right left" columnspacing="0em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><msubsup><mi>I</mi><mtext>out </mtext><mi>c</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><msub><mi>L</mi><mtext>out </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><msup><mrow><mo fence="true">(</mo><mfrac><mrow><msubsup><mi>I</mi><mrow><mi>i</mi><mi>n</mi></mrow><mi>c</mi></msubsup><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow><mrow><msub><mi>L</mi><mtext>in </mtext></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mfrac><mo fence="true">)</mo></mrow><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></msup></mrow></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mi>s</mi><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo></mrow></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="true"><mrow><mrow></mrow><mo>=</mo><mn>1</mn><mo>−</mo><mi>tanh</mi><mo>⁡</mo><mrow><mo fence="true">(</mo><msub><mi>L</mi><mi>b</mi></msub><mo stretchy="false">(</mo><mi>x</mi><mo separator="true">,</mo><mi>y</mi><mo stretchy="false">)</mo><mo fence="true">)</mo></mrow></mrow></mstyle></mtd></mtr></mtable><annotation encoding="application/x-tex">\begin{aligned}I_{\text {out }}^{c}(x, y) &amp;=L_{\text {out }}(x, y)\left(\frac{I_{i n}^{c}(x, y)}{L_{\text {in }}(x, y)}\right)^{s(x, y)} \\s(x, y) &amp;=1-\tanh \left(L_{b}(x, y)\right)\end{aligned}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:4.477930000000001em;vertical-align:-1.9889650000000003em;"></span><span class="mord"><span class="mtable"><span class="col-align-r"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4889650000000003em;"><span style="top:-4.488965em;"><span class="pstrut" style="height:3.7279em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.7143919999999999em;"><span style="top:-2.4530000000000003em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span><span style="top:-3.113em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.247em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-2.398935em;"><span class="pstrut" style="height:3.7279em;"></span><span class="mord"><span class="mord mathdefault">s</span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9889650000000003em;"><span></span></span></span></span></span><span class="col-align-l"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.4889650000000003em;"><span style="top:-4.488965em;"><span class="pstrut" style="height:3.7279em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.2805559999999999em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">out </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size3">(</span></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.427em;"><span style="top:-2.314em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31750199999999995em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord text mtight"><span class="mord mtight">in </span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.677em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.664392em;"><span style="top:-2.441336em;margin-left:-0.07847em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mord mathdefault mtight">n</span></span></span></span><span style="top:-3.063em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">c</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.258664em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.936em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size3">)</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.7279em;"><span style="top:-3.9029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">s</span><span class="mopen mtight">(</span><span class="mord mathdefault mtight">x</span><span class="mpunct mtight">,</span><span class="mord mathdefault mtight" style="margin-right:0.03588em;">y</span><span class="mclose mtight">)</span></span></span></span></span></span></span></span></span></span></span><span style="top:-2.398935em;"><span class="pstrut" style="height:3.7279em;"></span><span class="mord"><span class="mord"></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mop">tanh</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;">(</span><span class="mord"><span class="mord mathdefault">L</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">b</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mopen">(</span><span class="mord mathdefault">x</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord mathdefault" style="margin-right:0.03588em;">y</span><span class="mclose">)</span><span class="mclose delimcenter" style="top:0em;">)</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.9889650000000003em;"><span></span></span></span></span></span></span></span></span></span></span></span></p><h2 id="matlab实现"><a class="markdownIt-Anchor" href="#matlab实现"></a> Matlab实现</h2><h3 id="分区"><a class="markdownIt-Anchor" href="#分区"></a> 分区</h3><p>分区操作只需要记录亮区像素和暗区像素的值就可以，因此此处采用遍历图像的方式对每个像素点进行判断，大于0.5 则加入亮区数组，否则加入暗区数组。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>Ld<span class="token punctuation">,</span>Lb<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fen_qu</span><span class="token punctuation">(</span>Lin<span class="token punctuation">)</span><span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token number">j</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token punctuation">[</span>m<span class="token punctuation">,</span>n<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">size</span><span class="token punctuation">(</span>Lin<span class="token punctuation">)</span><span class="token punctuation">;</span>Ld <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span>Lb <span class="token operator">=</span> <span class="token number">0</span><span class="token punctuation">;</span><span class="token keyword">for</span> k <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span>m<span class="token operator">*</span>n    x <span class="token operator">=</span> <span class="token function">Lin</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span> x <span class="token operator">&lt;=</span> <span class="token number">0.5</span>        <span class="token function">Ld</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">)</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">i</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span>    <span class="token keyword">if</span> x <span class="token operator">></span> <span class="token number">0.5</span>        <span class="token function">Lb</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> x<span class="token punctuation">;</span>        <span class="token number">j</span> <span class="token operator">=</span> <span class="token number">j</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="dog-算子"><a class="markdownIt-Anchor" href="#dog-算子"></a> DoG 算子</h3><p>DoG 算子实际上就是两个高斯函数的差，因此这里先实现一个二维的高斯函数。</p><p>二维高斯函数也可以使用 <code>Matlab</code> 内置函数<code>fspecial</code>来实现。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> gaussFun <span class="token operator">=</span> <span class="token function">GaussFun2D</span><span class="token punctuation">(</span>hsize<span class="token punctuation">)</span> <span class="token comment">% sigma = double(hsize)/6.0; % 3*sigma = radius, i.e., 6*sigma = diameter (hsize)</span><span class="token comment">% gaussFun = fspecial('gaussian',hsize,sigma);</span>gaussFun <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span>hsize<span class="token punctuation">,</span>hsize<span class="token punctuation">)</span><span class="token punctuation">;</span>rr <span class="token operator">=</span> <span class="token punctuation">(</span>hsize<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token operator">/</span><span class="token number">2</span><span class="token punctuation">;</span><span class="token comment">%rr = (hsize-1)/2;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>hsize    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>hsizetmpV <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>rr<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token operator">-</span>rr<span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span>rr<span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token number">j</span><span class="token operator">-</span>rr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token function">gaussFun</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">9.0</span><span class="token operator">*</span>tmpV<span class="token operator">/</span>rr<span class="token operator">/</span>rr<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">%gaussFun(i,j) = exp(-4.5*tmpV/rr/rr);</span><span class="token comment">%sigma = rr/3;</span><span class="token comment">%gaussFun(i,j) = exp(-tmpV/(2*sigma*sigma))/(2*pi*sigma*sigma);</span>    <span class="token keyword">end</span><span class="token keyword">end</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>DoG 算子的实现如下：</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> outImg <span class="token operator">=</span> <span class="token function">DoG</span><span class="token punctuation">(</span>Img<span class="token punctuation">,</span>rr_RF<span class="token punctuation">,</span>rr_IF<span class="token punctuation">,</span>m_qA1<span class="token punctuation">,</span>m_qA2<span class="token punctuation">,</span>antImg<span class="token punctuation">)</span>th1 <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>rr_RF <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span> hsize <span class="token operator">=</span> th1<span class="token punctuation">;</span>pa_gauss1 <span class="token operator">=</span> <span class="token function">GaussFun2D</span><span class="token punctuation">(</span>hsize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>th1    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>th1        di <span class="token operator">=</span> <span class="token number">i</span><span class="token operator">-</span>rr_RF<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        dj <span class="token operator">=</span> <span class="token number">j</span><span class="token operator">-</span>rr_RF<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        tmpV <span class="token operator">=</span> di<span class="token operator">*</span>di <span class="token operator">+</span> dj<span class="token operator">*</span>dj<span class="token punctuation">;</span>        <span class="token keyword">if</span> tmpV<span class="token operator">></span>rr_RF<span class="token operator">*</span>rr_RF            <span class="token function">pa_gauss1</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span>pa_gauss1 <span class="token operator">=</span> m_qA1<span class="token operator">*</span>pa_gauss1<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>pa_gauss1<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>th2  <span class="token operator">=</span> <span class="token number">2</span><span class="token operator">*</span>rr_IF <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>hsize <span class="token operator">=</span> th2<span class="token punctuation">;</span>pa_gauss2 <span class="token operator">=</span> <span class="token function">GaussFun2D</span><span class="token punctuation">(</span>hsize<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>th2    <span class="token keyword">for</span> <span class="token number">j</span><span class="token operator">=</span><span class="token number">1</span><span class="token operator">:</span>th2        di <span class="token operator">=</span> <span class="token number">i</span><span class="token operator">-</span>rr_IF<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        dj <span class="token operator">=</span> <span class="token number">j</span><span class="token operator">-</span>rr_IF<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">;</span>        tmpV <span class="token operator">=</span> di<span class="token operator">*</span>di <span class="token operator">+</span> dj<span class="token operator">*</span>dj<span class="token punctuation">;</span>        <span class="token keyword">if</span> tmpV<span class="token operator">></span>rr_IF<span class="token operator">*</span>rr_IF <span class="token operator">||</span> tmpV<span class="token operator">&lt;=</span>rr_RF<span class="token operator">*</span>rr_RF            <span class="token function">pa_gauss2</span><span class="token punctuation">(</span><span class="token number">i</span><span class="token punctuation">,</span><span class="token number">j</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span>        <span class="token keyword">end</span>    <span class="token keyword">end</span><span class="token keyword">end</span>pa_gauss2 <span class="token operator">=</span> m_qA2<span class="token operator">*</span>pa_gauss2<span class="token operator">/</span><span class="token function">sum</span><span class="token punctuation">(</span><span class="token function">sum</span><span class="token punctuation">(</span>pa_gauss2<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>SurroundImgLists <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>antImg<span class="token punctuation">,</span>pa_gauss2<span class="token punctuation">,</span><span class="token string">'conv'</span><span class="token punctuation">,</span><span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>CenterImgLists <span class="token operator">=</span> <span class="token function">imfilter</span><span class="token punctuation">(</span>Img<span class="token punctuation">,</span>pa_gauss1<span class="token punctuation">,</span><span class="token string">'conv'</span><span class="token punctuation">,</span><span class="token string">'symmetric'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>outImg <span class="token operator">=</span> CenterImgLists <span class="token operator">-</span> SurroundImgLists<span class="token punctuation">;</span><span class="token function">outImg</span><span class="token punctuation">(</span>outImg<span class="token operator">&lt;</span><span class="token number">0.0</span><span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token number">0.0</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="线性归一化"><a class="markdownIt-Anchor" href="#线性归一化"></a> 线性归一化</h3><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> <span class="token punctuation">[</span>outputs<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>arg<span class="token punctuation">)</span>    MAX <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    MIN <span class="token operator">=</span> <span class="token function">min</span><span class="token punctuation">(</span><span class="token function">arg</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    outputs <span class="token operator">=</span> <span class="token punctuation">(</span>arg <span class="token operator">-</span> MIN<span class="token punctuation">)</span><span class="token operator">./</span> <span class="token punctuation">(</span>MAX <span class="token operator">-</span> MIN<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="其他操作"><a class="markdownIt-Anchor" href="#其他操作"></a> 其他操作</h3><p>最后，将其他操作写在主函数中，详见代码注释。</p><pre class="line-numbers language-matlab" data-language="matlab"><code class="language-matlab"><span class="token keyword">function</span> outputs <span class="token operator">=</span> <span class="token function">main</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span>I <span class="token operator">=</span> <span class="token function">im2double</span><span class="token punctuation">(</span>input<span class="token punctuation">)</span><span class="token punctuation">;</span>R <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>G <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>B <span class="token operator">=</span> <span class="token function">I</span><span class="token punctuation">(</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token operator">:</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 计算 Y 通道</span>Lin <span class="token operator">=</span> <span class="token number">0.299</span><span class="token operator">*</span>R <span class="token operator">+</span> <span class="token number">0.587</span><span class="token operator">*</span>G <span class="token operator">+</span><span class="token number">0.114</span><span class="token operator">*</span>B<span class="token punctuation">;</span><span class="token comment">% 对数归一化</span>alpha <span class="token operator">=</span> <span class="token function">max</span><span class="token punctuation">(</span><span class="token function">max</span><span class="token punctuation">(</span>Lin<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span>Llog <span class="token operator">=</span> <span class="token function">log</span><span class="token punctuation">(</span>Lin <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">/</span> <span class="token function">log</span><span class="token punctuation">(</span>alpha<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 计算期望中位数</span><span class="token punctuation">[</span>Ld <span class="token punctuation">,</span> Lb<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fen_qu</span><span class="token punctuation">(</span>Llog<span class="token punctuation">)</span><span class="token punctuation">;</span>ML <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">/</span><span class="token number">3</span> <span class="token operator">+</span> <span class="token function">std</span><span class="token punctuation">(</span>Ld<span class="token punctuation">)</span><span class="token punctuation">;</span>MH <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">std</span><span class="token punctuation">(</span>Lb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 搜索最优 γ</span>Min1 <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">;</span>Min2 <span class="token operator">=</span> <span class="token function">zeros</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">91</span><span class="token punctuation">)</span><span class="token punctuation">;</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">0.1</span><span class="token operator">:</span><span class="token number">0.01</span><span class="token operator">:</span><span class="token number">1</span>    clear Ld    <span class="token punctuation">[</span>Ld <span class="token punctuation">,</span> <span class="token operator">~</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fen_qu</span><span class="token punctuation">(</span>Llog<span class="token operator">.^</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Min1</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">median</span><span class="token punctuation">(</span>Ld<span class="token punctuation">)</span> <span class="token operator">-</span> ML<span class="token punctuation">)</span><span class="token punctuation">;</span>    k <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">end</span>k <span class="token operator">=</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">for</span> <span class="token number">i</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token operator">:</span><span class="token number">0.1</span><span class="token operator">:</span><span class="token number">10</span>    clear Lb    <span class="token punctuation">[</span><span class="token operator">~</span> <span class="token punctuation">,</span> Lb<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token function">fen_qu</span><span class="token punctuation">(</span>Llog<span class="token operator">.^</span><span class="token number">i</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token function">Min2</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span> <span class="token operator">=</span> <span class="token function">abs</span><span class="token punctuation">(</span><span class="token function">median</span><span class="token punctuation">(</span>Lb<span class="token punctuation">)</span> <span class="token operator">-</span> MH<span class="token punctuation">)</span><span class="token punctuation">;</span>    k <span class="token operator">=</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token keyword">end</span>gamma_L <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">find</span><span class="token punctuation">(</span>Min1 <span class="token operator">==</span> <span class="token function">min</span><span class="token punctuation">(</span>Min1<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.01</span> <span class="token operator">+</span> <span class="token number">0.1</span><span class="token punctuation">;</span>gamma_H <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token function">find</span><span class="token punctuation">(</span>Min2 <span class="token operator">==</span> <span class="token function">min</span><span class="token punctuation">(</span>Min2<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token operator">*</span> <span class="token number">0.1</span> <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">;</span><span class="token comment">% 伽马校正</span>Ld <span class="token operator">=</span> Llog <span class="token operator">.^</span> gamma_L<span class="token punctuation">;</span>Lb <span class="token operator">=</span> Llog <span class="token operator">.^</span> gamma_H<span class="token punctuation">;</span><span class="token comment">% 局部对比度增强</span>Ld_p <span class="token operator">=</span> Ld <span class="token operator">+</span> <span class="token function">DoG</span><span class="token punctuation">(</span>Ld<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>Ld<span class="token punctuation">)</span><span class="token punctuation">;</span>Lb_p <span class="token operator">=</span> Lb <span class="token operator">+</span> <span class="token function">DoG</span><span class="token punctuation">(</span>Lb<span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">,</span>Lb<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 自适应权重计算与图像融合</span>w <span class="token operator">=</span> <span class="token function">exp</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token punctuation">(</span>Lb<span class="token operator">.^</span><span class="token number">2</span><span class="token punctuation">)</span><span class="token operator">./</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token operator">*</span><span class="token number">0.5</span><span class="token operator">*</span><span class="token number">0.5</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>L_out <span class="token operator">=</span> w <span class="token operator">.*</span> Ld_p <span class="token operator">+</span> <span class="token punctuation">(</span><span class="token number">1</span><span class="token operator">-</span>w<span class="token punctuation">)</span> <span class="token operator">.*</span> Lb_p<span class="token punctuation">;</span>L_out <span class="token operator">=</span> <span class="token function">Normalization</span><span class="token punctuation">(</span>L_out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 自适应色彩恢复</span>s <span class="token operator">=</span> <span class="token number">1</span> <span class="token operator">-</span> <span class="token function">tanh</span><span class="token punctuation">(</span>Lb<span class="token punctuation">)</span><span class="token punctuation">;</span>R_out <span class="token operator">=</span> L_out <span class="token operator">.*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>R <span class="token operator">./</span> Lin<span class="token punctuation">)</span><span class="token operator">.^</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>G_out <span class="token operator">=</span> L_out <span class="token operator">.*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>G <span class="token operator">./</span> Lin<span class="token punctuation">)</span><span class="token operator">.^</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span>B_out <span class="token operator">=</span> L_out <span class="token operator">.*</span> <span class="token punctuation">(</span><span class="token punctuation">(</span>B <span class="token operator">./</span> Lin<span class="token punctuation">)</span><span class="token operator">.^</span>s<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">% 输出</span>outputs <span class="token operator">=</span> <span class="token function">cat</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span>R_out<span class="token punctuation">,</span>G_out<span class="token punctuation">,</span>B_out<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token keyword">end</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="几张低照度图像"><a class="markdownIt-Anchor" href="#几张低照度图像"></a> 几张低照度图像</h2><blockquote><p>左为原图，右为结果图。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128211448.png" alt="01" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128211527.png" alt="1" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128212016.png" alt="02" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128213320.png" alt="03" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128213408.png" alt="4" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128213424.png" alt="5" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128213445.png" alt="703" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128213445.png" alt="785" / loading="lazy"></p><h2 id="几张水下图像"><a class="markdownIt-Anchor" href="#几张水下图像"></a> 几张水下图像</h2><blockquote><p>左为原图，右为结果图。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201647.png" alt="10" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201718.png" alt="57" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201456.png" alt="9" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201857.png" alt="184" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201335.png" alt="8" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201232.png" alt="7" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128202527.png" alt="910" / loading="lazy"></p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/img/20210128201935.png" alt="41" / loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> Matlab </tag>
            
            <tag> 科研 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IU-Celebrity</title>
      <link href="IU-Celebrity/"/>
      <url>IU-Celebrity/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><iframe width=100% height=490px  src="https://www.acfun.cn/player/ac23167762" id="ACPlayer-re"  scrolling="no" border="0" frameborder="no" framespacing="0" allowfullscreen="true"></iframe><a id="more"></a>]]></content>
      
      
      
        <tags>
            
            <tag> IU </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>囚犯困境</title>
      <link href="qfkj/"/>
      <url>qfkj/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p><em><strong>坦白从宽，牢底坐穿。</strong></em></p><p><em><strong>抗拒从严，回家过年。</strong></em></p></blockquote><p><img src="https://gitee.com/blog-img/images/raw/master/21/20210124212803.png" alt="image" / loading="lazy"></p><a id="more"></a>    <div id="aplayer-tAWEWvPB" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="513360721" data-server="netease" data-type="song" data-mode="circulation" data-autoplay="false" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86"    ></div><h2 id="什么是囚犯困境"><a class="markdownIt-Anchor" href="#什么是囚犯困境"></a> 什么是囚犯困境</h2><p>这个关于囚犯的杜撰例子，经过几十年的传播和修改后，现在基本上是以下面的例子呈献的：</p><p>两个小偷（也称为“囚犯”）<strong>一起</strong>去盗窃，结果很不幸，被警察逮了个正着。然后，警察在两个<strong>独立</strong>的<strong>不能互通信息</strong>的审讯室里分别对这两个小偷进行审讯。在这种情形下，两个小偷都可以作出自己的选择：选择坦白，供述以往的犯罪事实（即与警察合作，从而背叛他的同伙），或者选择抗拒，保持沉默（也就是与他的同伙合作，而不是与警察合作）。这两个囚犯都知道，如果他俩都能保持抗拒的话，警察只能以本次的犯罪事实定罪，判少量的徒刑，两人都坐 2 年牢。警察为了激励他们招供，就对他们说：如果他们中的一个人坦白，即告发他的同伙，那么他就可以被当场释放。而他的同伙则被加重处罚，坐 10 年牢（坦白从宽、抗拒从严）。当然，如果这两个人都选择招供、互相背叛的话，就会按照以往的犯罪事实来定罪，即两人都坐 5 年牢，既不会被奖励，也不会被加重处罚。双方的损益矩阵表如下：</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/20210124213451.jpg" alt="prisoner's dilemma(rev.)-01" / loading="lazy"></p><p>很明显，对于囚犯们整体而言，<strong>双方都选择沉默</strong>是全局最优策略。但是，对于每个个体来说，如果对方选择沉默，自己应该选择坦白认罪即可即可获得释放；如果对方选择坦白认罪，此时自己如果选择抗拒就会服刑10年，坦白认罪服刑5年，因此，选择坦白认罪是此时的最优策略。也就是<strong>无论对方怎么做，自己选择坦白认罪永远是最有利于自身的选择</strong>。由于<strong>驴也是这么想的</strong>，因此博弈双方就会自然的选择坦白认罪，最终获得了一个<strong>最坏的结局</strong>。</p><h2 id="攻守同盟是否有用"><a class="markdownIt-Anchor" href="#攻守同盟是否有用"></a> 攻守同盟是否有用</h2><blockquote><p>试想一下，如果在审讯过程中给小偷们 5 分钟的时间商量一下对策，即小偷双方达成战时攻守同盟，约定好一起选择沉默不认罪。这样的攻守同盟是否有用？</p></blockquote><p>然后，双方再单独被提审。我们不妨设想囚犯A的心理，他一定会认为，如果囚犯B遵守约定的话，则自己坦白就可获得自由；如果囚犯B不遵守约定的话，若选择抗拒就会被判坐更长时间的牢，因此也应该选择坦白。也就是说，无论对方是否遵守约定，自己不遵守约定都是最好的选择。特别是囚犯A认为囚犯B也会有跟他同样的想法，也会选择坦白时，更不会有单独背叛对方的道德负担。</p><p><strong>事实上，双方并不能依靠简单的沟通或约定而摆脱困境。恋人们在恋爱中海誓山盟，最终还是会分手；企业之间相互沟通信誓旦旦，价格战仍然会爆发；美苏（俄）两国经常会晤，甚至签订核不扩散条约，但军费一年高过一年……这些现象都反映了上面所说明的问题。</strong></p><h2 id="原因分析"><a class="markdownIt-Anchor" href="#原因分析"></a> 原因分析</h2><p>对于出现囚犯困境的原因，人们一般理解为是<strong>个体对于自身利益的追求</strong>。在上表中，每个囚犯选择坦白的目的是为了自己能够少坐牢。如果每个囚犯不是为了自己的利益考虑，而是能够为别人的利益考虑，哪怕自己多坐牢也要让对方先出去，那么，无论对方选择什么，自己都会选择抗拒，最后的结果就是（抗拒、抗拒），两个人都会得到最好的结果。或许，这就是所谓的困境：<strong>每个人都想少坐牢，选择了坦白，结果多坐牢；每个人都想多坐牢，选择了抗拒，反而可以少坐牢</strong>。真乃“事与愿违”！</p><p>如果人们把囚犯困境的原因归结为囚犯对自身利益的追求，那么，要想避免出现囚犯困境，就应该把囚犯们改造成“毫不利己、专门利人”的人，也就是说，要改变的是“人性”。从延安时期的白求恩、张思德，到解放战争时期的董存瑞和抗美援朝的黄继光、邱少云，再到新中国成立后不久的焦裕禄、雷锋，以及改革开放之后的孔繁森、牛玉儒、任长霞等，众多让几代中国人耳熟能详的模范人物最大的人格魅力，就是他们都具有无私奉献的精神。然而，要把13亿中国人中的大多数都改造成和这些模范人物一样，是不可能的。表面上看，囚犯对自身利益的追求是导致囚犯困境的原因，其实真正的原因是：<strong>囚犯们在追求自身利益的同时，以更多地损害对方的利益为代价。</strong></p><p>看下表中的例子，如果囚犯们面对的是真正的“坦白从宽、抗拒从严”，那么每个人选择占优策略所形成的占优策略均衡就是一个对双方来说最好的结局。</p><table><thead><tr><th></th><th>坦白</th><th>抗拒</th></tr></thead><tbody><tr><td><strong>坦白</strong></td><td>（-0.5 ，-0.5）</td><td>（0， -5）</td></tr><tr><td><strong>抗拒</strong></td><td>（-5 ，0）</td><td>（-3， -3）</td></tr></tbody></table><p>由上表可知，无论对方选择坦白还是抗拒，选择坦白都是对我们最有利的结果。于是，双方依然是都选择坦白，但此时双方都选择坦白就是整个博弈的最优策略。对比与原囚犯困境模型，可以发现不同之处在于，<strong>囚犯们的利己选择是否以更大程度上的损人为代价。</strong></p><p>在原模型中，如果 A 选择沉默 ，B选择认罪所获得的利益要小于因此使对方遭受的损失，在这种情况下，由于双方的利己选择都是以更大程度上损失对方的利益为代价，最终会使得双方获得整体上的最差结果。</p><p>而在新的博弈模型中，假设 A 选择抗拒，此时B选择坦白会比选择抗拒少坐3年牢，而 A 会因为 B 的坦白多坐牢2年。也正是因为此时双方的利己选择所得到的利益大于对方遭受的损失，于是双方即使都做出利己选择，也会达到全局最优解。</p><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/20210126152430.png" alt="image-20210126152421655" / loading="lazy"></p><blockquote><p>以上分析给了我们一个非常重要的启示：<strong>损人利己和损己利人从本质上是一样的，是一个硬币的正反两面；从一方看来是损人利己的行为，在另一方看来就是损己利人的行为，问题的关键是所损（失）的部分和所利（得）的部分哪个更多。</strong></p></blockquote><h2 id="如何摆脱囚犯困境"><a class="markdownIt-Anchor" href="#如何摆脱囚犯困境"></a> 如何摆脱囚犯困境</h2><blockquote><p>德国达豪集中营入口处，刻着17世纪一位诗人的警世名言：“当一个政权开始烧书的时候，若不加以阻止，它的下一步就要烧人；当一个政权开始禁言的时候，若不加以阻止，它的下一步就要灭口！”出口处还有一条：“当世人忘掉这些事的时候，就意味着，这些事还会发生。”</p></blockquote><ol><li><p><strong>道德教化</strong></p><p>初次接触囚犯困境的读者很容易去谴责小偷背信弃义、只顾自己利益的行为，并对最后的结局有一种幸灾乐祸的感觉。对囚犯困境的进一步思考，又让人们意识到囚犯困境不仅仅是囚犯的困境，而是整个人类面临的困境。如果人类不能把他人的利益纳入自己的损益函数中来，那么这个社会的前景是令人担忧的。金迪斯（H.Gintis）是桑塔菲学派的一位经济学家，在最近的一系列论文里论证了一个被叫作“社会学基本定理”的看法。他论证，如果一个社会都是由自利主义者构成的，那么，长期而言，这个社会将会消亡。而如果一个社会通过“说服教育”以及其他说教机构的努力，长期保持一定比例的利他主义者，它就能够稳定地繁衍下去。</p></li><li><p><strong>财产私有</strong></p><p>回顾中国人民公社的那段历史，社员们“出工不出力”，“一不做、二不休”又何尝不是一种囚犯困境。正如苏联的工人所说：“他们假装给我卢布，我假装努力工作！”中国比苏联走得更远，最后宣告了人民公社制度的彻底失败。</p></li><li><p><strong>温故知新</strong></p><p>如果人类不能从过去的历史中获得遥望未来的能力，那么每一代人都只能重复过去的故事。如何从过去总结教训、习得经验是人不同于其他动物的重要区别。今天的狮子与2000年前的狮子相比，在智力水平上并没有明显的变化，而今天的人与2000年前的人相比却有了智力上的巨大变化，因为我们通过符号记载了过去的历史，传承了过去的经验和教训，让我们不仅仅像狮子那样能从父辈那里习得生活的能力，还可以从2000多年前的孔子、孟子和孙子那里，学会做人做事的道理。</p></li></ol><h2 id="如何利用他人的囚犯困境"><a class="markdownIt-Anchor" href="#如何利用他人的囚犯困境"></a> 如何利用他人的囚犯困境</h2><p>囚犯困境对囚犯们而言当然是一种困境，而对警察而言，就是乐境了。那么，对你而言，如何能够利用别人的囚犯困境让自己获得更大的利益呢？</p><p>最常见的一种是你作为消费者货比三家，让商家给你报价，选最便宜的买。这样，商家就陷入了囚犯困境，给了你一个相对低的价格。特别是许多耐用消费品，消费者往往通过持币待购的方式逼迫厂家降价。航空公司和旅游公司在消费淡季的时候，也会陷入囚犯困境中，被消费者任意宰割。当然，在旺季的时候，两者的情况又反了过来，消费者之间的竞价让航空公司和旅游公司得到了好处。房地产行业也是如此，房子热卖的时候，开发商采用捂盘的方式导致购房人纷纷抢购；而房子销售形势不好时，开发商又纷纷采取打折等各种优惠措施来吸引人们购买。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 博弈论 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爱是如何消失的💔</title>
      <link href="asrhxsd/"/>
      <url>asrhxsd/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><p><img src="https://gitee.com/blog-img/images/raw/master/20/10/20210119122544.jpg" alt="7b333f02-6c89-44fd-bed6-cee745ec223b" / loading="lazy"></p><h2 id="白羊座的爱是如何消失的"><a class="markdownIt-Anchor" href="#白羊座的爱是如何消失的"></a> ♈<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/baiyang.html">白羊座的爱是如何消失的</a></h2><a id="more"></a><h2 id="金牛座的爱是如何消失的"><a class="markdownIt-Anchor" href="#金牛座的爱是如何消失的"></a> ♉<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/jinniu.html">金牛座的爱是如何消失的</a></h2><h2 id="双子座的爱是如何消失的"><a class="markdownIt-Anchor" href="#双子座的爱是如何消失的"></a> ♊<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/shuangzi.html">双子座的爱是如何消失的</a></h2><h2 id="巨蟹座的爱是如何消失的"><a class="markdownIt-Anchor" href="#巨蟹座的爱是如何消失的"></a> ♋<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/juxie.html">巨蟹座的爱是如何消失的</a></h2><h2 id="狮子座的爱是如何消失的"><a class="markdownIt-Anchor" href="#狮子座的爱是如何消失的"></a> ♌<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/shizi.html">狮子座的爱是如何消失的</a></h2><h2 id="处女座的爱是如何消失的"><a class="markdownIt-Anchor" href="#处女座的爱是如何消失的"></a> ♍<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/chunv.html">处女座的爱是如何消失的</a></h2><h2 id="天秤座的爱是如何消失的"><a class="markdownIt-Anchor" href="#天秤座的爱是如何消失的"></a> ♎<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/tiancheng.html">天秤座的爱是如何消失的</a></h2><h2 id="天蝎座的爱是如何消失的"><a class="markdownIt-Anchor" href="#天蝎座的爱是如何消失的"></a> ♏<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/tianxie.html">天蝎座的爱是如何消失的</a></h2><h2 id="射手座的爱是如何消失的"><a class="markdownIt-Anchor" href="#射手座的爱是如何消失的"></a> ♐<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/sheshou.html">射手座的爱是如何消失的</a></h2><h2 id="摩羯座的爱是如何消失的"><a class="markdownIt-Anchor" href="#摩羯座的爱是如何消失的"></a> ♑<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/mojie.html">摩羯座的爱是如何消失的</a></h2><h2 id="水瓶座的爱是如何消失的"><a class="markdownIt-Anchor" href="#水瓶座的爱是如何消失的"></a> ♒<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/shuiping.html">水瓶座的爱是如何消失的</a></h2><h2 id="双鱼座的爱是如何消失的"><a class="markdownIt-Anchor" href="#双鱼座的爱是如何消失的"></a> ♓<a href="/%E7%88%B1%E6%98%AF%E5%A6%82%E4%BD%95%E6%B6%88%E5%A4%B1%E7%9A%84/shuangyu.html">双鱼座的爱是如何消失的</a></h2>]]></content>
      
      
      
        <tags>
            
            <tag> 星座 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>LeetCode 刷题笔记</title>
      <link href="leetcodestbj/"/>
      <url>leetcodestbj/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>为了能够实现进大厂被资本家无情压迫的梦想，坚持每天一道题。🤑</p><p>先用 Python 写，学了 C++ 之后再刷一遍。😇</p><p><a href="https://github.com/WANG-Guangxin/leetcode">这里是我的代码仓库</a>✨</p><p>不保证缩进正确，复制粘贴时候小心一点👀</p><p>主要是给我自己看的，所以解题思路我就不写了，我相信我能看懂自己的代码。😝</p><p>简单记一下做题感受。😶</p></blockquote><a id="more"></a><h2 id="️"><a class="markdownIt-Anchor" href="#️"></a> ✔️</h2><h3 id="1两数之和"><a class="markdownIt-Anchor" href="#1两数之和"></a> 1–两数之和</h3><p>给定一个整数数组 nums 和一个整数目标值 target，请你在该数组中找出 和为目标值 的那 两个 整数，并返回它们的数组下标。</p><p>你可以假设每种输入只会对应一个答案。但是，数组中同一个元素不能使用两遍。</p><p>你可以按任意顺序返回答案。</p><p>示例 1：</p><p>输入：nums = [2,7,11,15], target = 9<br />输出：[0,1]<br />解释：因为 nums[0] + nums[1] == 9 ，返回 [0, 1] 。</p><p>示例 2：</p><p>输入：nums = [3,2,4], target = 6<br />输出：[1,2]</p><p>示例 3：</p><p>输入：nums = [3,3], target = 6<br />输出：[0,1]</p><p>提示：</p><p>2 &lt;= nums.length &lt;= 103<br />-109 &lt;= nums[i] &lt;= 109<br />-109 &lt;= target &lt;= 109<br />只会存在一个有效答案</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">twoSum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''        就挺暴力的        '''</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> target <span class="token operator">==</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">+</span> nums<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">:</span>                    <span class="token keyword">return</span> <span class="token punctuation">[</span>i<span class="token punctuation">,</span>j<span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">twoSum_2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span>target<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''        空间换时间        '''</span>    hashmap <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>    <span class="token keyword">for</span> i<span class="token punctuation">,</span> num <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> target <span class="token operator">-</span> num <span class="token keyword">in</span> hashmap<span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token punctuation">[</span>hashmap<span class="token punctuation">[</span>target <span class="token operator">-</span> num<span class="token punctuation">]</span> <span class="token punctuation">,</span> i<span class="token punctuation">]</span>    hashmap<span class="token punctuation">[</span>num<span class="token punctuation">]</span> <span class="token operator">=</span> i    <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>两层循环是最好想的，第二种方法也不是很难，只是我还不习惯。<br />嗯… 应该努力让自己习惯。</p></blockquote><h3 id="2两数相加"><a class="markdownIt-Anchor" href="#2两数相加"></a> 2–两数相加</h3><p>给你两个 非空 的链表，表示两个非负的整数。它们每位数字都是按照 逆序 的方式存储的，并且每个节点只能存储 一位 数字。</p><p>请你将两个数相加，并以相同形式返回一个表示和的链表。</p><p>你可以假设除了数字 0 之外，这两个数都不会以 0 开头。</p><p>示例 1：</p><p>输入：l1 = [2,4,3], l2 = [5,6,4]<br />输出：[7,0,8]<br />解释：342 + 465 = 807.</p><p>示例 2：</p><p>输入：l1 = [0], l2 = [0]<br />输出：[0]</p><p>示例 3：</p><p>输入：l1 = [9,9,9,9,9,9,9], l2 = [9,9,9,9]<br />输出：[8,9,9,9,0,0,0,1]</p><p>提示：</p><p>每个链表中的节点数在范围 [1, 100] 内<br />0 &lt;= Node.val &lt;= 9<br />题目数据保证列表表示的数字不含前导零</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">ListNode</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token operator">=</span><span class="token number">0</span><span class="token punctuation">,</span> <span class="token builtin">next</span><span class="token operator">=</span><span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val        self<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token builtin">next</span><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">addTwoNumbers</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> l1<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> l2<span class="token punctuation">:</span> ListNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ListNode<span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    提交成功  时空性能较差    '''</span>        jinwei <span class="token operator">=</span> <span class="token number">0</span>        head <span class="token operator">=</span> ListNode<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>        p <span class="token operator">=</span> head        head<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> p        <span class="token keyword">if</span> l1 <span class="token operator">==</span> <span class="token boolean">None</span> <span class="token keyword">or</span> l2 <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> l1 <span class="token keyword">or</span> l2        <span class="token keyword">while</span> l1 <span class="token keyword">and</span> l2<span class="token punctuation">:</span>            tmp <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span> l2<span class="token punctuation">.</span>val <span class="token operator">+</span> jinwei            val <span class="token operator">=</span> tmp <span class="token operator">%</span> <span class="token number">10</span>            q <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>            p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> q            p <span class="token operator">=</span> q            jinwei <span class="token operator">=</span> tmp <span class="token operator">//</span> <span class="token number">10</span>            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span><span class="token builtin">next</span>            l2 <span class="token operator">=</span> l2<span class="token punctuation">.</span><span class="token builtin">next</span>        <span class="token keyword">if</span> l1 <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span>l1 <span class="token operator">=</span> l2        <span class="token keyword">while</span> l1<span class="token punctuation">:</span>            tmp <span class="token operator">=</span> l1<span class="token punctuation">.</span>val <span class="token operator">+</span>jinwei            val <span class="token operator">=</span> tmp<span class="token operator">%</span><span class="token number">10</span>            q <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>val<span class="token punctuation">)</span>            p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> q            p <span class="token operator">=</span> q            jinwei <span class="token operator">=</span> tmp <span class="token operator">//</span> <span class="token number">10</span>            l1 <span class="token operator">=</span> l1<span class="token punctuation">.</span><span class="token builtin">next</span>        <span class="token keyword">if</span> jinwei<span class="token punctuation">:</span>            q <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>jinwei<span class="token punctuation">)</span>            p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> q            p <span class="token operator">=</span> q        p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">return</span> head<span class="token punctuation">.</span><span class="token builtin">next</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>和考研的数据结构题挺像的，我也是那个思想解的，肯定打不过他们的代码。</p></blockquote><h3 id="3无重复最长子串"><a class="markdownIt-Anchor" href="#3无重复最长子串"></a> 3–无重复最长子串</h3><p>给定一个字符串，请你找出其中不含有重复字符的 最长子串 的长度。</p><p>示例 1:</p><p>输入: s = “abcabcbb”<br />输出: 3<br />解释: 因为无重复字符的最长子串是 “abc”，所以其长度为 3。</p><p>示例 2:</p><p>输入: s = “bbbbb”<br />输出: 1<br />解释: 因为无重复字符的最长子串是 “b”，所以其长度为 1。</p><p>示例 3:</p><p>输入: s = “pwwkew”<br />输出: 3<br />解释: 因为无重复字符的最长子串是 “wke”，所以其长度为 3。<br />请注意，你的答案必须是 子串 的长度，“pwke” 是一个子序列，不是子串。</p><p>示例 4:</p><p>输入: s = “”<br />输出: 0</p><p>提示：</p><p>0 &lt;= s.length &lt;= 5 * 104<br />s 由英文字母、数字、符号和空格组成</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">lengthOfLongestSubstring</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    背的答案  效果一般    '''</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span>        <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token punctuation">:</span><span class="token keyword">return</span> n        tmp <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span>s<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token number">0</span>        r <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">while</span> r <span class="token operator">+</span> <span class="token number">1</span> <span class="token operator">&lt;</span> n <span class="token keyword">and</span> s<span class="token punctuation">[</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token keyword">not</span> <span class="token keyword">in</span> tmp<span class="token punctuation">:</span>                tmp<span class="token punctuation">.</span>add<span class="token punctuation">(</span>s<span class="token punctuation">[</span>r<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                r <span class="token operator">=</span> r <span class="token operator">+</span> <span class="token number">1</span>            res <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>res<span class="token punctuation">,</span>r<span class="token operator">+</span><span class="token number">1</span> <span class="token operator">-</span> i<span class="token punctuation">)</span>            tmp<span class="token punctuation">.</span>remove<span class="token punctuation">(</span>s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这个题乍一看还挺简单的，但是我思考了好久，尝试了好多次都没做出来。<br />最后还是选择看了答案。<br />希望下次见到能做出来吧。</p></blockquote><h3 id="7整数反转"><a class="markdownIt-Anchor" href="#7整数反转"></a> 7–整数反转</h3><p>给出一个 32 位的有符号整数，你需要将这个整数中每位上的数字进行反转。</p><p>注意：</p><p>假设我们的环境只能存储得下 32 位的有符号整数，则其数值范围为 [−231,  231 − 1]。请根据这个假设，如果反转后整数溢出那么就返回 0。</p><p>示例 1：</p><p>输入：x = 123<br />输出：321<br />示例 2：</p><p>输入：x = -123<br />输出：-321<br />示例 3：</p><p>输入：x = 120<br />输出：21<br />示例 4：</p><p>输入：x = 0<br />输出：0</p><p>提示：</p><p>-231 &lt;= x &lt;= 231 - 1</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">reverse</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    做一道简单的放松一下    '''</span>        tag <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">if</span> x <span class="token operator">&lt;</span> <span class="token number">0</span> <span class="token punctuation">:</span>            x <span class="token operator">=</span> <span class="token operator">-</span>x            tag <span class="token operator">=</span> <span class="token number">1</span>        tmp <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">while</span> x <span class="token operator">!=</span> <span class="token number">0</span><span class="token punctuation">:</span>            tmp<span class="token punctuation">.</span>append<span class="token punctuation">(</span>x <span class="token operator">%</span> <span class="token number">10</span><span class="token punctuation">)</span>            x <span class="token operator">=</span> x <span class="token operator">//</span> <span class="token number">10</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>tmp<span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> x <span class="token operator">+</span> tmp<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token operator">*</span> <span class="token punctuation">(</span><span class="token number">10</span> <span class="token operator">**</span> <span class="token punctuation">(</span>n<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">if</span> x <span class="token operator">></span> <span class="token number">2</span> <span class="token operator">**</span> <span class="token number">31</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token number">0</span>        <span class="token keyword">if</span> tag <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> <span class="token operator">-</span>x        <span class="token keyword">return</span> x<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这个题挺简单的，但是注意审题！第一次提交的时候忘记了判断反转之后是否越界。</p><p>~~我做题就是眼瞎，考研时候就是。~~😞</p></blockquote><h3 id="86分隔链表"><a class="markdownIt-Anchor" href="#86分隔链表"></a> 86–分隔链表</h3><p>给你一个链表和一个特定值 x ，请你对链表进行分隔，使得所有小于 x 的节点都出现在大于或等于 x 的节点之前。</p><p>你应当保留两个分区中每个节点的初始相对位置。</p><p>示例：</p><p>输入：head = 1-&gt;4-&gt;3-&gt;2-&gt;5-&gt;2, x = 3<br />输出：1-&gt;2-&gt;2-&gt;4-&gt;3-&gt;5</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Definition for singly-linked list.</span><span class="token comment"># class ListNode:</span><span class="token comment">#     def __init__(self, x):</span><span class="token comment">#         self.val = x</span><span class="token comment">#         self.next = None</span><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">partition</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> head<span class="token punctuation">:</span> ListNode<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> ListNode<span class="token punctuation">:</span>        <span class="token keyword">if</span> head <span class="token operator">==</span> <span class="token boolean">None</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">None</span>        xiaoyu <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>head<span class="token punctuation">.</span>val<span class="token punctuation">)</span>        p <span class="token operator">=</span> xiaoyu        dayu <span class="token operator">=</span> ListNode<span class="token punctuation">(</span>head<span class="token punctuation">.</span>val<span class="token punctuation">)</span>        q <span class="token operator">=</span> dayu        h <span class="token operator">=</span> head        <span class="token keyword">while</span> h<span class="token punctuation">:</span>            <span class="token keyword">if</span> h<span class="token punctuation">.</span>val <span class="token operator">&lt;</span> x<span class="token punctuation">:</span>                p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> h                p <span class="token operator">=</span> p<span class="token punctuation">.</span><span class="token builtin">next</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                q<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> h                q <span class="token operator">=</span> q<span class="token punctuation">.</span><span class="token builtin">next</span>            h <span class="token operator">=</span> h<span class="token punctuation">.</span><span class="token builtin">next</span>        p<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> dayu<span class="token punctuation">.</span><span class="token builtin">next</span>        q<span class="token punctuation">.</span><span class="token builtin">next</span> <span class="token operator">=</span> <span class="token boolean">None</span>        <span class="token keyword">return</span> xiaoyu<span class="token punctuation">.</span><span class="token builtin">next</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>嗯… 这题好像没啥说的，就… 挺简单的。</p></blockquote><h3 id="189移动数组"><a class="markdownIt-Anchor" href="#189移动数组"></a> 189–移动数组</h3><p>给定一个数组，将数组中的元素向右移动 k 个位置，其中 k 是非负数。</p><p>示例 1:</p><p>输入: [1,2,3,4,5,6,7] 和 k = 3<br />输出: [5,6,7,1,2,3,4]<br />解释:<br />向右旋转 1 步: [7,1,2,3,4,5,6]<br />向右旋转 2 步: [6,7,1,2,3,4,5]<br />向右旋转 3 步: [5,6,7,1,2,3,4]</p><p>示例 2:</p><p>输入: [-1,-100,3,99] 和 k = 2<br />输出: [3,99,-1,-100]<br />解释:<br />向右旋转 1 步: [99,-1,-100,3]<br />向右旋转 2 步: [3,99,-1,-100]</p><p>说明:</p><p>尽可能想出更多的解决方案，至少有三种不同的方法可以解决这个问题。<br />要求使用空间复杂度为 O(1) 的 原地 算法。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">rotate</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">"""        Do not return anything, modify nums in-place instead.        """</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        k <span class="token operator">=</span> k <span class="token operator">%</span> n        temp <span class="token operator">=</span> nums<span class="token punctuation">[</span>n<span class="token operator">-</span>k<span class="token punctuation">:</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token operator">-</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>            nums<span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>n<span class="token operator">-</span>i<span class="token operator">-</span>k<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">:</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> temp    <span class="token keyword">def</span> <span class="token function">rotate_2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token boolean">None</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    在数据结构的书上见过这种题：大概是三次 逆置 操作    '''</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        k <span class="token operator">%=</span> n        nums<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        nums<span class="token punctuation">[</span><span class="token punctuation">:</span>k<span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token punctuation">:</span>k<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span>        nums<span class="token punctuation">[</span>k<span class="token punctuation">:</span><span class="token punctuation">]</span> <span class="token operator">=</span> nums<span class="token punctuation">[</span>k<span class="token punctuation">:</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token punctuation">:</span><span class="token punctuation">:</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这题我就感觉在王道那个书上见过，三次逆置操作。</p><p>但是还是没有那么写，选了一个比较直观的思路。</p><p>我就是这么直，要改改了。😅</p></blockquote><h3 id="228汇总区间"><a class="markdownIt-Anchor" href="#228汇总区间"></a> 228–汇总区间</h3><p>给定一个无重复元素的有序整数数组 nums 。</p><p>返回 恰好覆盖数组中所有数字 的 最小有序 区间范围列表。也就是说，nums 的每个元素都恰好被某个区间范围所覆盖，并且不存在属于某个范围但不属于 nums 的数字 x 。</p><p>列表中的每个区间范围 [a,b] 应该按如下格式输出：</p><p>“a-&gt;b” ，如果 a != b<br />“a” ，如果 a == b</p><p>示例 1：</p><p>输入：nums = [0,1,2,4,5,7]<br />输出：[“0-&gt;2”,“4-&gt;5”,“7”]<br />解释：区间范围是：<br />[0,2] --&gt; “0-&gt;2”<br />[4,5] --&gt; “4-&gt;5”<br />[7,7] --&gt; “7”</p><p>示例 2：</p><p>输入：nums = [0,2,3,4,6,8,9]<br />输出：[“0”,“2-&gt;4”,“6”,“8-&gt;9”]<br />解释：区间范围是：<br />[0,0] --&gt; “0”<br />[2,4] --&gt; “2-&gt;4”<br />[6,6] --&gt; “6”<br />[8,9] --&gt; “8-&gt;9”</p><p>示例 3：</p><p>输入：nums = []<br />输出：[]</p><p>示例 4：</p><p>输入：nums = [-1]<br />输出：[&quot;-1&quot;]</p><p>示例 5：</p><p>输入：nums = [0]<br />输出：[“0”]</p><p>提示：</p><p>0 &lt;= nums.length &lt;= 20<br />-231 &lt;= nums[i] &lt;= 231 - 1<br />nums 中的所有值都 互不相同<br />nums 按升序排列</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">summaryRanges</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">str</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span><span class="token keyword">return</span> result        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token string">"%s"</span><span class="token operator">%</span>nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        k <span class="token operator">=</span> nums<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">></span> nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token operator">+</span><span class="token number">1</span> <span class="token punctuation">:</span>                <span class="token keyword">if</span> nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> k <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>                    result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"%s->%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>nums<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token operator">%</span>k<span class="token punctuation">)</span>                k <span class="token operator">=</span> nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span>            <span class="token keyword">if</span> nums<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> k <span class="token operator">></span><span class="token number">0</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"%s->%s"</span><span class="token operator">%</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span>nums<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token string">"%s"</span><span class="token operator">%</span>nums<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这题好像反复调了好几次，这种题就是思路是挺简单的，但是想一次把代码写对，还是挺难的。</p></blockquote><h3 id="435无重叠区间"><a class="markdownIt-Anchor" href="#435无重叠区间"></a> 435–无重叠区间</h3><p>给定一个区间的集合，找到需要移除区间的最小数量，使剩余区间互不重叠。<br />注意:  可以认为区间的终点总是大于它的起点。<br />区间 [1,2] 和 [2,3] 的边界相互“接触”，但没有相互重叠。</p><p>示例 1:<br />输入: [ [1,2], [2,3], [3,4], [1,3] ]<br />输出: 1<br />解释: 移除 [1,3] 后，剩下的区间没有重叠。</p><p>示例 2:  输入: [ [1,2], [1,2], [1,2] ]<br />输出: 2<br />解释: 你需要移除两个 [1,2] 来使剩下的区间没有重叠。</p><p>示例 3:<br />输入: [ [1,2], [2,3] ]<br />输出: 0<br />解释: 你不需要移除任何区间，因为它们已经是无重叠的了。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>     <span class="token keyword">def</span> <span class="token function">eraseOverlapIntervals</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> intervals<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>         num <span class="token operator">=</span> <span class="token number">0</span>         thr <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"-inf"</span><span class="token punctuation">)</span>        <span class="token keyword">while</span> intervals<span class="token punctuation">:</span>                min_index <span class="token operator">=</span> <span class="token number">0</span>                <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>intervals<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                         <span class="token keyword">if</span> intervals<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> intervals<span class="token punctuation">[</span>min_index<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">:</span>                             min_index <span class="token operator">=</span> i                tmp <span class="token operator">=</span> intervals<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>min_index<span class="token punctuation">)</span>                <span class="token keyword">if</span> tmp<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">&lt;</span> thr<span class="token punctuation">:</span>                      num <span class="token operator">+=</span> <span class="token number">1</span>                 <span class="token keyword">else</span><span class="token punctuation">:</span>                  thr <span class="token operator">=</span> tmp<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>         <span class="token keyword">return</span> num<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这题和算法课上的一个例子很像。</p><p>用贪心策略，优先找先结束的。在这里就是 每一对数中第二个数比较小的一定在最优解中，与之矛盾的区间弹出，再找下一个这样的数对。</p></blockquote><h3 id="509斐波那契数"><a class="markdownIt-Anchor" href="#509斐波那契数"></a> 509–斐波那契数</h3><p>斐波那契数，通常用 F(n) 表示，形成的序列称为 斐波那契数列 。该数列由 0 和 1 开始，后面的每一项数字都是前面两项数字的和。也就是：</p><p>F(0) = 0，F(1) = 1<br />F(n) = F(n - 1) + F(n - 2)，其中 n &gt; 1<br />给你 n ，请计算 F(n) 。</p><p>示例 1：</p><p>输入：2<br />输出：1<br />解释：F(2) = F(1) + F(0) = 1 + 0 = 1</p><p>示例 2：</p><p>输入：3<br />输出：2<br />解释：F(3) = F(2) + F(1) = 1 + 1 = 2</p><p>示例 3：</p><p>输入：4<br />输出：3<br />解释：F(4) = F(3) + F(2) = 2 + 1 = 3</p><p>提示：</p><p>0 &lt;= n &lt;= 30</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">fib</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> n <span class="token operator">&lt;</span> <span class="token number">2</span><span class="token punctuation">:</span>    <span class="token keyword">return</span> n    p <span class="token punctuation">,</span> q <span class="token punctuation">,</span> r <span class="token operator">=</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">0</span> <span class="token punctuation">,</span> <span class="token number">1</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    p <span class="token punctuation">,</span> q <span class="token operator">=</span> q <span class="token punctuation">,</span> r    r <span class="token operator">=</span> p <span class="token operator">+</span> q    <span class="token keyword">return</span> r<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>哎，怎么说呢，下次遇到这种题可别用递归了，像是大一新生。</p></blockquote><h3 id="547省份数量"><a class="markdownIt-Anchor" href="#547省份数量"></a> 547–省份数量</h3><p>有 n 个城市，其中一些彼此相连，另一些没有相连。如果城市 a 与城市 b 直接相连，且城市 b 与城市 c 直接相连，那么城市 a 与城市 c 间接相连。</p><p>省份 是一组直接或间接相连的城市，组内不含其他没有相连的城市。</p><p>给你一个 n x n 的矩阵 isConnected ，其中 isConnected[i][j] = 1 表示第 i 个城市和第 j 个城市直接相连，而 isConnected[i][j] = 0 表示二者不直接相连。</p><p>返回矩阵中 省份 的数量。</p><p>示例 1：<br />输入：isConnected = [[1,1,0],[1,1,0],[0,0,1]]<br />输出：2</p><p>示例 2：<br />输入：isConnected = [[1,0,0],[0,1,0],[0,0,1]]<br />输出：3</p><p>提示：</p><p>1 &lt;= n &lt;= 200<br />n == isConnected.length<br />n == isConnected[i].length<br />isConnected[i][j] 为 1 或 0<br />isConnected[i][i] == 1<br />isConnected[i][j] == isConnected[j][i]</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findCircleNum</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> isConnected<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>isConnected<span class="token punctuation">)</span>        label <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> n         queue <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        result <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">if</span> isConnected<span class="token punctuation">:</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> label<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>                    result <span class="token operator">+=</span> <span class="token number">1</span>                    <span class="token keyword">while</span> queue<span class="token punctuation">:</span>                        tmp <span class="token operator">=</span> queue<span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span>                        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>                            <span class="token keyword">if</span> isConnected<span class="token punctuation">[</span>tmp<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> label<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                                label<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>                                queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>j<span class="token punctuation">)</span>                <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>能自主做上一道图论的题，太不容易了。😪</p><p>虽然只是个广度优先遍历而已。</p></blockquote><h3 id="605种花问题"><a class="markdownIt-Anchor" href="#605种花问题"></a> 605–种花问题</h3><p>假设你有一个很长的花坛，一部分地块种植了花，另一部分却没有。可是，花卉不能种植在相邻的地块上，它们会争夺水源，两者都会死去。</p><p>给定一个花坛（表示为一个数组包含0和1，其中0表示没种植花，1表示种植了花），和一个数 n 。能否在不打破种植规则的情况下种入 n 朵花？能则返回True，不能则返回False。</p><p>示例 1:</p><p>输入: flowerbed = [1,0,0,0,1], n = 1<br />输出: True</p><p>示例 2:</p><p>输入: flowerbed = [1,0,0,0,1], n = 2<br />输出: False</p><p>注意:</p><p>数组内已种好的花不会违反种植规则。<br />输入的数组长度范围为 [1, 20000]。<br />n 是非负整数，且不会超过输入数组的大小。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">canPlaceFlowers</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> flowerbed<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token boolean">True</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flowerbed<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">2</span> <span class="token operator">*</span> n <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>flowerbed<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> flowerbed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> flowerbed<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                flowerbed<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>                n <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>flowerbed<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> flowerbed<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> flowerbed<span class="token punctuation">[</span>i<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                    flowerbed<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>                    n <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token keyword">if</span> flowerbed<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span> <span class="token keyword">and</span> flowerbed<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">2</span><span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                flowerbed<span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>                n <span class="token operator">-=</span> <span class="token number">1</span>            <span class="token keyword">return</span> n <span class="token operator">&lt;=</span> <span class="token number">0</span>        <span class="token keyword">else</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> <span class="token boolean">True</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>n <span class="token operator">==</span> <span class="token number">1</span> <span class="token keyword">and</span> <span class="token builtin">max</span><span class="token punctuation">(</span>flowerbed<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">)</span> <span class="token keyword">else</span> <span class="token boolean">False</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这题好像也根据不过的测试用例反复调了几次。</p><p>也是贪心策略吧，题解懒得看，大体上差不多。</p></blockquote><h3 id="617合并二叉树"><a class="markdownIt-Anchor" href="#617合并二叉树"></a> 617–合并二叉树</h3><p>给定两个二叉树，想象当你将它们中的一个覆盖到另一个上时，两个二叉树的一些节点便会重叠。</p><p>你需要将他们合并为一个新的二叉树。合并的规则是如果两个节点重叠，那么将他们的值相加作为节点合并后的新值，否则不为 NULL 的节点将直接作为新二叉树的节点。</p><p>示例 1:</p><p>输入:<br />Tree 1                     Tree 2<br />1                         2<br />/ \                       / \<br />3   2                   1   3<br />/                            \   \<br />5                              4   7<br />输出:<br />合并后的树:<br />3<br />/ <br />4   5<br />/ \   \<br />5   4   7<br />注意: 合并必须从两个树的根节点开始。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token comment"># Definition for a binary tree node.</span><span class="token keyword">class</span> <span class="token class-name">TreeNode</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> val<span class="token punctuation">,</span> left <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">,</span>right <span class="token operator">=</span> <span class="token boolean">None</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>val <span class="token operator">=</span> val        self<span class="token punctuation">.</span>left <span class="token operator">=</span> left        self<span class="token punctuation">.</span>right <span class="token operator">=</span> right<span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">mergeTrees</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> t1<span class="token punctuation">:</span> TreeNode<span class="token punctuation">,</span> t2<span class="token punctuation">:</span> TreeNode<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> TreeNode<span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> t1<span class="token punctuation">:</span>    <span class="token keyword">return</span> t2    <span class="token keyword">if</span> <span class="token keyword">not</span> t2<span class="token punctuation">:</span>    <span class="token keyword">return</span> t1    merged <span class="token operator">=</span> TreeNode<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>val <span class="token operator">+</span> t2<span class="token punctuation">.</span>val<span class="token punctuation">)</span>    merged<span class="token punctuation">.</span>left <span class="token operator">=</span> self<span class="token punctuation">.</span>mergeTrees<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>left<span class="token punctuation">,</span>t2<span class="token punctuation">.</span>left<span class="token punctuation">)</span>    merged<span class="token punctuation">.</span>right <span class="token operator">=</span> self<span class="token punctuation">.</span>mergeTrees<span class="token punctuation">(</span>t1<span class="token punctuation">.</span>right<span class="token punctuation">.</span>t2<span class="token punctuation">.</span>right<span class="token punctuation">)</span>    <span class="token keyword">return</span> merged<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>这个好像是前几个遇到的题，不算难。但是我好像还是参考答案了。</p></blockquote><h3 id="830寻找字符串中较大分组"><a class="markdownIt-Anchor" href="#830寻找字符串中较大分组"></a> 830–寻找字符串中较大分组</h3><p>在一个由小写字母构成的字符串 s 中，包含由一些连续的相同字符所构成的分组。</p><p>例如，在字符串 s = “abbxxxxzyy” 中，就含有 “a”, “bb”, “xxxx”, “z” 和 “yy” 这样的一些分组。</p><p>分组可以用区间 [start, end] 表示，其中 start 和 end 分别表示该分组的起始和终止位置的下标。上例中的 “xxxx” 分组用区间表示为 [3,6] 。</p><p>我们称所有包含大于或等于三个连续字符的分组为 较大分组 。</p><p>找到每一个 较大分组 的区间，按起始位置下标递增顺序排序后，返回结果。</p><p>示例 1：</p><p>输入：s = “abbxxxxzzy”<br />输出：[[3,6]]<br />解释：“xxxx” 是一个起始于 3 且终止于 6 的较大分组。</p><p>示例 2：</p><p>输入：s = “abc”<br />输出：[]<br />解释：“a”,“b” 和 “c” 均不是符合要求的较大分组。</p><p>示例 3：</p><p>输入：s = “abcdddeeeeaabbbcd”<br />输出：[[3,5],[6,9],[12,14]]<br />解释：较大分组为 “ddd”, “eeee” 和 “bbb”</p><p>示例 4：</p><p>输入：s = “aba”<br />输出：[]</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">largeGroupPositions</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">&lt;</span> <span class="token number">3</span><span class="token punctuation">:</span>            <span class="token keyword">return</span> result        i <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">while</span> i <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token number">2</span><span class="token punctuation">:</span>            j <span class="token operator">=</span> i <span class="token operator">+</span> <span class="token number">1</span>            <span class="token keyword">while</span> j <span class="token operator">&lt;</span> <span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> s<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">!=</span> s<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">:</span>                    <span class="token keyword">break</span>                j <span class="token operator">+=</span> <span class="token number">1</span>            <span class="token keyword">if</span> j <span class="token operator">-</span> i <span class="token operator">></span> <span class="token number">2</span><span class="token punctuation">:</span>                result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token punctuation">[</span>i<span class="token punctuation">,</span>j <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                i <span class="token operator">=</span> j            <span class="token keyword">else</span><span class="token punctuation">:</span>                i <span class="token operator">+=</span> <span class="token number">1</span>                <span class="token keyword">return</span> result<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>大概就是遍历试，记录下标。</p></blockquote><h3 id="1018可被-5-整除的二进制前缀"><a class="markdownIt-Anchor" href="#1018可被-5-整除的二进制前缀"></a> 1018–可被 5 整除的二进制前缀</h3><p>给定由若干 0 和 1 组成的数组 A。我们定义 N_i：从 A[0] 到 A[i] 的第 i 个子数组被解释为一个二进制数（从最高有效位到最低有效位）。</p><p>返回布尔值列表 answer，只有当 N_i 可以被 5 整除时，答案 answer[i] 为 true，否则为 false。</p><p>示例 1：</p><p>输入：[0,1,1]<br />输出：[true,false,false]<br />解释：<br />输入数字为 0, 01, 011；也就是十进制中的 0, 1, 3 。只有第一个数可以被 5 整除，因此 answer[0] 为真。<br />示例 2：</p><p>输入：[1,1,1]<br />输出：[false,false,false]<br />示例 3：</p><p>输入：[0,1,1,1,1,1]<br />输出：[true,false,false,false,true,false]<br />示例 4：</p><p>输入：[1,1,1,0,1]<br />输出：[false,false,false,false,false]</p><p>提示：</p><p>1 &lt;= A.length &lt;= 30000<br />A[i] 为 0 或 1</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">prefixesDivBy5</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> A<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">bool</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    一开始暴力解题  超时了    后来看了答案  发现每次增加一个数只是上一个数的左移加当前数值 也就是2倍加当前数值  快了一些    再后来发现 被 5 整除只需要记录个位数就行了 也就是除 10 取余数    但是，对于个位数 6 ，6 = 1 + 5， 6 * 2 = （1 + 5）* 2，6 * 2 % 10 = (1 + 5) * 2 % 10 = 2     因此每次记录除以 5 的余数即可。     '''</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>A<span class="token punctuation">)</span>        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token boolean">False</span><span class="token punctuation">]</span> <span class="token operator">*</span> n        tmp <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            tmp <span class="token operator">=</span> <span class="token punctuation">(</span>tmp <span class="token operator">*</span> <span class="token number">2</span> <span class="token operator">+</span> A<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">%</span> <span class="token number">5</span>            <span class="token keyword">if</span> tmp <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                ans<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">True</span>        <span class="token keyword">return</span> ans <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>一开始暴力解题  超时了 🤕<br />后来看了答案  发现每次增加一个数只是上一个数的左移加当前数值 也就是2倍加当前数值  快了一些<br />再后来发现 被 5 整除只需要记录个位数就行了 也就是除 10 取余数<br />又因为，对于个位数 6 ，6 = 1 + 5， 6 * 2 = （1 + 5）* 2，6 * 2 % 10 = (1 + 5) * 2 % 10 = 2<br />因此每次记录除以 5 的余数即可。</p></blockquote><h3 id="1046最后一块石头的重量"><a class="markdownIt-Anchor" href="#1046最后一块石头的重量"></a> 1046–最后一块石头的重量</h3><p>有一堆石头，每块石头的重量都是正整数。</p><p>每一回合，从中选出两块 最重的 石头，然后将它们一起粉碎。假设石头的重量分别为 x 和 y，且 x &lt;= y。那么粉碎的可能结果如下：</p><p>如果 x == y，那么两块石头都会被完全粉碎；<br />如果 x != y，那么重量为 x 的石头将会完全粉碎，而重量为 y 的石头新重量为 y-x。<br />最后，最多只会剩下一块石头。返回此石头的重量。如果没有石头剩下，就返回 0。</p><p>示例：</p><p>输入：[2,7,4,1,8,1]<br />输出：1<br />解释：<br />先选出 7 和 8，得到 1，所以数组转换为 [2,4,1,1,1]，<br />再选出 2 和 4，得到 2，所以数组转换为 [2,1,1,1]，<br />接着是 2 和 1，得到 1，所以数组转换为 [1,1,1]，<br />最后选出 1 和 1，得到 0，最终数组转换为 [1]，这就是最后剩下那块石头的重量。</p><p>提示：</p><p>1 &lt;= stones.length &lt;= 30<br />1 &lt;= stones[i] &lt;= 1000</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">lastStoneWeight</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stones<span class="token punctuation">:</span> <span class="token builtin">list</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">while</span> <span class="token number">1</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">0</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token number">0</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> stones<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            Max1 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span>            stones<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>stones<span class="token punctuation">.</span>index<span class="token punctuation">(</span>Max1<span class="token punctuation">)</span><span class="token punctuation">)</span>            Max2 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span>            stones<span class="token punctuation">.</span>pop<span class="token punctuation">(</span>stones<span class="token punctuation">.</span>index<span class="token punctuation">(</span>Max2<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">if</span> Max1 <span class="token operator">!=</span> Max2<span class="token punctuation">:</span>                stones<span class="token punctuation">.</span>append<span class="token punctuation">(</span>Max1 <span class="token operator">-</span> Max2 <span class="token keyword">if</span> Max1 <span class="token operator">></span> Max2 <span class="token keyword">else</span> Max2 <span class="token operator">-</span> Max1<span class="token punctuation">)</span>    <span class="token comment">#### heapq 实现大根堆</span>    <span class="token keyword">def</span> <span class="token function">lastStoneWeight_1</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stones<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token comment"># 初始化</span>        heap <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span>stone <span class="token keyword">for</span> stone <span class="token keyword">in</span> stones<span class="token punctuation">]</span>        heapq<span class="token punctuation">.</span>heapify<span class="token punctuation">(</span>heap<span class="token punctuation">)</span>        <span class="token comment"># 模拟</span>        <span class="token keyword">while</span> <span class="token builtin">len</span><span class="token punctuation">(</span>heap<span class="token punctuation">)</span> <span class="token operator">></span> <span class="token number">1</span><span class="token punctuation">:</span>            x<span class="token punctuation">,</span>y <span class="token operator">=</span> heapq<span class="token punctuation">.</span>heappop<span class="token punctuation">(</span>heap<span class="token punctuation">)</span><span class="token punctuation">,</span>heapq<span class="token punctuation">.</span>heappop<span class="token punctuation">(</span>heap<span class="token punctuation">)</span>            <span class="token keyword">if</span> x <span class="token operator">!=</span> y<span class="token punctuation">:</span>                heapq<span class="token punctuation">.</span>heappush<span class="token punctuation">(</span>heap<span class="token punctuation">,</span>x<span class="token operator">-</span>y<span class="token punctuation">)</span>        <span class="token keyword">if</span> heap<span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token operator">-</span>heap<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        <span class="token keyword">return</span> <span class="token number">0</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>我的代码用了好多函数和方法，感觉有点无耻。但是 C++ 里的 vector 也有类似的功能吧。</p><p>我也不太确定做这种题 方法和函数 怎么用才不算过分。</p></blockquote><h3 id="1232缀点成线"><a class="markdownIt-Anchor" href="#1232缀点成线"></a> 1232–缀点成线</h3><p>在一个 XY 坐标系中有一些点，我们用数组 coordinates 来分别记录它们的坐标，其中 coordinates[i] = [x, y] 表示横坐标为 x、纵坐标为 y 的点。</p><p>请你来判断，这些点是否在该坐标系中属于同一条直线上，是则返回 true，否则请返回 false。</p><p>示例 1：</p><p>输入：coordinates = [[1,2],[2,3],[3,4],[4,5],[5,6],[6,7]]<br />输出：true<br />示例 2：</p><p>输入：coordinates = [[1,1],[2,2],[3,4],[4,5],[5,6],[7,7]]<br />输出：false</p><p>提示：</p><p>2 &lt;= coordinates.length &lt;= 1000<br />coordinates[i].length == 2<br />-10^4 &lt;= coordinates[i][0], coordinates[i][1] &lt;= 10^4<br />coordinates 中不含重复的点</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">checkStraightLine</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> coordinates<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">bool</span><span class="token punctuation">:</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>coordinates<span class="token punctuation">)</span>        <span class="token keyword">if</span> n <span class="token operator">==</span> <span class="token number">2</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token boolean">True</span>        dx <span class="token operator">=</span> coordinates<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        dy <span class="token operator">=</span> coordinates<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            dx1 <span class="token operator">=</span> coordinates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>            dy1 <span class="token operator">=</span> coordinates<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">-</span> coordinates<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>            <span class="token keyword">if</span> dx1 <span class="token operator">*</span> dy <span class="token operator">!=</span> dy1 <span class="token operator">*</span> dx<span class="token punctuation">:</span>                 <span class="token keyword">return</span> <span class="token boolean">False</span>        <span class="token keyword">return</span> <span class="token boolean">True</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>注意，比较斜率相等与否，把除法转换成乘法，一方面可以避免除 0 的问题发生，另一方面乘法的计算似乎比除法简单一些。</p></blockquote><h2 id=""><a class="markdownIt-Anchor" href="#"></a> ❌</h2><h3 id="123买股票的最佳时机三"><a class="markdownIt-Anchor" href="#123买股票的最佳时机三"></a> 123–买股票的最佳时机（三）</h3><p>给定一个数组，它的第 i 个元素是一支给定的股票在第 i 天的价格。</p><p>设计一个算法来计算你所能获取的最大利润。你最多可以完成 两笔 交易。</p><p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p>示例 1:</p><p>输入：prices = [3,3,5,0,0,3,1,4]<br />输出：6<br />解释：在第 4 天（股票价格 = 0）的时候买入，在第 6 天（股票价格 = 3）的时候卖出，这笔交易所能获得利润 = 3-0 = 3 。随后，在第 7 天（股票价格 = 1）的时候买入，在第 8 天 （股票价格 = 4）的时候卖出，这笔交易所能获得利润 = 4-1 = 3 。<br />示例 2：</p><p>输入：prices = [1,2,3,4,5]<br />输出：4<br />解释：在第 1 天（股票价格 = 1）的时候买入，在第 5 天 （股票价格 = 5）的时候卖出, 这笔交易所能获得利润 = 5-1 = 4 。   注意你不能在第 1 天和第 2 天接连购买股票，之后再将它们卖出。  因为这样属于同时参与了多笔交易，你必须在再次购买前出售掉之前的股票。<br />示例 3：</p><p>输入：prices = [7,6,4,3,1]<br />输出：0<br />解释：在这个情况下, 没有交易完成, 所以最大利润为 0。<br />示例 4：</p><p>输入：prices = [1]<br />输出：0</p><p>提示：</p><p>1 &lt;= prices.length &lt;= 105<br />0 &lt;= prices[i] &lt;= 105</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> prices<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        buy1 <span class="token operator">=</span> buy2 <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span>        sell1 <span class="token operator">=</span> sell2 <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            buy1 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy1<span class="token punctuation">,</span><span class="token operator">-</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            sell1 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell1<span class="token punctuation">,</span>buy1<span class="token operator">+</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            buy2 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy2<span class="token punctuation">,</span>sell1<span class="token operator">-</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>            sell2 <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell2<span class="token punctuation">,</span>buy2<span class="token operator">+</span>prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> sell2<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的动态规划。</p></blockquote><h3 id="188买股票的最佳时机四"><a class="markdownIt-Anchor" href="#188买股票的最佳时机四"></a> 188–买股票的最佳时机（四）</h3><p>给定一个整数数组 prices ，它的第 i 个元素 prices[i] 是一支给定的股票在第 i 天的价格。<br />设计一个算法来计算你所能获取的最大利润。你最多可以完成 k 笔交易。</p><p>注意：你不能同时参与多笔交易（你必须在再次购买前出售掉之前的股票）。</p><p>示例 1：<br />输入：k = 2, prices = [2,4,1]<br />输出：2<br />解释：在第 1 天 (股票价格 = 2) 的时候买入，在第 2 天 (股票价格 = 4) 的时候卖出，这笔交易所能获得利润 = 4-2 = 2 。</p><p>示例 2：<br />输入：k = 2, prices = [3,2,6,5,0,3]<br />输出：7<br />解释：在第 2 天 (股票价格 = 2) 的时候买入，在第 3 天 (股票价格 = 6) 的时候卖出, 这笔交易所能获得利润 = 6-2 = 4 。随后，在第 5 天 (股票价格 = 0) 的时候买入，在第 6 天 (股票价格 = 3) 的时候卖出, 这笔交易所能获得利润 = 3-0 = 3 。</p><p>提示：<br />0 &lt;= k &lt;= 109<br />0 &lt;= prices.length &lt;= 1000<br />0 &lt;= prices[i] &lt;= 1000</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maxProfit</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span> <span class="token punctuation">,</span> prices<span class="token punctuation">:</span> <span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> <span class="token keyword">not</span> prices<span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token number">0</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span>        k <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span>        buy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        sell <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span><span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"-inf"</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        buy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>        buy<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        sell<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span>i <span class="token operator">-</span> <span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>buy<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span>n<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">maxProfit_Opt</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> k<span class="token punctuation">:</span><span class="token builtin">int</span> <span class="token punctuation">,</span> prices<span class="token punctuation">:</span><span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token keyword">if</span> <span class="token keyword">not</span> prices<span class="token punctuation">:</span>    <span class="token keyword">return</span> <span class="token number">0</span>    n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>prices<span class="token punctuation">)</span>    k <span class="token operator">=</span> <span class="token builtin">min</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n <span class="token operator">//</span> <span class="token number">2</span><span class="token punctuation">)</span>    buy <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>k<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    sell <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> <span class="token punctuation">(</span>K<span class="token operator">+</span><span class="token number">1</span><span class="token punctuation">)</span>    buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token operator">-</span>prices<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token punctuation">,</span><span class="token number">0</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    buy<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> sell<span class="token punctuation">[</span>i<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">float</span><span class="token punctuation">(</span><span class="token string">"-inf"</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>    buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token punctuation">,</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    buy<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>buy<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>sell<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">-</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    sell<span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">[</span>j<span class="token punctuation">]</span><span class="token punctuation">,</span>buy<span class="token punctuation">[</span>j<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">+</span> prices<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span>    <span class="token keyword">return</span> <span class="token builtin">max</span><span class="token punctuation">(</span>sell<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的动态规划。</p></blockquote><h3 id="239滑动窗口最大值"><a class="markdownIt-Anchor" href="#239滑动窗口最大值"></a> 239–滑动窗口最大值</h3><p>给你一个整数数组 nums，有一个大小为 k 的滑动窗口从数组的最左侧移动到数组的最右侧。你只可以看到在滑动窗口内的 k 个数字。滑动窗口每次只向右移动一位。</p><p>返回滑动窗口中的最大值。</p><p>示例 1：</p><p>输入：nums = [1,3,-1,-3,5,3,6,7], k = 3<br />输出：[3,3,5,5,6,7]<br />解释：<br />滑动窗口的位置                最大值</p><hr /><p>[1  3  -1] -3  5  3  6  7       3<br />1 [3  -1  -3] 5  3  6  7       3<br />1  3 [-1  -3  5] 3  6  7       5<br />1  3  -1 [-3  5  3] 6  7       5<br />1  3  -1  -3 [5  3  6] 7       6<br />1  3  -1  -3  5 [3  6  7]      7<br />示例 2：</p><p>输入：nums = [1], k = 1<br />输出：[1]<br />示例 3：</p><p>输入：nums = [1,-1], k = 1<br />输出：[1,-1]<br />示例 4：</p><p>输入：nums = [9,11], k = 2<br />输出：[11]<br />示例 5：</p><p>输入：nums = [4,-2], k = 2<br />输出：[4]</p><p>提示：</p><p>1 &lt;= nums.length &lt;= 105<br />-104 &lt;= nums[i] &lt;= 104<br />1 &lt;= k &lt;= nums.length</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">maxSlidingWindow</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        <span class="token triple-quoted-string string">'''        头脑简单的超时解法        '''</span>        result <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span> <span class="token operator">-</span> k <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            result<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token builtin">max</span><span class="token punctuation">(</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">:</span>i<span class="token operator">+</span>k<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> result    <span class="token keyword">def</span> <span class="token function">maxSlidingWindow_2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> nums<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> k<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>nums<span class="token punctuation">)</span>        <span class="token comment"># 注意 Python 默认的优先队列是小根堆</span>        q <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">(</span><span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span> <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">)</span><span class="token punctuation">]</span>        heapq<span class="token punctuation">.</span>heapify<span class="token punctuation">(</span>q<span class="token punctuation">)</span>        ans <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token operator">-</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">]</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>k<span class="token punctuation">,</span> n<span class="token punctuation">)</span><span class="token punctuation">:</span>            heapq<span class="token punctuation">.</span>heappush<span class="token punctuation">(</span>q<span class="token punctuation">,</span> <span class="token punctuation">(</span><span class="token operator">-</span>nums<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">,</span> i<span class="token punctuation">)</span><span class="token punctuation">)</span>            <span class="token keyword">while</span> q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">&lt;=</span> i <span class="token operator">-</span> k<span class="token punctuation">:</span>                heapq<span class="token punctuation">.</span>heappop<span class="token punctuation">(</span>q<span class="token punctuation">)</span>            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span><span class="token operator">-</span>q<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> ans<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的优先队列（堆）。</p></blockquote><h3 id="684冗余连接"><a class="markdownIt-Anchor" href="#684冗余连接"></a> 684–冗余连接</h3><p>在本问题中, 树指的是一个连通且无环的无向图。</p><p>输入一个图，该图由一个有着N个节点 (节点值不重复1, 2, …, N) 的树及一条附加的边构成。附加的边的两个顶点包含在1到N中间，这条附加的边不属于树中已存在的边。</p><p>结果图是一个以边组成的二维数组。每一个边的元素是一对[u, v] ，满足 u &lt; v，表示连接顶点u 和v的无向图的边。</p><p>返回一条可以删去的边，使得结果图是一个有着N个节点的树。如果有多个答案，则返回二维数组中最后出现的边。答案边 [u, v] 应满足相同的格式 u &lt; v。</p><p>示例 1：</p><p>输入: [[1,2], [1,3], [2,3]]<br />输出: [2,3]<br />解释: 给定的无向图为:<br />1<br />/ <br />2 - 3<br />示例 2：</p><p>输入: [[1,2], [2,3], [3,4], [1,4], [1,5]]<br />输出: [1,4]<br />解释: 给定的无向图为:<br />5 - 1 - 2<br />|   |<br />4 - 3<br />注意:</p><p>输入的二维数组大小在 3 到 1000。<br />二维数组中的整数在1到N之间，其中N是输入数组的大小。</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">findRedundantConnection</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> edges<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        nodesCount <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>edges<span class="token punctuation">)</span>        parent <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>nodesCount <span class="token operator">+</span> <span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">find</span><span class="token punctuation">(</span>index<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">!=</span> index<span class="token punctuation">:</span>                parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span> <span class="token operator">=</span> find<span class="token punctuation">(</span>parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span><span class="token punctuation">)</span>            <span class="token keyword">return</span> parent<span class="token punctuation">[</span>index<span class="token punctuation">]</span>                <span class="token keyword">def</span> <span class="token function">union</span><span class="token punctuation">(</span>index1<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> index2<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            parent<span class="token punctuation">[</span>find<span class="token punctuation">(</span>index1<span class="token punctuation">)</span><span class="token punctuation">]</span> <span class="token operator">=</span> find<span class="token punctuation">(</span>index2<span class="token punctuation">)</span>        <span class="token keyword">for</span> node1<span class="token punctuation">,</span> node2 <span class="token keyword">in</span> edges<span class="token punctuation">:</span>            <span class="token keyword">if</span> find<span class="token punctuation">(</span>node1<span class="token punctuation">)</span> <span class="token operator">!=</span> find<span class="token punctuation">(</span>node2<span class="token punctuation">)</span><span class="token punctuation">:</span>                union<span class="token punctuation">(</span>node1<span class="token punctuation">,</span> node2<span class="token punctuation">)</span>            <span class="token keyword">else</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span>node1<span class="token punctuation">,</span> node2<span class="token punctuation">]</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的并查集。</p></blockquote><h3 id="803敲砖块"><a class="markdownIt-Anchor" href="#803敲砖块"></a> 803–敲砖块</h3><p>有一个 m x n 的二元网格，其中 1 表示砖块，0 表示空白。砖块 稳定（不会掉落）的前提是：</p><p>一块砖直接连接到网格的顶部，或者<br />至少有一块相邻（4 个方向之一）砖块 稳定 不会掉落时<br />给你一个数组 hits ，这是需要依次消除砖块的位置。每当消除 hits[i] = (rowi, coli) 位置上的砖块时，对应位置的砖块（若存在）会消失，然后其他的砖块可能因为这一消除操作而掉落。一旦砖块掉落，它会立即从网格中消失（即，它不会落在其他稳定的砖块上）。</p><p>返回一个数组 result ，其中 result[i] 表示第 i 次消除操作对应掉落的砖块数目。</p><p>注意，消除可能指向是没有砖块的空白位置，如果发生这种情况，则没有砖块掉落。</p><p>示例 1：</p><p>输入：grid = [[1,0,0,0],[1,1,1,0]], hits = [[1,0]]<br />输出：[2]<br />解释：<br />网格开始为：<br />[[1,0,0,0]，<br />[1,1,1,0]]<br />消除 (1,0) 处加粗的砖块，得到网格：<br />[[1,0,0,0]<br />[0,1,1,0]]<br />两个加粗的砖不再稳定，因为它们不再与顶部相连，也不再与另一个稳定的砖相邻，因此它们将掉落。得到网格：<br />[[1,0,0,0],<br />[0,0,0,0]]<br />因此，结果为 [2] 。<br />示例 2：</p><p>输入：grid = [[1,0,0,0],[1,1,0,0]], hits = [[1,1],[1,0]]<br />输出：[0,0]<br />解释：<br />网格开始为：<br />[[1,0,0,0],<br />[1,1,0,0]]<br />消除 (1,1) 处加粗的砖块，得到网格：<br />[[1,0,0,0],<br />[1,0,0,0]]<br />剩下的砖都很稳定，所以不会掉落。网格保持不变：<br />[[1,0,0,0],<br />[1,0,0,0]]<br />接下来消除 (1,0) 处加粗的砖块，得到网格：<br />[[1,0,0,0],<br />[0,0,0,0]]<br />剩下的砖块仍然是稳定的，所以不会有砖块掉落。<br />因此，结果为 [0,0] 。</p><p>提示：</p><p>m == grid.length<br />n == grid[i].length<br />1 &lt;= m, n &lt;= 200<br />grid[i][j] 为 0 或 1<br />1 &lt;= hits.length &lt;= 4 * 104<br />hits[i].length == 2<br />0 &lt;= xi &lt;= m - 1<br />0 &lt;= yi &lt;= n - 1<br />所有 (xi, yi) 互不相同</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">UnionFind</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>father <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span>self<span class="token punctuation">.</span>size_of_set <span class="token operator">=</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token keyword">def</span> <span class="token function">get_size_of_set</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''获取所在连通块的大小'''</span><span class="token keyword">return</span> self<span class="token punctuation">.</span>size_of_set<span class="token punctuation">[</span>self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">find</span><span class="token punctuation">(</span>size<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span>root <span class="token operator">=</span> x<span class="token keyword">while</span> self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>root<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token boolean">None</span><span class="token punctuation">:</span>root <span class="token operator">=</span> self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>root<span class="token punctuation">]</span><span class="token comment"># 路径压缩</span><span class="token keyword">while</span> x <span class="token operator">!=</span> root<span class="token punctuation">:</span>original_father <span class="token operator">=</span> self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span>self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> rootx <span class="token operator">=</span> original_father<span class="token keyword">return</span> root<span class="token keyword">def</span> <span class="token function">is_connected</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>x<span class="token punctuation">)</span> <span class="token operator">==</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">merge</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span>root_x<span class="token punctuation">,</span>root_y <span class="token operator">=</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>y<span class="token punctuation">)</span><span class="token keyword">if</span> root_x <span class="token operator">!=</span> root_y<span class="token punctuation">:</span>self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>root_x<span class="token punctuation">]</span> <span class="token operator">=</span> root_y<span class="token comment"># 更新根节点连通块数量</span>self<span class="token punctuation">.</span>size_of_set<span class="token punctuation">[</span>root_y<span class="token punctuation">]</span> <span class="token operator">+=</span> self<span class="token punctuation">.</span>size_of_set<span class="token punctuation">[</span>root_x<span class="token punctuation">]</span><span class="token keyword">del</span> self<span class="token punctuation">.</span>size_of_set<span class="token punctuation">[</span>root_x<span class="token punctuation">]</span><span class="token keyword">def</span> <span class="token function">add</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>father<span class="token punctuation">:</span>self<span class="token punctuation">.</span>father<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token boolean">None</span>self<span class="token punctuation">.</span>size_of_set<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>CEILING <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span>self<span class="token punctuation">.</span>DIRECTION <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">initalize</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>uf<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>hits<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''初始化'''</span><span class="token comment"># 添加天花板</span>uf<span class="token punctuation">.</span>add<span class="token punctuation">(</span>self<span class="token punctuation">.</span>CEILING<span class="token punctuation">)</span><span class="token comment"># 敲掉所有要敲掉的砖块</span><span class="token keyword">for</span> x<span class="token punctuation">,</span>y <span class="token keyword">in</span> hits<span class="token punctuation">:</span>grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span><span class="token comment"># 连接，合并剩余的砖块</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>uf<span class="token punctuation">.</span>add<span class="token punctuation">(</span><span class="token punctuation">(</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>m<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> grid<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>self<span class="token punctuation">.</span>merge_neighbors<span class="token punctuation">(</span>uf<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>i<span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token comment"># 与天花板合并</span><span class="token keyword">for</span> j <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">[</span>j<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token punctuation">:</span>uf<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>j<span class="token punctuation">)</span><span class="token punctuation">,</span>self<span class="token punctuation">.</span>CEILING<span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">is_valid</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">return</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> x <span class="token operator">&lt;</span> m <span class="token keyword">and</span> <span class="token number">0</span> <span class="token operator">&lt;=</span> y <span class="token operator">&lt;</span> n <span class="token keyword">and</span> grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token number">1</span><span class="token keyword">def</span> <span class="token function">merge_neighbors</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>uf<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''与上下左右的砖块合并'''</span><span class="token keyword">for</span> dx<span class="token punctuation">,</span>dy <span class="token keyword">in</span> self<span class="token punctuation">.</span>DIRECTION<span class="token punctuation">:</span>nx<span class="token punctuation">,</span>ny <span class="token operator">=</span> x <span class="token operator">+</span> dx<span class="token punctuation">,</span>y<span class="token operator">+</span>dy<span class="token keyword">if</span> <span class="token keyword">not</span> self<span class="token punctuation">.</span>is_valid<span class="token punctuation">(</span>nx<span class="token punctuation">,</span>ny<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">continue</span>uf<span class="token punctuation">.</span>merge<span class="token punctuation">(</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span>nx<span class="token punctuation">,</span>ny<span class="token punctuation">)</span><span class="token punctuation">)</span>    <span class="token keyword">def</span> <span class="token function">hitBricks</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> grid<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">,</span> hits<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>    uf <span class="token operator">=</span> UnionFind<span class="token punctuation">(</span><span class="token punctuation">)</span>    m<span class="token punctuation">,</span>n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>grid<span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token builtin">len</span><span class="token punctuation">(</span>grid<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span>    res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">+</span> <span class="token builtin">len</span><span class="token punctuation">(</span>hits<span class="token punctuation">)</span>    <span class="token comment"># 初始化</span>    self<span class="token punctuation">.</span>initalize<span class="token punctuation">(</span>uf<span class="token punctuation">,</span>m<span class="token punctuation">,</span>n<span class="token punctuation">,</span>grid<span class="token punctuation">,</span>hits<span class="token punctuation">)</span>    <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>hits<span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">:</span>    x<span class="token punctuation">,</span>y <span class="token operator">=</span> hits<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">,</span>hits<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span>    <span class="token comment"># 还原敲击</span>    grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>    <span class="token comment"># 敲的地方原本就不是砖块</span>    <span class="token keyword">if</span> grid<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span>y<span class="token punctuation">]</span> <span class="token operator">!=</span> <span class="token number">1</span><span class="token punctuation">:</span>    <span class="token keyword">continue</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>哎，练练敲代码吧。</p></blockquote><h3 id="947移除最多的同行或同列石头"><a class="markdownIt-Anchor" href="#947移除最多的同行或同列石头"></a> 947–移除最多的同行或同列石头</h3><p>n 块石头放置在二维平面中的一些整数坐标点上。每个坐标点上最多只能有一块石头。</p><p>如果一块石头的 同行或者同列 上有其他石头存在，那么就可以移除这块石头。</p><p>给你一个长度为 n 的数组 stones ，其中 stones[i] = [xi, yi] 表示第 i 块石头的位置，返回 可以移除的石子 的最大数量。</p><p>示例 1：</p><p>输入：stones = [[0,0],[0,1],[1,0],[1,2],[2,1],[2,2]]<br />输出：5<br />解释：一种移除 5 块石头的方法如下所示：</p><ol><li>移除石头 [2,2] ，因为它和 [2,1] 同行。</li><li>移除石头 [2,1] ，因为它和 [0,1] 同列。</li><li>移除石头 [1,2] ，因为它和 [1,0] 同行。</li><li>移除石头 [1,0] ，因为它和 [0,0] 同列。</li><li>移除石头 [0,1] ，因为它和 [0,0] 同行。<br />石头 [0,0] 不能移除，因为它没有与另一块石头同行/列。<br />示例 2：</li></ol><p>输入：stones = [[0,0],[0,2],[1,1],[2,0],[2,2]]<br />输出：3<br />解释：一种移除 3 块石头的方法如下所示：</p><ol><li>移除石头 [2,2] ，因为它和 [2,0] 同行。</li><li>移除石头 [2,0] ，因为它和 [0,0] 同列。</li><li>移除石头 [0,2] ，因为它和 [0,0] 同行。<br />石头 [0,0] 和 [1,1] 不能移除，因为它们没有与另一块石头同行/列。<br />示例 3：</li></ol><p>输入：stones = [[0,0]]<br />输出：0<br />解释：[0,0] 是平面上唯一一块石头，所以不可以移除它。</p><p>提示：</p><p>1 &lt;= stones.length &lt;= 1000<br />0 &lt;= xi, yi &lt;= 104<br />不会有两块石头放在同一个坐标点上</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span><span class="token keyword">def</span> <span class="token function">removeStones</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stones<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''优化建图 + 深度优先'''</span>n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span>edge <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>rec <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span><span class="token keyword">for</span> i<span class="token punctuation">,</span><span class="token punctuation">(</span>x<span class="token punctuation">,</span>y<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span><span class="token punctuation">:</span>rec<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span>rec<span class="token punctuation">[</span><span class="token number">1000</span> <span class="token operator">+</span> y<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">for</span> vec <span class="token keyword">in</span> rec<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>k <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>vec<span class="token punctuation">)</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span>k<span class="token punctuation">)</span><span class="token punctuation">:</span>edge<span class="token punctuation">[</span>vec<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>vec<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>edge<span class="token punctuation">[</span>vec<span class="token punctuation">[</span>i<span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>vec<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token punctuation">:</span>vis<span class="token punctuation">.</span>add<span class="token punctuation">(</span>node<span class="token punctuation">)</span><span class="token keyword">for</span> y <span class="token keyword">in</span> edge<span class="token punctuation">[</span>node<span class="token punctuation">]</span><span class="token punctuation">:</span><span class="token keyword">if</span> y <span class="token keyword">not</span> <span class="token keyword">in</span> vis<span class="token punctuation">:</span>dfs<span class="token punctuation">(</span>y<span class="token punctuation">)</span>vis <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>num <span class="token operator">=</span> <span class="token number">0</span><span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span><span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> vis<span class="token punctuation">:</span>num <span class="token operator">+=</span> <span class="token number">1</span>dfs<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token keyword">return</span> n <span class="token operator">-</span> num    <span class="token keyword">def</span> <span class="token function">removeStones_1</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stones<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    深度优先    '''</span>        n <span class="token operator">=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span>        edge <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> <span class="token punctuation">(</span>x1<span class="token punctuation">,</span> y1<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">for</span> j<span class="token punctuation">,</span> <span class="token punctuation">(</span>x2<span class="token punctuation">,</span> y2<span class="token punctuation">)</span> <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> x1 <span class="token operator">==</span> x2 <span class="token keyword">or</span> y1 <span class="token operator">==</span> y2<span class="token punctuation">:</span>                    edge<span class="token punctuation">[</span>i<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>j<span class="token punctuation">)</span>                <span class="token keyword">def</span> <span class="token function">dfs</span><span class="token punctuation">(</span>x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            vis<span class="token punctuation">.</span>add<span class="token punctuation">(</span>x<span class="token punctuation">)</span>            <span class="token keyword">for</span> y <span class="token keyword">in</span> edge<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">:</span>                <span class="token keyword">if</span> y <span class="token keyword">not</span> <span class="token keyword">in</span> vis<span class="token punctuation">:</span>                    dfs<span class="token punctuation">(</span>y<span class="token punctuation">)</span>                vis <span class="token operator">=</span> <span class="token builtin">set</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        num <span class="token operator">=</span> <span class="token number">0</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> i <span class="token keyword">not</span> <span class="token keyword">in</span> vis<span class="token punctuation">:</span>                num <span class="token operator">+=</span> <span class="token number">1</span>                dfs<span class="token punctuation">(</span>i<span class="token punctuation">)</span>                <span class="token keyword">return</span> n <span class="token operator">-</span> num    <span class="token keyword">def</span> <span class="token function">removeStones_2</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> stones<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>    <span class="token triple-quoted-string string">'''    优化建图 + 并查集    '''</span>        dsu <span class="token operator">=</span> DisjointSetUnion<span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> stones<span class="token punctuation">:</span>            dsu<span class="token punctuation">.</span>unionSet<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y <span class="token operator">+</span> <span class="token number">10000</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> <span class="token builtin">len</span><span class="token punctuation">(</span>stones<span class="token punctuation">)</span> <span class="token operator">-</span> dsu<span class="token punctuation">.</span>numberOfConnectedComponent<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token keyword">class</span> <span class="token class-name">DisjointSetUnion</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>f <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        self<span class="token punctuation">.</span>rank <span class="token operator">=</span> <span class="token builtin">dict</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">find</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> x <span class="token keyword">not</span> <span class="token keyword">in</span> self<span class="token punctuation">.</span>f<span class="token punctuation">:</span>            self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> x            self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> <span class="token number">1</span>            <span class="token keyword">return</span> x        <span class="token keyword">if</span> self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">:</span>            <span class="token keyword">return</span> x        self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">unionSet</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        fx<span class="token punctuation">,</span> fy <span class="token operator">=</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>y<span class="token punctuation">)</span>        <span class="token keyword">if</span> fx <span class="token operator">==</span> fy<span class="token punctuation">:</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fx<span class="token punctuation">]</span> <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fy<span class="token punctuation">]</span><span class="token punctuation">:</span>            fx<span class="token punctuation">,</span> fy <span class="token operator">=</span> fy<span class="token punctuation">,</span> fx        self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fx<span class="token punctuation">]</span> <span class="token operator">+=</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fy<span class="token punctuation">]</span>        self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>fy<span class="token punctuation">]</span> <span class="token operator">=</span> fx    <span class="token keyword">def</span> <span class="token function">numberOfConnectedComponent</span><span class="token punctuation">(</span>self<span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">return</span> <span class="token builtin">sum</span><span class="token punctuation">(</span><span class="token number">1</span> <span class="token keyword">for</span> x<span class="token punctuation">,</span> fa <span class="token keyword">in</span> self<span class="token punctuation">.</span>f<span class="token punctuation">.</span>items<span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">if</span> x <span class="token operator">==</span> fa<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>对于这种题，我现在的目标只有一个，就是看见能看出题目背景下隐藏的是什么数据结构或者算法问题。</p><p>刚看第一眼以为是图？看着不像啊。动态规划？也不会。手工算法都想不出来，更别提写代码了。😪</p></blockquote><h3 id="1202交换字符串中的元素"><a class="markdownIt-Anchor" href="#1202交换字符串中的元素"></a> 1202–交换字符串中的元素</h3><p>给你一个字符串 s，以及该字符串中的一些「索引对」数组 pairs，其中 pairs[i] = [a, b] 表示字符串中的两个索引（编号从 0 开始）。</p><p>你可以 任意多次交换 在 pairs 中任意一对索引处的字符。</p><p>返回在经过若干次交换后，s 可以变成的按字典序最小的字符串。</p><p>示例 1:</p><p>输入：s = “dcab”, pairs = [[0,3],[1,2]]<br />输出：“bacd”<br />解释：<br />交换 s[0] 和 s[3], s = “bcad”<br />交换 s[1] 和 s[2], s = “bacd”<br />示例 2：</p><p>输入：s = “dcab”, pairs = [[0,3],[1,2],[0,2]]<br />输出：“abcd”<br />解释：<br />交换 s[0] 和 s[3], s = “bcad”<br />交换 s[0] 和 s[2], s = “acbd”<br />交换 s[1] 和 s[2], s = “abcd”<br />示例 3：</p><p>输入：s = “cba”, pairs = [[0,1],[1,2]]<br />输出：“abc”<br />解释：<br />交换 s[0] 和 s[1], s = “bca”<br />交换 s[1] 和 s[2], s = “bac”<br />交换 s[0] 和 s[1], s = “abc”</p><p>提示：</p><p>1 &lt;= s.length &lt;= 10^5<br />0 &lt;= pairs.length &lt;= 10^5<br />0 &lt;= pairs[i][0], pairs[i][1] &lt; s.length<br />s 中只含有小写英文字母</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">DisjointSetUnion</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''并查集 还要学 先记录下来'''</span>    <span class="token keyword">def</span> <span class="token function">__init__</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        self<span class="token punctuation">.</span>n <span class="token operator">=</span> n        self<span class="token punctuation">.</span>rank <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span> <span class="token operator">*</span> n        self<span class="token punctuation">.</span>f <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">def</span> <span class="token function">find</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">int</span><span class="token punctuation">:</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">==</span> x<span class="token punctuation">:</span>            <span class="token keyword">return</span> x        self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span> <span class="token operator">=</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">)</span>        <span class="token keyword">return</span> self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>x<span class="token punctuation">]</span>        <span class="token keyword">def</span> <span class="token function">unionSet</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> x<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> y<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">)</span><span class="token punctuation">:</span>        fx<span class="token punctuation">,</span> fy <span class="token operator">=</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>x<span class="token punctuation">)</span><span class="token punctuation">,</span> self<span class="token punctuation">.</span>find<span class="token punctuation">(</span>y<span class="token punctuation">)</span>        <span class="token keyword">if</span> fx <span class="token operator">==</span> fy<span class="token punctuation">:</span>            <span class="token keyword">return</span>        <span class="token keyword">if</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fx<span class="token punctuation">]</span> <span class="token operator">&lt;</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fy<span class="token punctuation">]</span><span class="token punctuation">:</span>            fx<span class="token punctuation">,</span> fy <span class="token operator">=</span> fy<span class="token punctuation">,</span> fx        self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fx<span class="token punctuation">]</span> <span class="token operator">+=</span> self<span class="token punctuation">.</span>rank<span class="token punctuation">[</span>fy<span class="token punctuation">]</span>        self<span class="token punctuation">.</span>f<span class="token punctuation">[</span>fy<span class="token punctuation">]</span> <span class="token operator">=</span> fx        <span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span>    <span class="token keyword">def</span> <span class="token function">smallestStringWithSwaps</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> s<span class="token punctuation">:</span> <span class="token builtin">str</span><span class="token punctuation">,</span> pairs<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> <span class="token builtin">str</span><span class="token punctuation">:</span>        dsu <span class="token operator">=</span> DisjointSetUnion<span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> x<span class="token punctuation">,</span> y <span class="token keyword">in</span> pairs<span class="token punctuation">:</span>            dsu<span class="token punctuation">.</span>unionSet<span class="token punctuation">(</span>x<span class="token punctuation">,</span> y<span class="token punctuation">)</span>                mp <span class="token operator">=</span> collections<span class="token punctuation">.</span>defaultdict<span class="token punctuation">(</span><span class="token builtin">list</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i<span class="token punctuation">,</span> ch <span class="token keyword">in</span> <span class="token builtin">enumerate</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">:</span>            mp<span class="token punctuation">[</span>dsu<span class="token punctuation">.</span>find<span class="token punctuation">(</span>i<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>ch<span class="token punctuation">)</span>                <span class="token keyword">for</span> vec <span class="token keyword">in</span> mp<span class="token punctuation">.</span>values<span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            vec<span class="token punctuation">.</span>sort<span class="token punctuation">(</span>reverse<span class="token operator">=</span><span class="token boolean">True</span><span class="token punctuation">)</span>                ans <span class="token operator">=</span> <span class="token builtin">list</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span><span class="token builtin">len</span><span class="token punctuation">(</span>s<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">:</span>            x <span class="token operator">=</span> dsu<span class="token punctuation">.</span>find<span class="token punctuation">(</span>i<span class="token punctuation">)</span>            ans<span class="token punctuation">.</span>append<span class="token punctuation">(</span>mp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">[</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span>            mp<span class="token punctuation">[</span>x<span class="token punctuation">]</span><span class="token punctuation">.</span>pop<span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token keyword">return</span> <span class="token string">""</span><span class="token punctuation">.</span>join<span class="token punctuation">(</span>ans<span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的并查集。</p></blockquote><h3 id="1203项目管理"><a class="markdownIt-Anchor" href="#1203项目管理"></a> 1203–项目管理</h3><p>公司共有 n 个项目和  m 个小组，每个项目要不无人接手，要不就由 m 个小组之一负责。</p><p>group[i] 表示第 i 个项目所属的小组，如果这个项目目前无人接手，那么 group[i] 就等于 -1。（项目和小组都是从零开始编号的）小组可能存在没有接手任何项目的情况。</p><p>请你帮忙按要求安排这些项目的进度，并返回排序后的项目列表：</p><p>同一小组的项目，排序后在列表中彼此相邻。<br />项目之间存在一定的依赖关系，我们用一个列表 beforeItems 来表示，其中 beforeItems[i] 表示在进行第 i 个项目前（位于第 i 个项目左侧）应该完成的所有项目。<br />如果存在多个解决方案，只需要返回其中任意一个即可。如果没有合适的解决方案，就请返回一个 空列表 。</p><p>示例 1：</p><p>输入：n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3,6],[],[],[]]<br />输出：[6,3,4,1,5,2,0,7]<br />示例 2：</p><p>输入：n = 8, m = 2, group = [-1,-1,1,0,0,1,0,-1], beforeItems = [[],[6],[5],[6],[3],[],[4],[]]<br />输出：[]<br />解释：与示例 1 大致相同，但是在排序后的列表中，4 必须放在 6 的前面。</p><p>提示：</p><p>1 &lt;= m &lt;= n &lt;= 3 * 104<br />group.length == beforeItems.length == n<br />-1 &lt;= group[i] &lt;= m - 1<br />0 &lt;= beforeItems[i].length &lt;= n - 1<br />0 &lt;= beforeItems[i][j] &lt;= n - 1<br />i != beforeItems[i][j]<br />beforeItems[i] 不含重复元素</p><pre class="line-numbers language-python" data-language="python"><code class="language-python"><span class="token keyword">class</span> <span class="token class-name">Solution</span><span class="token punctuation">:</span><span class="token triple-quoted-string string">'''两次拓扑排序'''</span>    <span class="token keyword">def</span> <span class="token function">topological_sort</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span>items<span class="token punctuation">,</span>indegree<span class="token punctuation">,</span>neighbors<span class="token punctuation">)</span><span class="token punctuation">:</span>        <span class="token comment"># 建立队列和访问顺序</span>        queue <span class="token operator">=</span> collections<span class="token punctuation">.</span>deque<span class="token punctuation">(</span><span class="token punctuation">)</span>        res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token comment"># 初始化队列</span>        <span class="token keyword">for</span> item <span class="token keyword">in</span> items<span class="token punctuation">:</span>            <span class="token keyword">if</span> <span class="token keyword">not</span> indegree<span class="token punctuation">[</span>item<span class="token punctuation">]</span><span class="token punctuation">:</span>                queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>item<span class="token punctuation">)</span>                        <span class="token keyword">if</span> <span class="token keyword">not</span> queue<span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token comment"># BFS</span>        <span class="token keyword">while</span> queue<span class="token punctuation">:</span>            cur <span class="token operator">=</span> queue<span class="token punctuation">.</span>popleft<span class="token punctuation">(</span><span class="token punctuation">)</span>            res<span class="token punctuation">.</span>append<span class="token punctuation">(</span>cur<span class="token punctuation">)</span>                        <span class="token comment"># 遍历邻居节点</span>            <span class="token keyword">for</span> neighbor <span class="token keyword">in</span> neighbors<span class="token punctuation">[</span>cur<span class="token punctuation">]</span><span class="token punctuation">:</span>                indegree<span class="token punctuation">[</span>neighbor<span class="token punctuation">]</span> <span class="token operator">-=</span> <span class="token number">1</span>                <span class="token keyword">if</span> <span class="token keyword">not</span> indegree<span class="token punctuation">[</span>neighbor<span class="token punctuation">]</span><span class="token punctuation">:</span>                    queue<span class="token punctuation">.</span>append<span class="token punctuation">(</span>neighbor<span class="token punctuation">)</span>                            <span class="token keyword">return</span> res            <span class="token keyword">def</span> <span class="token function">sortItems</span><span class="token punctuation">(</span>self<span class="token punctuation">,</span> n<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> m<span class="token punctuation">:</span> <span class="token builtin">int</span><span class="token punctuation">,</span> group<span class="token punctuation">:</span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">,</span> beforeItems<span class="token punctuation">:</span> List<span class="token punctuation">[</span>List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">)</span> <span class="token operator">-</span><span class="token operator">></span> List<span class="token punctuation">[</span><span class="token builtin">int</span><span class="token punctuation">]</span><span class="token punctuation">:</span>        max_group_id <span class="token operator">=</span> m        <span class="token keyword">for</span> task <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            <span class="token keyword">if</span> group<span class="token punctuation">[</span>task<span class="token punctuation">]</span> <span class="token operator">==</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">:</span>                group<span class="token punctuation">[</span>task<span class="token punctuation">]</span> <span class="token operator">=</span> max_group_id                max_group_id <span class="token operator">+=</span> <span class="token number">1</span>                        task_indegree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> n            group_indegree <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span> <span class="token operator">*</span> max_group_id        task_neighbors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">]</span>        group_neighbors <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_group_id<span class="token punctuation">)</span><span class="token punctuation">]</span>        group_to_tasks <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">[</span><span class="token punctuation">]</span> <span class="token keyword">for</span> _ <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_group_id<span class="token punctuation">)</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> task <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>n<span class="token punctuation">)</span><span class="token punctuation">:</span>            group_to_tasks<span class="token punctuation">[</span>group<span class="token punctuation">[</span>task<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>task<span class="token punctuation">)</span>                        <span class="token keyword">for</span> prerequisite <span class="token keyword">in</span> beforeItems<span class="token punctuation">[</span>task<span class="token punctuation">]</span><span class="token punctuation">:</span>                                <span class="token comment"># 判断相关联的两个项目是否属于同一组</span>                <span class="token keyword">if</span> group<span class="token punctuation">[</span>prerequisite<span class="token punctuation">]</span> <span class="token operator">!=</span> group<span class="token punctuation">[</span>task<span class="token punctuation">]</span><span class="token punctuation">:</span>                                        <span class="token comment"># 不是同组，给小组建图</span>                    group_indegree<span class="token punctuation">[</span>group<span class="token punctuation">[</span>task<span class="token punctuation">]</span><span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>                    group_neighbors<span class="token punctuation">[</span>group<span class="token punctuation">[</span>prerequisite<span class="token punctuation">]</span><span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>group<span class="token punctuation">[</span>task<span class="token punctuation">]</span><span class="token punctuation">)</span>                <span class="token keyword">else</span><span class="token punctuation">:</span>                    <span class="token comment"># 同组，给组内项目建图</span>                    task_indegree<span class="token punctuation">[</span>task<span class="token punctuation">]</span> <span class="token operator">+=</span> <span class="token number">1</span>                    task_neighbors<span class="token punctuation">[</span>prerequisite<span class="token punctuation">]</span><span class="token punctuation">.</span>append<span class="token punctuation">(</span>task<span class="token punctuation">)</span>                            res <span class="token operator">=</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token comment"># 得到小组的访问顺序</span>        group_queue <span class="token operator">=</span> self<span class="token punctuation">.</span>topological_sort<span class="token punctuation">(</span><span class="token punctuation">[</span>i <span class="token keyword">for</span> i <span class="token keyword">in</span> <span class="token builtin">range</span><span class="token punctuation">(</span>max_group_id<span class="token punctuation">)</span><span class="token punctuation">]</span><span class="token punctuation">,</span>group_indegree<span class="token punctuation">,</span>group_neighbors<span class="token punctuation">)</span>        <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>group_queue<span class="token punctuation">)</span> <span class="token operator">!=</span> max_group_id<span class="token punctuation">:</span> <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>                <span class="token keyword">for</span> group_id <span class="token keyword">in</span> group_queue<span class="token punctuation">:</span>            <span class="token comment"># 得到每组项目的访问顺序</span>            task_queue <span class="token operator">=</span> self<span class="token punctuation">.</span>topological_sort<span class="token punctuation">(</span>group_to_tasks<span class="token punctuation">[</span>group_id<span class="token punctuation">]</span><span class="token punctuation">,</span>task_indegree<span class="token punctuation">,</span>task_neighbors<span class="token punctuation">)</span>            <span class="token keyword">if</span> <span class="token builtin">len</span><span class="token punctuation">(</span>task_queue<span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token builtin">len</span><span class="token punctuation">(</span>group_to_tasks<span class="token punctuation">[</span>group_id<span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">:</span>                <span class="token keyword">return</span> <span class="token punctuation">[</span><span class="token punctuation">]</span>            res <span class="token operator">+=</span> task_queue                            <span class="token keyword">return</span> res<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>可怕的拓扑排序。</p></blockquote>    <div id="aplayer-ScWhLuzv" class="aplayer aplayer-tag-marker meting-tag-marker"         data-id="5073700008" data-server="netease" data-type="playlist" data-mode="circulation" data-autoplay="true" data-mutex="true" data-listmaxheight="340px" data-preload="auto" data-theme="#ad7a86" data-listfolded="true" data-volume=" 0.2"    ></div>]]></content>
      
      
      
        <tags>
            
            <tag> LeetCode </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>视网膜机制启发的颜色恒常算法</title>
      <link href="swmjzqfdyshcsf/"/>
      <url>swmjzqfdyshcsf/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab5308251039fd99033d414bc8f9ec5f4869f2dea67de87ffd99cb0ddff27d34"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">点击输入密码.</span>      </label>    </div>  </div></div><script src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 计算机视觉 </tag>
            
            <tag> 科研 </tag>
            
            <tag> Idea </tag>
            
            <tag> 颜色恒常 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>资源共享</title>
      <link href="zygx/"/>
      <url>zygx/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><blockquote><p>你要找的软件都在这了</p></blockquote><a id="more"></a>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>『转』中文文案排版指北</title>
      <link href="zwwapbzb/"/>
      <url>zwwapbzb/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script><h2 id="空格"><a class="markdownIt-Anchor" href="#空格"></a> 空格</h2><p>「有研究显示，打字的时候不喜欢在中文和英文之间加空格的人，感情路都走得很辛苦，有七成的比例会在 34 岁的时候跟自己不爱的人结婚，而其余三成的人最后只能把遗产留给自己的猫。毕竟爱情跟书写都需要适时地留白。</p><p>与大家共勉之。」——<a href="https://github.com/vinta/pangu.js">vinta/paranoid-auto-spacing</a></p><a id="more"></a><h3 id="中英文之间需要增加空格"><a class="markdownIt-Anchor" href="#中英文之间需要增加空格"></a> 中英文之间需要增加空格</h3><p>正确：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。</p></blockquote><p>错误：</p><blockquote><p>在LeanCloud上，数据存储是围绕<code>AVObject</code>进行的。</p><p>在 LeanCloud上，数据存储是围绕<code>AVObject</code> 进行的。</p></blockquote><p>完整的正确用法：</p><blockquote><p>在 LeanCloud 上，数据存储是围绕 <code>AVObject</code> 进行的。每个 <code>AVObject</code> 都包含了与 JSON 兼容的 key-value 对应的数据。数据是 schema-free 的，你不需要在每个 <code>AVObject</code> 上提前指定存在哪些键，只要直接设定对应的 key-value 即可。</p></blockquote><p>例外：「豆瓣FM」等产品名词，按照官方所定义的格式书写。</p><h3 id="中文与数字之间需要增加空格"><a class="markdownIt-Anchor" href="#中文与数字之间需要增加空格"></a> 中文与数字之间需要增加空格</h3><p>正确：</p><blockquote><p>今天出去买菜花了 5000 元。</p></blockquote><p>错误：</p><blockquote><p>今天出去买菜花了 5000元。</p><p>今天出去买菜花了5000元。</p></blockquote><h3 id="数字与单位之间需要增加空格"><a class="markdownIt-Anchor" href="#数字与单位之间需要增加空格"></a> 数字与单位之间需要增加空格</h3><p>正确：</p><blockquote><p>我家的光纤入屋宽带有 10 Gbps，SSD 一共有 20 TB</p></blockquote><p>错误：</p><blockquote><p>我家的光纤入屋宽带有 10Gbps，SSD 一共有 20TB</p></blockquote><p>例外：度 / 百分比与数字之间不需要增加空格：</p><p>正确：</p><blockquote><p>今天是 233° 的高温。</p><p>新 MacBook Pro 有 15% 的 CPU 性能提升。</p></blockquote><p>错误：</p><blockquote><p>今天是 233 ° 的高温。</p><p>新 MacBook Pro 有 15 % 的 CPU 性能提升。</p></blockquote><h3 id="全角标点与其他字符之间不加空格"><a class="markdownIt-Anchor" href="#全角标点与其他字符之间不加空格"></a> 全角标点与其他字符之间不加空格</h3><p>正确：</p><blockquote><p>刚刚买了一部 iPhone，好开心！</p></blockquote><p>错误：</p><blockquote><p>刚刚买了一部 iPhone ，好开心！</p><p>刚刚买了一部 iPhone， 好开心！</p></blockquote><h3 id="用-text-spacing-来挽救"><a class="markdownIt-Anchor" href="#用-text-spacing-来挽救"></a> 用 <code>text-spacing</code> 来挽救？</h3><p>CSS Text Module Level 4 的 <a href="https://www.w3.org/TR/css-text-4/#text-spacing-property"><code>text-spacing</code></a> 和 Microsoft 的 <a href="https://msdn.microsoft.com/library/ms531164(v=vs.85).aspx"><code>-ms-text-autospace</code></a> 可以实现自动为中英文之间增加空白。不过目前并未普及，另外在其他应用场景，例如 macOS、iOS、Windows 等用户介面目前并不存在这个特性，所以请继续保持随手加空格的习惯。</p><h2 id="标点符号"><a class="markdownIt-Anchor" href="#标点符号"></a> 标点符号</h2><h3 id="不重复使用标点符号"><a class="markdownIt-Anchor" href="#不重复使用标点符号"></a> 不重复使用标点符号</h3><p>正确：</p><blockquote><p>德国队竟然战胜了巴西队！</p><p>她竟然对你说「喵」？！</p></blockquote><p>错误：</p><blockquote><p>德国队竟然战胜了巴西队！！</p><p>德国队竟然战胜了巴西队！！！！！！！！</p><p>她竟然对你说「喵」？？！！</p><p>她竟然对你说「喵」？！？！？？！！</p></blockquote><h2 id="全角和半角"><a class="markdownIt-Anchor" href="#全角和半角"></a> 全角和半角</h2><p>不明白什么是全角（全形）与半角（半形）符号？请查看维基百科词条『<a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2">全形和半形</a>』。</p><h3 id="使用全角中文标点"><a class="markdownIt-Anchor" href="#使用全角中文标点"></a> 使用全角中文标点</h3><p>正确：</p><blockquote><p>嗨！你知道嘛？今天前台的小妹跟我说「喵」了哎！</p><p>核磁共振成像（NMRI）是什么原理都不知道？JFGI！</p></blockquote><p>错误：</p><blockquote><p>嗨! 你知道嘛? 今天前台的小妹跟我说 “喵” 了哎！</p><p>嗨!你知道嘛?今天前台的小妹跟我说&quot;喵&quot;了哎！</p><p>核磁共振成像 (NMRI) 是什么原理都不知道? JFGI!</p><p>核磁共振成像(NMRI)是什么原理都不知道?JFGI!</p></blockquote><h3 id="数字使用半角字符"><a class="markdownIt-Anchor" href="#数字使用半角字符"></a> 数字使用半角字符</h3><p>正确：</p><blockquote><p>这个蛋糕只卖 1000 元。</p></blockquote><p>错误：</p><blockquote><p>这个蛋糕只卖 １０００ 元。</p></blockquote><p>例外：在设计稿、宣传海报中如出现极少量数字的情形时，为方便文字对齐，是可以使用全形数字的。</p><h3 id="遇到完整的英文整句-特殊名词其内容使用半角标点"><a class="markdownIt-Anchor" href="#遇到完整的英文整句-特殊名词其内容使用半角标点"></a> 遇到完整的英文整句、特殊名词，其内容使用半角标点</h3><p>正确：</p><blockquote><p>贾伯斯那句话是怎么说的？「Stay hungry, stay foolish.」</p><p>推荐你阅读《Hackers &amp; Painters: Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><p>错误：</p><blockquote><p>贾伯斯那句话是怎么说的？「Stay hungry，stay foolish。」</p><p>推荐你阅读《Hackers＆Painters：Big Ideas from the Computer Age》，非常的有趣。</p></blockquote><h2 id="名词"><a class="markdownIt-Anchor" href="#名词"></a> 名词</h2><h3 id="专有名词使用正确的大小写"><a class="markdownIt-Anchor" href="#专有名词使用正确的大小写"></a> 专有名词使用正确的大小写</h3><p>大小写相关用法原属于英文书写范畴，不属于本 wiki 讨论内容，在这里只对部分易错用法进行简述。</p><p>正确：</p><blockquote><p>使用 GitHub 登录</p><p>我们的客户有 GitHub、Foursquare、Microsoft Corporation、Google、Facebook, Inc.。</p></blockquote><p>错误：</p><blockquote><p>使用 github 登录</p><p>使用 GITHUB 登录</p><p>使用 Github 登录</p><p>使用 gitHub 登录</p><p>使用 gｲんĤЦ8 登录</p><p>我们的客户有 github、foursquare、microsoft corporation、google、facebook, inc.。</p><p>我们的客户有 GITHUB、FOURSQUARE、MICROSOFT CORPORATION、GOOGLE、FACEBOOK, INC.。</p><p>我们的客户有 Github、FourSquare、MicroSoft Corporation、Google、FaceBook, Inc.。</p><p>我们的客户有 gitHub、fourSquare、microSoft Corporation、google、faceBook, Inc.。</p><p>我们的客户有 gｲんĤЦ8、ｷouЯƧquﾑгє、๓เςг๏ร๏Ŧt ς๏гק๏гคtเ๏ภn、900913、ƒ4ᄃëв๏๏к, IПᄃ.。</p></blockquote><p>注意：当网页中需要配合整体视觉风格而出现全部大写／小写的情形，HTML 中请使用标淮的大小写规范进行书写；并通过 <code>text-transform: uppercase;</code>／<code>text-transform: lowercase;</code> 对表现形式进行定义。</p><h3 id="不要使用不地道的缩写"><a class="markdownIt-Anchor" href="#不要使用不地道的缩写"></a> 不要使用不地道的缩写</h3><p>正确：</p><blockquote><p>我们需要一位熟悉 JavaScript、HTML5，至少理解一种框架（如 Backbone.js、AngularJS、React 等）的前端开发者。</p></blockquote><p>错误：</p><blockquote><p>我们需要一位熟悉 Js、h5，至少理解一种框架（如 backbone、angular、RJS 等）的 FED。</p></blockquote><h2 id="争议"><a class="markdownIt-Anchor" href="#争议"></a> 争议</h2><p>以下用法略带有个人色彩，即：无论是否遵循下述规则，从语法的角度来讲都是<strong>正确</strong>的。</p><h3 id="链接之间增加空格"><a class="markdownIt-Anchor" href="#链接之间增加空格"></a> 链接之间增加空格</h3><p>用法：</p><blockquote><p>请 <a href="#">提交一个 issue</a> 并分配给相关同事。</p><p>访问我们网站的最新动态，请 <a href="#">点击这里</a> 进行订阅！</p></blockquote><p>对比用法：</p><blockquote><p>请<a href="#">提交一个 issue</a>并分配给相关同事。</p><p>访问我们网站的最新动态，请<a href="#">点击这里</a>进行订阅！</p></blockquote><h3 id="简体中文使用直角引号"><a class="markdownIt-Anchor" href="#简体中文使用直角引号"></a> 简体中文使用直角引号</h3><p>用法：</p><blockquote><p>「老师，『有条不紊』的『紊』是什么意思？」</p></blockquote><p>对比用法：</p><blockquote><p>“老师，‘有条不紊’的‘紊’是什么意思？”</p></blockquote><h2 id="工具"><a class="markdownIt-Anchor" href="#工具"></a> 工具</h2><table><thead><tr><th>仓库</th><th>语言</th></tr></thead><tbody><tr><td><a href="https://github.com/vinta/paranoid-auto-spacing">vinta/paranoid-auto-spacing</a></td><td>JavaScript</td></tr><tr><td><a href="https://github.com/huei90/pangu.node">huei90/pangu.node</a></td><td>Node.js</td></tr><tr><td><a href="https://github.com/huacnlee/auto-correct">huacnlee/auto-correct</a></td><td>Ruby</td></tr><tr><td><a href="https://github.com/sparanoid/space-lover">sparanoid/space-lover</a></td><td>PHP (WordPress)</td></tr><tr><td><a href="https://github.com/NauxLiu/auto-correct">nauxliu/auto-correct</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/jxlwqq/chinese-typesetting">jxlwqq/chinese-typesetting</a></td><td>PHP</td></tr><tr><td><a href="https://github.com/hotoo/pangu.vim">hotoo/pangu.vim</a></td><td>Vim</td></tr><tr><td><a href="https://github.com/sparanoid/grunt-auto-spacing">sparanoid/grunt-auto-spacing</a></td><td>Node.js (Grunt)</td></tr><tr><td><a href="https://github.com/hjiang/scripts/blob/master/add-space-between-latin-and-cjk">hjiang/scripts/add-space-between-latin-and-cjk</a></td><td>Python</td></tr><tr><td><a href="https://github.com/hustcc/hint">hustcc/hint</a></td><td>Python</td></tr><tr><td><a href="https://github.com/studygolang/autocorrect">studygolang/autocorrect</a></td><td>Go</td></tr></tbody></table><h2 id="谁在这样做"><a class="markdownIt-Anchor" href="#谁在这样做"></a> 谁在这样做？</h2><table><thead><tr><th>网站</th><th>文案</th><th>UGC</th></tr></thead><tbody><tr><td><a href="https://www.apple.com/cn/">Apple 中国</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.apple.com/hk/">Apple 香港</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.apple.com/tw/">Apple 台湾</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.microsoft.com/zh-cn/">Microsoft 中国</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.microsoft.com/zh-hk/">Microsoft 香港</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.microsoft.com/zh-tw/">Microsoft 台湾</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://leancloud.cn/">LeanCloud</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://www.v2ex.com/">V2EX</a></td><td>是</td><td>是</td></tr><tr><td><a href="https://apple4us.com/">Apple4us</a></td><td>是</td><td>N/A</td></tr><tr><td><a href="https://ruby-china.org/">Ruby China</a></td><td>是</td><td>标题达成</td></tr><tr><td><a href="https://phphub.org/">PHPHub</a></td><td>是</td><td>标题达成</td></tr><tr><td><a href="https://sspai.com/">少数派</a></td><td>是</td><td>N/A</td></tr></tbody></table><h2 id="参考文献"><a class="markdownIt-Anchor" href="#参考文献"></a> 参考文献</h2><ul><li><a href="https://www.thoughtco.com/guidelines-for-using-capital-letters-1691724">Guidelines for Using Capital Letters - ThoughtCo.</a></li><li><a href="https://en.wikipedia.org/wiki/Letter_case">Letter case - Wikipedia</a></li><li><a href="https://en.oxforddictionaries.com/grammar/punctuation">Punctuation - Oxford Dictionaries</a></li><li><a href="https://owl.english.purdue.edu/owl/section/1/6/">Punctuation - The Purdue OWL</a></li><li><a href="https://www.wikihow.com/Use-English-Punctuation-Correctly">How to Use English Punctuation Correctly - wikiHow</a></li><li><a href="https://zh.opensuse.org/index.php?title=Help:%E6%A0%BC%E5%BC%8F">格式 - openSUSE</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%85%A8%E5%BD%A2%E5%92%8C%E5%8D%8A%E5%BD%A2">全形和半形 - 维基百科</a></li><li><a href="https://zh.wikipedia.org/wiki/%E5%BC%95%E8%99%9F">引号 - 维基百科</a></li><li><a href="https://zh.wikipedia.org/wiki/%E7%96%91%E5%95%8F%E9%A9%9A%E5%98%86%E8%99%9F">疑问惊叹号 - 维基百科</a></li></ul>]]></content>
      
      
      
        <tags>
            
            <tag> 笔记 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>元旦快乐</title>
      <link href="ydkl/"/>
      <url>ydkl/</url>
      
        <content type="html"><![CDATA[<link rel="stylesheet" class="aplayer-secondary-style-marker" href="/assets/css/APlayer.min.css"><script src="/assets/js/APlayer.min.js" class="aplayer-secondary-script-marker"></script><script class="meting-secondary-script-marker" src="/assets/js/Meting.min.js"></script>        <div id="aplayer-lefjXHvX" class="aplayer aplayer-tag-marker" style="margin-bottom: 20px;">            <pre class="aplayer-lrc-content"></pre>        </div>        <script>          var ap = new APlayer({            element: document.getElementById("aplayer-lefjXHvX"),            narrow: false,            autoplay: false,            showlrc: false,            music: {              title: "第一天",              author: "孙燕姿",              url: "https://cdn.jsdelivr.net/gh/blogrepo/music-2021/孙燕姿 - 第一天.mp3",              pic: "https://gitee.com/blog-img/images/raw/master/20/10/20210105142121.jpg",              lrc: ""            }          });          window.aplayers || (window.aplayers = []);          window.aplayers.push(ap);        </script><p><img src="https://gitee.com/blog-img/images/raw/master/20/10/20210107124808.jpg" alt="045BEBB13431C7F17BBC24A6896C9183" / loading="lazy"></p><a id="more"></a><h2 id="日历第一页"><a class="markdownIt-Anchor" href="#日历第一页"></a> 日历第一页</h2><p>2021年，从一部美好的爱情电影开始。</p><blockquote><p>我希望你能有一个值得自豪的一生，如果你发现生活和你想象的不一样，我希望你能够有勇气，重新启程。</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/20210107133858.jpg" alt="" / loading="lazy"></p><h2 id="海大的礼物"><a class="markdownIt-Anchor" href="#海大的礼物"></a> 海大的礼物</h2><blockquote><p>平平安安，心想事成。</p></blockquote><p><img src="https://gitee.com/blog-img/images/raw/master/20/10/20210107132853.jpg" alt="蜂蜜浏览器_C7121DF7E593DB75E41F5078E39E2BDD" / loading="lazy"></p><p><img src="https://gitee.com/blog-img/images/raw/master/20/10/20210107134119.jpg" alt="蜂蜜浏览器_A0EBDF2B73940BB970CEF356AFA7D0F0" / loading="lazy"></p><h2 id="实验室的小伙伴"><a class="markdownIt-Anchor" href="#实验室的小伙伴"></a> 实验室的小伙伴</h2><blockquote><p>感谢珏哥！</p></blockquote><p><img src="https://cdn.jsdelivr.net/gh/wgx-dh/img/20210107135351.jpg" alt="F23627A4AA12C5F6DB44A595DFB7DF20" / loading="lazy"></p><h2 id="亲爱的小霜"><a class="markdownIt-Anchor" href="#亲爱的小霜"></a> 亲爱的小霜✨</h2><blockquote><p>先后不重要啦🤞</p><p>祝我们新的一年成果丰硕！哈哈哈！</p></blockquote><p><img src="https://gitee.com/blog-img/images/raw/master/20/10/20210107124513.jpg" alt="6F78BE26951575977C48048EED4B0CFF" / loading="lazy"></p>]]></content>
      
      
      
        <tags>
            
            <tag> 结绳记事 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
